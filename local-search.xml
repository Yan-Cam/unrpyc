<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>SAP增强</title>
    <link href="/unrpyc/2023/10/11/SAP%E5%A2%9E%E5%BC%BA/"/>
    <url>/unrpyc/2023/10/11/SAP%E5%A2%9E%E5%BC%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="SAP增强"><a href="#SAP增强" class="headerlink" title="SAP增强"></a>SAP增强</h1><blockquote><p>针对SAP标准功能的扩展</p></blockquote><h2 id="基于SAP源代码的增强"><a href="#基于SAP源代码的增强" class="headerlink" title="基于SAP源代码的增强"></a>基于SAP源代码的增强</h2><blockquote><p>对SAP所预留的空的子过程进行编码，用户可以编辑此子过程，并在这个子过程中添加自定义的代码，以增加SAP标准程序的控制功能</p></blockquote><h3 id="第一代出口-User-exit"><a href="#第一代出口-User-exit" class="headerlink" title="第一代出口-User exit"></a>第一代出口-User exit</h3><h4 id="如何查找增强点（代码搜索查找）——以SD用户出口为例"><a href="#如何查找增强点（代码搜索查找）——以SD用户出口为例" class="headerlink" title="如何查找增强点（代码搜索查找）——以SD用户出口为例"></a>如何查找增强点（代码搜索查找）——以SD用户出口为例</h4><ul><li>SD及MM较多的程序都是基于源码控制来实现增强的</li><li>开发类：<code>VMOD</code></li><li>出口程序：<code>include</code>中</li></ul><h4 id="查找方法"><a href="#查找方法" class="headerlink" title="查找方法"></a>查找方法</h4><ol><li>进入<code>SPRO</code>事务，点击绿色标记区域</li><li>依次点开绿色标记区域找到需要修改的条目，并查看实施指南活动文档</li><li>通过英文文档的描述找出对应出口</li><li>进入<code>SE80</code>事务，找到此前对应出口的包含文件，并在红色标记区域进行增强代码插入操作</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20231011221039645.png" alt="第一代查找步骤一"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20231011221649988.png" alt="第一代查找步骤二"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20231011222258073.png" alt="第一代查找步骤三"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20231011222829418.png" alt="第一代查找步骤四"></p><p>视频演示流程地址：<a href="https://www.bilibili.com/video/BV1Fu411u7pa/">SAP增强——第一种用户出口（源代码） (bilibili.com)</a></p><p><strong>注意：需要申请access key才能更改的，相当于修改了SAP的标准程序，而且系统更新后增强会被覆盖</strong></p><h2 id="基于函数的增强"><a href="#基于函数的增强" class="headerlink" title="基于函数的增强"></a>基于函数的增强</h2><blockquote><p>SAP为此类出口提供了相应的函数，依据函数结构指定的传入&#x2F;传出参数，程序执行时，调用该函数并检查相应的代码</p></blockquote><h3 id="第二代出口-Customer-Exit"><a href="#第二代出口-Customer-Exit" class="headerlink" title="第二代出口-Customer Exit"></a>第二代出口-Customer Exit</h3><p>出口对象（是否激活）—— 函数（表：<code>MODSAP</code>）</p><ul><li><p><code>NAME</code>：出口对象的名称</p></li><li><p><code>TYPE</code>：出口对象的类型（E：功能退出&#x2F;S：屏幕&#x2F;T：表&#x2F;C：GUI代码）</p></li><li><p><code>MEMBER</code>：函数</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20231011225052427.png" alt="出口对象图示"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20231011225309171.png" alt="MODSAP表图示"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20231011225831968.png" alt="MODSAP表数据图示"></p><p>查看出口对象（T-code：<code>SMOD</code>）</p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20231011230117879.png" alt="查看出口对象"></p><h4 id="四种出口类型"><a href="#四种出口类型" class="headerlink" title="四种出口类型"></a>四种出口类型</h4><ol><li>菜单出口-Menu Exits：定义自己的菜单</li><li>屏幕出口-Screen Exits：定义自己的屏幕</li><li>功能模块出口-Function Module Exits：SAP应用程序中添加功能</li><li>关键字出口-Keyword Exits：在ABAP&#x2F;4字典中的关键字数据元素添加文档。结果是你在使用这些数据元素的字段处按F1后会出现你自定义的说明文档</li></ol><h4 id="如何实现增强"><a href="#如何实现增强" class="headerlink" title="如何实现增强"></a>如何实现增强</h4><ol><li>创建一个项目对象（Project）事务代码：<code>CMOD</code></li><li>查看组件，列出组件中函数功能，并双击需要实现的函数</li><li>双击进入函数功能中的INLUDE文件</li><li>编写代码</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20231011230916528.png" alt="实现增强步骤一"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20231011231038517.png" alt="实现增强步骤二"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20231011231249508.png" alt="实现增强步骤三"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20231011231322572.png" alt="实现增强步骤四"></p><h4 id="如何查找增强点——以SD用户出口为例"><a href="#如何查找增强点——以SD用户出口为例" class="headerlink" title="如何查找增强点——以SD用户出口为例"></a>如何查找增强点——以SD用户出口为例</h4><ol><li>查看事务代码的状态</li><li>找出事务代码的主程序并双击进入（绿色标记区域处）</li><li>点击绿色区域处进入全局搜索模式</li><li>搜索<code>CALL CUSTOMER-FUNCTION</code></li><li>对搜索结果进行翻找即可</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20231011223437647.png" alt="第二代查找方法一步骤一"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20231011224108973.png" alt="第二代查找方法一步骤二"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20231011224223679.png" alt="第二代查找方法一步骤三"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20231011224425559.png" alt="第二代查找方法一步骤四"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20231011224620400.png" alt="第二代查找方法一步骤五"></p><h4 id="如何查找增强点（包查找）——-以SD用户出口为例"><a href="#如何查找增强点（包查找）——-以SD用户出口为例" class="headerlink" title="如何查找增强点（包查找）—— 以SD用户出口为例"></a>如何查找增强点（包查找）—— 以SD用户出口为例</h4><ol><li>进入事务SMOD，开启加强的搜索帮助</li><li>按照包名进行搜索</li><li>根据相应描述选择对应的出口对象并双击</li><li>根据相应描述选择对应的函数</li><li>按照上文中的<strong>如何实现增强</strong>进行增强实现</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20231011231837741.png" alt="第二代查找方法二步骤一"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20231011232049284.png" alt="第二代查找方法二步骤二"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20231011232606514.png" alt="第二代查找方法二步骤三"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20231011232719533.png" alt="第二代查找方法二步骤四"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20231011232827002.png" alt="第二代查找方法二步骤五"></p><p>视频演示流程地址：<a href="https://www.bilibili.com/video/BV1p34y137Qw/">SAP增强——第二种用户出口（函数）_哔哩哔哩_bilibili</a></p><h2 id="SAP-BAdI（基于对象）"><a href="#SAP-BAdI（基于对象）" class="headerlink" title="SAP BAdI（基于对象）"></a>SAP BAdI（基于对象）</h2><blockquote><p>使用面向对象的方式实现增强</p><p>BAdIs(Business Add-Ins)是SAP在R&#x2F;3 release 4.6A后增加的增强技术。总的来说，BAdIs克服了之前出口的所有缺点，并且还是用最新的OO技术实现。</p></blockquote><h3 id="常用事务代码"><a href="#常用事务代码" class="headerlink" title="常用事务代码"></a>常用事务代码</h3><p><code>SE18</code>：创建及维护BAdI对象</p><ul><li><p>创建增强点</p></li><li><p>维护接口&#x2F;类（<code>Interface</code>）</p></li><li><p>维护方法，维护方法的参数</p></li><li><p>维护实施<code>Implementation</code>（可以在<code>SE19</code>下面查看）</p></li></ul><p><code>SE19</code>：维护BAdI实例，BAdI功能的实现</p><h3 id="如何查找增强点（SE24）——以SD用户出口为例"><a href="#如何查找增强点（SE24）——以SD用户出口为例" class="headerlink" title="如何查找增强点（SE24）——以SD用户出口为例"></a>如何查找增强点（SE24）——以SD用户出口为例</h3><ol><li>进入事务<code>SE24</code>，输入<code>CL_EXITHANDLER</code>点击显示</li><li>双击进入接口<code>GET_INSTANCE</code></li><li>在绿色区域标志处打上断点</li><li>运行事务代码判断并在记事本上记录 的值</li><li>进入事务<code>SE18</code>通过exit_name查看BAdI</li><li>根据描述找到对应接口</li><li>进入事务<code>SE19</code>参照BAdI创建实施</li><li>进入创建好的实施并双击实现对应接口（增强点）</li><li>编写代码保存后激活</li><li>进入事务<code>SE18</code>检查实施是否调用</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20231011233510201.png" alt="通过SE24查找增强点步骤一"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20231011233631199.png" alt="通过SE24查找增强点步骤二"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20231011233858871.png" alt="通过SE24查找增强点步骤三"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20231011234310245.png" alt="通过SE24查找增强点步骤四"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20231011234755734.png" alt="通过SE24查找增强点步骤五"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20231011234947997.png" alt="通过SE24查找增强点步骤六"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20231011235215543.png" alt="通过SE24查找增强点步骤七——1"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20231011235423808.png" alt="通过SE24查找增强点步骤七——2"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20231011235714634.png" alt="通过SE24查找增强点步骤八"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20231012000223689.png" alt="通过SE24查找增强点步骤九"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20231012000419335.png" alt="通过SE24查找增强点步骤九"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20231012000525863.png" alt="通过SE24查找增强点步骤十"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20231012000617825.png" alt="高亮代表实施已调用"></p><h3 id="如何查找增强点（ST05）——以SD用户出口为例（不推荐）"><a href="#如何查找增强点（ST05）——以SD用户出口为例（不推荐）" class="headerlink" title="如何查找增强点（ST05）——以SD用户出口为例（不推荐）"></a>如何查找增强点（ST05）——以SD用户出口为例（不推荐）</h3><ol><li>打开运行事务码: <code>ST05</code> 选择“table buffer trace”</li><li>activate trace（开始跟踪）</li><li>运行事务码：<code>me21n</code>，创建一个采购订单，保存</li><li>deactivate trace（结束跟踪）</li><li>点击display trace，在出来的选择条件中： objects中输入：<code>V_EXT_IMP</code>和<code>V_EXT_ACT</code>；在 operations中输入“OPEN”</li><li>查询结果：视图<code>V_EXT_IMP</code>的BAdI的接口类名字都是以<code>IF_EX_</code>开头的，其中<code>IF_EX_</code>之后的就是对应BAdI接口的定义</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20231012001048773.png" alt="ST05关键步骤"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20231012001143890.png" alt="ST05关键步骤"></p><p>视频演示流程地址：<a href="https://www.bilibili.com/video/BV1zh4y1z7Y1/">SAP增强——第三种插入方式BADI（OO对象）_哔哩哔哩_bilibili</a></p>]]></content>
    
    
    <categories>
      
      <category>ABAP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SAP</tag>
      
      <tag>ABAP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>RF常用开发函数</title>
    <link href="/unrpyc/2023/09/20/RF%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/"/>
    <url>/unrpyc/2023/09/20/RF%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="RF常用开发函数"><a href="#RF常用开发函数" class="headerlink" title="RF常用开发函数"></a>RF常用开发函数</h1><h2 id="设置屏幕参数"><a href="#设置屏幕参数" class="headerlink" title="设置屏幕参数"></a>设置屏幕参数</h2><p> <code>/scwm/cl_rf_bll_srvc=&gt;init_screen_param( ).</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">\* 设置屏幕参数<br> /scwm/cl_rf_bll_srvc=&gt;set_screen_param(&#x27;ZGS_RF007_9001&#x27;).<br> /scwm/cl_rf_bll_srvc=&gt;set_screen_param(&#x27;ZGS_RF007_9002&#x27;).<br> /scwm/cl_rf_bll_srvc=&gt;set_screen_param(&#x27;ZGT_RF007_9002&#x27;).<br> /scwm/cl_rf_bll_srvc=&gt;set_screen_param(&#x27;ZGS_RF007_9003&#x27;).<br></code></pre></td></tr></table></figure><h2 id="设置表数据容器"><a href="#设置表数据容器" class="headerlink" title="设置表数据容器"></a>设置表数据容器</h2><p>  <code>/scwm/cl_rf_bll_srvc=&gt;set_scr_tabname(&#39;&#39;).</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ABAP"> \* 为屏幕设置表数据容器<br>/scwm/cl_rf_bll_srvc=&gt;set_scr_tabname(&#x27;ZGT_RF007_9002&#x27;).<br></code></pre></td></tr></table></figure><h2 id="获取用户资源"><a href="#获取用户资源" class="headerlink" title="获取用户资源"></a>获取用户资源</h2><p><code>/SCWM/RSRC_RESOURCE_MEMORY</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">\* RF全局資源<br>  CLEAR: gs_rsrc.<br> \* 获得用户资源<br>  CALL FUNCTION &#x27;/SCWM/RSRC_RESOURCE_MEMORY&#x27;<br>   EXPORTING<br>    iv_uname = sy-uname<br>   CHANGING<br>    cs_rsrc = gs_rsrc.<br></code></pre></td></tr></table></figure><h2 id="设置仓库号"><a href="#设置仓库号" class="headerlink" title="设置仓库号"></a>设置仓库号</h2><p><code>/scwm/cl_tm=&gt;set_lgnum( gs_rsrc-lgnum ).</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">\* 设置仓库号<br>  CALL METHOD /scwm/cl_tm=&gt;set_lgnum( gs_rsrc-lgnum ).<br> /scwm/cl_rf_bll_srvc=&gt;set_line( 1 ).<br></code></pre></td></tr></table></figure><h2 id="消息提示"><a href="#消息提示" class="headerlink" title="消息提示"></a>消息提示</h2><p><code>/scwm/cl_rf_bll_srvc=&gt;message</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">CALL METHOD /scwm/cl_rf_bll_srvc=&gt;message<br>  EXPORTING<br>   iv_flg_continue_flow = &#x27;X&#x27;<br>   iv_msgid       = pv_msgid<br>   iv_msgty       = pv_msgty<br>   iv_msgno       = pv_msgno<br>   iv_msgv1       = pv_msgv1.<br></code></pre></td></tr></table></figure><h2 id="按HU获取库存"><a href="#按HU获取库存" class="headerlink" title="按HU获取库存"></a>按HU获取库存</h2><p><code>/SCWM/HU_SELECT_GEN</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">CALL FUNCTION &#x27;/SCWM/HUMAIN_REFRESH&#x27; .<br>  CALL FUNCTION &#x27;/SCWM/HU_SELECT_GEN&#x27;<br>   EXPORTING<br>    iv_lgnum   = gs_rsrc-lgnum<br>    ir_lgpla   = VALUE rseloption( ( sign = &#x27;I&#x27; option = &#x27;EQ&#x27; low = ps_rf010-lgpla ) )<br>   IMPORTING<br>    et_huhdr   = lt_huhdr<br>    et_huitm   = lt_huitm<br>   EXCEPTIONS<br>    wrong_input = 1<br>    not_possible = 2<br>    error    = 3<br>    OTHERS    = 4.<br>  IF sy-subrc &lt;&gt; 0.<br><br>\* Implement suitable error handling here<br><br> ENDIF.<br>     IF lt_huhdr IS INITIAL.<br>    CLEAR ps_rf005_9001.<br>    /scwm/cl_rf_bll_srvc=&gt;set_field(&#x27;ZEWMS_RF005_9001-HUIDENT&#x27;) .<br>    MESSAGE e004(zyc) WITH &#x27;HU不存在，请重新输入&#x27;.<br>  ENDIF.<br>  LOOP AT lt_huhdr INTO ls_huhdr.<br>    LOOP AT lt_huitm INTO ls_huitm WHERE guid_parent = ls_huhdr-guid_hu.<br>      ps_rf005_r_9002-huident = ls_huhdr-huident.<br>      ps_rf005_r_9002-lgpla = ls_huhdr-lgpla.<br>      ps_rf005_r_9002-lgtyp = ls_huhdr-lgtyp.<br>      ps_rf005_r_9002-lgnum = ls_huhdr-lgnum.<br>      ps_rf005_r_9002-matid = ls_huitm-matid.<br>      ps_rf005_r_9002-meins = ls_huitm-meins.<br>      ps_rf005_r_9002-qty = ls_huitm-quan.<br>      CALL FUNCTION &#x27;CONVERSION_EXIT_MDLPD_OUTPUT&#x27;<br>        EXPORTING<br>          input  = ls_huitm-matid<br>        IMPORTING<br>          output = ps_rf005_r_9002-matnr.<br>      SELECT SINGLE b~maktx INTO ps_rf005_r_9002-maktx FROM  /sapapo/mattxt AS b<br>             INNER JOIN /sapapo/matkey AS a ON a~matid = b~matid<br>             WHERE a~matnr = ps_rf005_r_9002-matnr.<br>      APPEND ps_rf005_r_9002 TO pt_rf005_r_9002.<br>      CLEAR:ps_rf005_r_9002.<br>    ENDLOOP.<br>  ENDLOOP.<br></code></pre></td></tr></table></figure><h2 id="物料号转换"><a href="#物料号转换" class="headerlink" title="物料号转换"></a>物料号转换</h2><p><code>CONVERSION_EXIT_MDLPD_OUTPUT</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">CALL FUNCTION &#x27;CONVERSION_EXIT_MDLPD_OUTPUT&#x27;<br>    EXPORTING<br>     input = ls_huitm-matid<br>    IMPORTING<br>     output = ps_rf010-matnr.<br></code></pre></td></tr></table></figure><h2 id="储位移动"><a href="#储位移动" class="headerlink" title="储位移动"></a>储位移动</h2><p><code>/SCWM/TO_CREATE_MOVE_HU</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">   lt_create_hu = VALUE #( FOR ls_rf006_9002 IN pt_rf006_9002 ( huident = ls_rf006_9002-huident procty = &#x27;9999&#x27; squit = &#x27;X&#x27; nlpla = ps_rf006_9002_target-nlpla ) ). .<br>    CALL FUNCTION &#x27;/SCWM/TO_INIT_NEW&#x27;<br>     EXPORTING<br>      iv_lgnum = gs_rsrc-lgnum.<br>    TRY.<br>      CALL FUNCTION &#x27;/SCWM/TO_CREATE_MOVE_HU&#x27;<br>       EXPORTING<br>        iv_lgnum    = gs_rsrc-lgnum<br>        iv_update_task = &#x27; &#x27;<br>        iv_commit_work = &#x27;X&#x27;<br>        iv_wtcode   = wmegc_wtcode_adhoc_hu<br>        it_create_hu  = lt_create_hu<br>       IMPORTING<br>        et_bapiret   = lv_bapiret<br>        ev_severity  = lv_severity<br>       EXCEPTIONS<br>        error_message = 1.<br> CATCH /scwm/cx_core INTO DATA(lo_error).<br>  ROLLBACK WORK.<br>  lv_message = lo_error-&gt;get_text( ).<br>  lv_severity = &#x27;E&#x27;.<br>  APPEND VALUE #( type = &#x27;E&#x27; message = lv_message ) TO lv_bapiret.<br>  /scwm/cl_tm=&gt;cleanup( ).<br>  PERFORM disp_message USING &#x27;zmsg_rfsl&#x27; &#x27;E&#x27; &#x27;000&#x27; lv_message.<br>ENDTRY.<br>   PERFORM disp_message USING &#x27;zmsg_rfsl&#x27; &#x27;E&#x27; &#x27;000&#x27; &#x27;移动至目标储位成功！&#x27;.<br></code></pre></td></tr></table></figure><h2 id="代码控制屏幕跳转"><a href="#代码控制屏幕跳转" class="headerlink" title="代码控制屏幕跳转"></a>代码控制屏幕跳转</h2><p><code> /scwm/cl_rf_bll_srvc=&gt;set_prmod( /scwm/cl_rf_bll_srvc=&gt;c_prmod_background )</code></p><p><code>/scwm/cl_rf_bll_srvc=&gt;set_fcode()</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ABAP"> /scwm/cl_rf_bll_srvc=&gt;set_prmod( /scwm/cl_rf_bll_srvc=&gt;c_prmod_background ) .<br>/scwm/cl_rf_bll_srvc=&gt;set_fcode( &#x27;ZJUMP2&#x27; ).<br></code></pre></td></tr></table></figure><h2 id="创建上架务WPT默认取HU对应交货单行项目的WPT"><a href="#创建上架务WPT默认取HU对应交货单行项目的WPT" class="headerlink" title="创建上架务WPT默认取HU对应交货单行项目的WPT"></a>创建上架务WPT默认取HU对应交货单行项目的WPT</h2><p><code>/SCWM/TO_CREATE_WHR</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">lt_crea_hu = VALUE #( ( guid_hu = ls_huhdr-guid_hu procty = &#x27;Y041&#x27; squit = &#x27;&#x27; ) ).<br> CALL FUNCTION &#x27;/SCWM/TO_WHR_INIT&#x27;.<br> CALL FUNCTION &#x27;/SCWM/TO_CREATE_WHR&#x27;<br>  EXPORTING<br>   iv_lgnum    = gs_rsrc-lgnum<br>   iv_process   = &#x27;1&#x27;<br>   iv_mve_hu   = &#x27;X&#x27;<br>   iv_mve_mat   = &#x27;X&#x27;<br>   iv_mve_hu_mult = &#x27;X&#x27;<br>   iv_to_init   = &#x27;X&#x27;<br>   iv_bname    = sy-uname<br>   it_crea_hu   = lt_crea_hu<br>   iv_update_task = &#x27; &#x27;<br>   iv_commit_work = &#x27;X&#x27;<br>  IMPORTING<br>   ev_tanum    = gv_tanum<br>   et_ltap_vb   = lt_ltap_vb<br>   et_bapiret   = lt_bapiret<br>   ev_severity  = lv_severity.<br><br> DELETE ADJACENT DUPLICATES FROM lt_bapiret COMPARING ALL FIELDS.<br> LOOP AT lt_bapiret INTO DATA(ls_bapiret) WHERE type CA &#x27;AEX&#x27;.<br>  lv_error = abap_true.<br>  IF lv_message IS INITIAL.<br>   lv_message = ls_bapiret-message.<br>  ELSE.<br>   CONCATENATE lv_message ls_bapiret-message INTO lv_message SEPARATED BY space.<br>  ENDIF.<br> ENDLOOP.<br></code></pre></td></tr></table></figure><h2 id="获取HU上架任务"><a href="#获取HU上架任务" class="headerlink" title="获取HU上架任务"></a>获取HU上架任务</h2><p> <code>/SCWM/TO_READ_INIT’&amp; CALL_FUNCTION/SCWM/TO_READ_HU</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">CALL FUNCTION &#x27;/SCWM/TO_READ_INIT&#x27;.<br> CALL FUNCTION &#x27;/SCWM/TO_READ_HU&#x27;<br>  EXPORTING<br>   iv_lgnum    = gs_rsrc-lgnum<br>   it_huident   = VALUE /scwm/tt_huident( ( lgnum = gs_rsrc-lgnum huident = ps_rf007_9001-huident ) )<br>  IMPORTING<br>   et_ordim_o_src = lt_ordim_o_src<br>   et_ordim_o_des = lt_ordim_o_des<br>  EXCEPTIONS<br>   error     = 1<br>   OTHERS     = 2.<br> IF sy-subrc &lt;&gt; 0.<br>\* Implement suitable error handling here<br> ENDIF.<br> IF lt_ordim_o_src IS NOT INITIAL AND lt_ordim_o_des IS NOT INITIAL.<br>  MESSAGE e004(zyc) WITH &#x27;该HU &#x27; &amp;&amp; ls_huhdr-huident &amp;&amp; &#x27;已上架&#x27;.<br> ENDIF.<br></code></pre></td></tr></table></figure><h2 id="上架任务确认"><a href="#上架任务确认" class="headerlink" title="上架任务确认"></a>上架任务确认</h2><p><code>/SCWM/TO_CONFIRM</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">CALL FUNCTION &#x27;/SCWM/TO_INIT_NEW&#x27;<br> EXPORTING<br>  iv_lgnum    = gs_rsrc-lgnum.<br>CALL FUNCTION &#x27;/SCWM/TO_CONFIRM&#x27;<br> EXPORTING<br>  iv_lgnum        = gs_rsrc-lgnum<br>  IV_SUBST        = space<br>  IV_QNAME        = SY-UNAME<br>  IV_CRETO        = space<br>  IV_WTCODE       = space<br>  IV_UPDATE_TASK     = space<br>  IV_COMMIT_WORK     = &#x27;X&#x27;<br>  IV_PROCESSOR_DET    = space<br>  it_conf        = lt_conf<br>  IT_CONF_EXC      = lt_conf_exc<br> IMPORTING<br>  ET_LTAP_VB       = lt_ltap_vb<br>  ET_BAPIRET       = lt_bapiret<br>  EV_SEVERITY      = lv_severity<br>  EV_SER_ERR       = lv_ser_err.<br>IF lv_severity CA &#x27;AEX&#x27;.<br>LOOP AT lt_bapiret INTO DATA(ls_bapiret).<br> MESSAGE ID ls_bapiret-id TYPE ls_bapiret-type<br> NUMBER ls_bapiret-number<br> WITH ls_bapiret-message_v1 &amp;&amp; ls_bapiret-message_v2 &amp;&amp; ls_bapiret-message_v3 &amp;&amp; ls_bapiret-message_v4 INTO DATA(lv_message).<br> lv_messages = lv_messages &amp;&amp; lv_message.<br>ENDLOOP.<br> MESSAGE e004(zyc) WITH lv_message.<br>ELSE.<br> PERFORM disp_message USING &#x27;zmsg_rfsl&#x27; &#x27;S&#x27; &#x27;000&#x27; &#x27;打包成功！&#x27;.<br>ENDIF.<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ABAP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SAP</tag>
      
      <tag>ABAP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>EWM RF手持设备开发</title>
    <link href="/unrpyc/2023/09/17/RF%E5%BC%80%E5%8F%91/"/>
    <url>/unrpyc/2023/09/17/RF%E5%BC%80%E5%8F%91/</url>
    
    <content type="html"><![CDATA[<h1 id="EWM-RF手持设备开发"><a href="#EWM-RF手持设备开发" class="headerlink" title="EWM RF手持设备开发"></a>EWM RF手持设备开发</h1><blockquote><p>EWM模块的RF开发和其他模块的开发有很大的差别，很大一部分都是通过SPRO配置来实现的。</p></blockquote><table><thead><tr><th>事务码</th><th>含义</th></tr></thead><tbody><tr><td>&#x2F;N&#x2F;SCWM&#x2F;RFSCR</td><td>是系统标准的Displ.Prof，它提供了标准的 ‘模板屏幕程序’ &amp; ‘模板屏幕号’ &amp; ‘ &amp; ‘消息模板 程序’&amp;’消息屏幕号；</td></tr><tr><td>&#x2F;N&#x2F;SCWM&#x2F;PRDVC</td><td>维护表示设备Maintain Presenta</td></tr><tr><td>&#x2F;N&#x2F;SCWM&#x2F;RSRC</td><td>维护资源</td></tr><tr><td>&#x2F;N&#x2F;SCWM&#x2F;USER</td><td>维护RF用户（将RF用户与资源&amp;仓位&amp;个性化参数进行绑定）自动登录如果勾选中，通过&#x2F;N&#x2F;SCWM&#x2F;RFUI运行时，自动调到</td></tr><tr><td>&#x2F;N&#x2F;SCWM&#x2F;RFMENU</td><td>菜单管理</td></tr><tr><td>SPRO</td><td>分配描述参数文件到仓库</td></tr><tr><td>&#x2F;N&#x2F;SCWM&#x2F;RFUI</td><td>在GUI上运行RFUI</td></tr></tbody></table><h2 id="RF项目创建方法"><a href="#RF项目创建方法" class="headerlink" title="RF项目创建方法"></a>RF项目创建方法</h2><ol><li>新建函数组</li><li>根据屏幕数量建立函数模块，一个屏幕对于两个函数模块</li><li>在包含的top中引用<code>INCLUDE /scwm/irf_sscr.</code></li><li>屏幕流逻辑固定内容请直接拷贝</li></ol><p>如下图，PBO和PAI要成对出现：</p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230917123343144.png" alt="创建函数模块"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230917123526253.png" alt="对应关系"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230917124349415.png" alt="引用头文件"></p><p>注意：创建的屏幕必须是<strong>子屏幕</strong></p><h3 id="一般屏幕固定逻辑流写法"><a href="#一般屏幕固定逻辑流写法" class="headerlink" title="一般屏幕固定逻辑流写法"></a>一般屏幕固定逻辑流写法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">PROCESS BEFORE OUTPUT.<br>* pass structures to the screen<br>* set screen attributes<br>MODULE status_sscr_loop.<br>*<br>PROCESS AFTER INPUT.<br>* pass input to the application, return function code<br>* to the program<br>MODULE set_navigation_off.<br>MODULE user_command_sscr.<br></code></pre></td></tr></table></figure><h3 id="需要使用步骤循环的屏幕固定逻辑流写法"><a href="#需要使用步骤循环的屏幕固定逻辑流写法" class="headerlink" title="需要使用步骤循环的屏幕固定逻辑流写法"></a>需要使用步骤循环的屏幕固定逻辑流写法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">PROCESS BEFORE OUTPUT.<br> \* pass structures to the screen<br> \* set screen attributes<br> MODULE status_sscr_loop.<br> \* pass table rows to the step-loop<br> LOOP.<br>  MODULE loop_output.<br> ENDLOOP.<br> \* set (disable/enable) PGUP/PGDN pushbuttons on the screen<br> MODULE loop_scrolling_set.<br><br> *<br> PROCESS AFTER INPUT.<br> LOOP.<br> \*  save data of the step-loop elements<br>  MODULE loop_input.<br> ENDLOOP.<br><br> \* pass input to the application, return function code<br> \* to the program<br> MODULE set_navigation_off.<br> MODULE user_command_sscr.<br></code></pre></td></tr></table></figure><h2 id="RF项目配置方法"><a href="#RF项目配置方法" class="headerlink" title="RF项目配置方法"></a>RF项目配置方法</h2><blockquote><p>在RF中不仅屏幕跳转，变量共享，功能按钮都需要用SPRO进行配置</p></blockquote><h3 id="开始配置"><a href="#开始配置" class="headerlink" title="开始配置"></a>开始配置</h3><ol><li>进入事务<code>spro</code></li><li>点击参考IMG</li><li>进行配置</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230917142035831.png" alt="spro界面"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230917141802501.png" alt="找到定义逻辑事务选项"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230917142453260.png" alt="配置页"></p><h3 id="具体配置"><a href="#具体配置" class="headerlink" title="具体配置"></a>具体配置</h3><h4 id="定义应用程序参数"><a href="#定义应用程序参数" class="headerlink" title="定义应用程序参数"></a>定义应用程序参数</h4><p>在RF程序中要实现共享数据需要经历一下几步：</p><ol><li>在要使用的PAI或PBO函数模块的CHANGING中声明变量</li><li>在定义应用程序参数中进行注册，应用程序参数名称就是变量名</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230917142924749.png" alt="定义应用程序参数步骤一"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230917143039297.png" alt="定义应用程序参数步骤二"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230917143154518.png" alt="使用应用程序参数"></p><h4 id="定义功能代码"><a href="#定义功能代码" class="headerlink" title="定义功能代码"></a>定义功能代码</h4><p>在RF程序中，下图中的按钮功能在spro中定义以及设置功能代码，而不是在屏幕上绘制</p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230917143928922.png" alt="功能代码按钮示意"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230917144247901.png" alt="可以看到屏幕中并未绘制按钮"></p><p><strong>功能代码</strong>可以理解为PAI中进行按钮监听的<strong>标志</strong>，要想定义好按钮则需要一下几个步骤：</p><ol><li>新建功能代码</li><li>设置功能代码文本</li><li>设置功能代码参数</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/1694933310122.jpg" alt="定义功能代码步骤一"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230917145120024.png" alt="定义功能代码步骤二"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230917145550421.png" alt="定义功能代码步骤三"></p><h4 id="定义逻辑事务"><a href="#定义逻辑事务" class="headerlink" title="定义逻辑事务"></a>定义逻辑事务</h4><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230917150127088.png" alt="新建逻辑事务步骤一"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230917150606691.png" alt="新建逻辑事务步骤二"></p><h5 id="定义描述文本"><a href="#定义描述文本" class="headerlink" title="定义描述文本"></a>定义描述文本</h5><p>可以理解为你这个程序的名字，也就是在菜单中显示的名字，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230917150806880.png" alt="描述文本图示"></p><p>文本定义与之前的功能代码文本定义是差不多的，这里就按照之前的定义即可</p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230917150942207.png" alt="定义描述文本步骤一"></p><h5 id="定义逻辑事务步骤流"><a href="#定义逻辑事务步骤流" class="headerlink" title="定义逻辑事务步骤流"></a>定义逻辑事务步骤流</h5><p>如果屏幕跳转的目的明确按下图配置即可：</p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230917151746133.png" alt="定义逻辑事务步骤流一"></p><table><thead><tr><th>处理模式</th><th>含义</th></tr></thead><tbody><tr><td>前台</td><td>屏幕不发生跳转</td></tr><tr><td>后台</td><td>屏幕跳转，目标屏幕明确</td></tr><tr><td>执行过程中已定义的</td><td>屏幕跳转，目标屏幕不明确</td></tr></tbody></table><p>关于处理模式选择的含义如上表所示</p><p>如果是明确目标的屏幕跳转，逻辑事务配置如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230917153253079.png" alt="定义逻辑事务步骤流二"></p><p><code>    /scwm/cl_rf_bll_srvc=&gt;set_fcode( &#39;ZJUMP2&#39; ).</code></p><p>上述代码表示，按照ZJUMP2配置的那样进行跳转</p><h5 id="定义确认参数文件"><a href="#定义确认参数文件" class="headerlink" title="定义确认参数文件"></a>定义确认参数文件</h5><p>在此前我们定义好了功能代码，但是此时并未配置到屏幕之上，定义确认参数文件的含义就是将功能代码配置到屏幕上。</p><p>配置过程如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230917174559678.png" alt="定义确认参数文件步骤一"></p><h5 id="映射逻辑事务步骤到子屏幕"><a href="#映射逻辑事务步骤到子屏幕" class="headerlink" title="映射逻辑事务步骤到子屏幕"></a>映射逻辑事务步骤到子屏幕</h5><p>也就是将步骤和屏幕建立管理，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230917174952086.png" alt="映射逻辑事务步骤到子屏幕步骤一"></p><h3 id="菜单配置"><a href="#菜单配置" class="headerlink" title="菜单配置"></a>菜单配置</h3><p>至此，RF程序配置完成，但是在RFUI里仍然不会显示程序，还需要在菜单里添加此程序，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230917175425928.png" alt="菜单配置步骤一"></p><p>输入相应数据后点击更改菜单</p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230917175729875.png" alt="菜单配置步骤二"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230917180137656.png" alt="菜单配置步骤三"></p><h2 id="代码实现办法与流程"><a href="#代码实现办法与流程" class="headerlink" title="代码实现办法与流程"></a>代码实现办法与流程</h2><h3 id="屏幕参数与数据容器"><a href="#屏幕参数与数据容器" class="headerlink" title="屏幕参数与数据容器"></a>屏幕参数与数据容器</h3><p>在PBO里设置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">  /scwm/cl_rf_bll_srvc=&gt;init_screen_param( ).<br>* 设置屏幕参数<br>  /scwm/cl_rf_bll_srvc=&gt;set_screen_param(&#x27;ZGT_RF006_9002&#x27;).<br>  /scwm/cl_rf_bll_srvc=&gt;set_screen_param(&#x27;ZGS_RF006_9002&#x27;).<br>  /scwm/cl_rf_bll_srvc=&gt;set_screen_param(&#x27;ZGS_RF006_9002_TARGET&#x27;).<br>** 为屏幕设置表数据容器<br>  /scwm/cl_rf_bll_srvc=&gt;set_scr_tabname(&#x27;ZGT_RF006_9002&#x27;).<br></code></pre></td></tr></table></figure><p><strong>注：从字典中获取的控件，必须在PBO里进行相应的屏幕参数设置</strong></p><h3 id="步骤循环"><a href="#步骤循环" class="headerlink" title="步骤循环"></a>步骤循环</h3><ol><li>选中要循环的控件</li><li>点击步骤循环&#x3D;&gt;定义</li><li>拖动框来设置每一页的行数</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230917185055950.png" alt="步骤循环步骤一"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230917185219326.png" alt="步骤循环步骤二"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230917185326034.png" alt="步骤循环步骤三"></p><h3 id="PBO固定内容"><a href="#PBO固定内容" class="headerlink" title="PBO固定内容"></a>PBO固定内容</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">* RF全局資源<br>  CLEAR: gs_rsrc.<br>* 获得用户资源<br>  CALL FUNCTION &#x27;/SCWM/RSRC_RESOURCE_MEMORY&#x27;<br>    EXPORTING<br>      iv_uname = sy-uname<br>    CHANGING<br>      cs_rsrc  = gs_rsrc.<br>* 设置仓库号<br>  CALL METHOD /scwm/cl_tm=&gt;set_lgnum( gs_rsrc-lgnum ).<br> /scwm/cl_rf_bll_srvc=&gt;set_line( 1 ).<br></code></pre></td></tr></table></figure><h3 id="PAI获取控件值"><a href="#PAI获取控件值" class="headerlink" title="PAI获取控件值"></a>PAI获取控件值</h3><p>获取<code>WHEN &#39;ZEWMS_RF006_9002_TARGET-NLPLA&#39;.</code>的值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">DATA:gs_rsrc TYPE /scwm/rsrc,<br>   gv_rf_field TYPE text60,<br>   gv_rf_fcode TYPE /scwm/de_fcode.<br>     gv_rf_fcode = /scwm/cl_rf_bll_srvc=&gt;get_fcode( ) .<br>  gv_rf_field = /scwm/cl_rf_bll_srvc=&gt;get_cursor_field( ) .<br>  CASE gv_rf_fcode.<br>    WHEN &#x27;ENTER&#x27; OR &#x27;ZCOF1&#x27;.<br>      CASE gv_rf_field.<br>        WHEN &#x27;ZEWMS_RF006_9002_TARGET-NLPLA&#x27;.<br>          PERFORM change_data CHANGING zgs_rf006_9001 zgs_rf006_9002 zgt_rf006_9002 zgs_rf006_9002_target.<br>      ENDCASE.<br>    WHEN &#x27;BACKF&#x27;.<br>      PERFORM clear_data CHANGING zgs_rf006_9001 zgs_rf006_9002 zgt_rf006_9002 zgs_rf006_9002_target.<br>  ENDCASE.<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ABAP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SAP</tag>
      
      <tag>ABAP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Online程序（M类型）DIALOG程序</title>
    <link href="/unrpyc/2023/09/16/DIALOG%E7%A8%8B%E5%BA%8F%EF%BC%88MOUDLE%20POOL%E7%A8%8B%E5%BA%8F%EF%BC%89/"/>
    <url>/unrpyc/2023/09/16/DIALOG%E7%A8%8B%E5%BA%8F%EF%BC%88MOUDLE%20POOL%E7%A8%8B%E5%BA%8F%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="Online程序（M类型）"><a href="#Online程序（M类型）" class="headerlink" title="Online程序（M类型）"></a>Online程序（M类型）</h1><p>程序类型简介：</p><ul><li><p>查询数据，录入、修改、删除等</p></li><li><p>Module Pool 程序：以Module Pool形态进行业务流程的逻辑处理</p></li><li><p>Online 程序，强调用Online Transaction来处理业务流程进行过程</p></li><li><p>Screen 程序，主要使用Screen（及屏幕对象），并实现界面间Flow Logic（流逻辑）</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230828134436466.png" alt="创建选项"></p><h2 id="Online程序的主要对象"><a href="#Online程序的主要对象" class="headerlink" title="Online程序的主要对象"></a>Online程序的主要对象</h2><p>界面（Screen）</p><p>模块池（Module Pool）</p><ul><li><p>全局字段（Global Data）：声明模块池中所有模块都可使用的数据 – TOP</p></li><li><p>PBO模块（PBO Modules）：屏幕输出前调用的模块 – O01</p></li><li><p>PAI模块（PAI Modules）：相应用户输入而调用的模块 – I01</p></li><li><p>子程序（Subroutines）：可以在模块中任何位置调用的子程序 – F01</p></li><li><p>菜单（GUI Status）</p></li><li><p>标题（GUI TITLE）</p></li><li><p>事务代码（Transaction Code）</p></li></ul><p>用户可以访问的部分是Screen，用户对界面进行操作，相应的操作是通过Screen中的逻辑流控制，而数据声明和界面逻辑代码实现部分是在ABAP程序中。</p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230828190401421.png" alt="对象示例图片"></p><h2 id="Screen"><a href="#Screen" class="headerlink" title="Screen"></a>Screen</h2><blockquote><p>ABAP程序不能直接定义Screen，要通过Screen Painter这个工具来实现。界面元素的设定通过Screen Layout Designer来实现</p></blockquote><ul><li>ABAP List代码实现（例：选择界面的创建）</li><li>Report程序直接执行即可以显示查询界面或结果界面</li><li>Dialog Screen绘制：较复杂，界面丰富</li><li>Online程序想要显示查询或结果界面必须建立Screen</li><li>事件驱动程序（Event-Driven）</li></ul><h3 id="屏幕创建"><a href="#屏幕创建" class="headerlink" title="屏幕创建"></a>屏幕创建</h3><p>屏幕创建的步骤及图示：</p><ol><li>创建界面，在Screen Attributes中定义Screen的属性</li><li>在Screen Layout Designer和Element List中定义界面中的元素（位置及属性）</li><li>在Screen Flow Logic中设定在Screen显示的逻辑处理和显示后对界面进行相应操作的逻辑处理</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230828191423542.png" alt="右键创建"></p><p><img src="C:\Users\unrpyc\AppData\Roaming\Typora\typora-user-images\image-20230828191629583.png" alt="属性界面"></p><p>屏幕编号的选取：</p><ul><li>0000~9999</li><li>其中1000和1010之间的屏幕编号为ABAP字典表的维护屏幕以及可执行程序的标准选择屏幕而预留</li></ul><h3 id="屏幕绘制器"><a href="#屏幕绘制器" class="headerlink" title="屏幕绘制器"></a>屏幕绘制器</h3><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230828191035631.png" alt="屏幕绘制器"></p><h4 id="属性（Attributes）"><a href="#属性（Attributes）" class="headerlink" title="属性（Attributes）"></a>属性（Attributes）</h4><ul><li>设定屏幕基本属性</li></ul><h5 id="短文本"><a href="#短文本" class="headerlink" title="短文本"></a>短文本</h5><h5 id="界面类型"><a href="#界面类型" class="headerlink" title="界面类型"></a>界面类型</h5><ul><li>标准界面</li><li>子界面</li><li>对话框</li><li>选择界面</li></ul><h5 id="下一屏"><a href="#下一屏" class="headerlink" title="下一屏"></a>下一屏</h5><ul><li><p>当前界面输出结束时出现的界面</p></li><li><p>为空：程序结束</p></li><li><p>程序中调用其他界面：调用优先</p></li></ul><h5 id="行-列"><a href="#行-列" class="headerlink" title="行&#x2F;列"></a>行&#x2F;列</h5><ul><li>设置界面大小</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230916195957281.png" alt="屏幕属性"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230916200321342.png" alt="屏幕属性2"></p><h4 id="元素清单（Element-List）"><a href="#元素清单（Element-List）" class="headerlink" title="元素清单（Element List）"></a>元素清单（Element List）</h4><ul><li><p>包含界面中定义的所有构成元素</p></li><li><p>可编辑元素属性</p></li><li><p>OK_CODE（要定义接收变量）</p></li></ul><p><img src="C:\Users\unrpyc\AppData\Roaming\Typora\typora-user-images\image-20230916195525409.png" alt="元素清单"></p><h4 id="参照数据字典-程序字段创建屏幕元素"><a href="#参照数据字典-程序字段创建屏幕元素" class="headerlink" title="参照数据字典&#x2F;程序字段创建屏幕元素"></a>参照数据字典&#x2F;程序字段创建屏幕元素</h4><blockquote><p>用这种方式创建的屏幕元素和程序中的字段或者数据字典呈现一种双向绑定的关系，可以直接使用字段获取数据</p></blockquote><ul><li>选择界面中按钮<img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230916201030859.png" alt="image-20230916201030859"></li><li>从数据字典获取（Get From Dictionary）</li><li>从程序获取（Get From Program）</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230916201104149.png" alt="参照步骤一"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230916201129987.png" alt="参照步骤二"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230916201201884.png" alt="参照步骤三"></p><h4 id="流逻辑（Flow-Logic）"><a href="#流逻辑（Flow-Logic）" class="headerlink" title="流逻辑（Flow Logic）"></a>流逻辑（Flow Logic）</h4><ul><li>代码定义部分</li><li>点击可以进入Screen Layout Designer</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230916200533894.png" alt="流逻辑"></p><h2 id="Event-Driven"><a href="#Event-Driven" class="headerlink" title="Event-Driven"></a>Event-Driven</h2><blockquote><p>事件驱动，也可以理解成生命周期，即该按照什么流程去编写程序代码</p></blockquote><p><code>PROCESS BEFORE OUTPUT.</code></p><ul><li>PBO中的处理逻辑控制界面输出前处理，如更改一些元素的值或属性</li></ul><p><code>PROCESS AFTER INPUT.</code></p><ul><li>PAI中的处理逻辑控制用户对界面操作后的处理，如按回车键对输入数据进行检查</li></ul><p><code>PROCESS ON HELP-REQUEST.</code></p><ul><li>Field Help的实现（F1帮助）</li></ul><p><code>PROCESS ON VALUE-REQUEST.</code></p><ul><li>输入帮助Search Help的实现（F4帮助）</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230916200839728.png" alt="逻辑流图示"></p><h2 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h2><blockquote><p>Online程序不能直接运行，必须通过事务代码指定界面运行，也就是需要指定开始屏幕</p></blockquote><ol><li>输入事务代码&#x2F;描述&#x2F;选择Dialog Transaction</li><li>定义程序起始屏幕</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230916202138927.png" alt="创建事务步骤一"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230916202254827.png" alt="事务创建步骤二"></p><h2 id="常用代码总结"><a href="#常用代码总结" class="headerlink" title="常用代码总结"></a>常用代码总结</h2><h3 id="常用关键字"><a href="#常用关键字" class="headerlink" title="常用关键字"></a>常用关键字</h3><table><thead><tr><th><strong>Keyword</strong></th><th><strong>功能</strong></th></tr></thead><tbody><tr><td>MODULE</td><td>调用Dialog Module。</td></tr><tr><td>FIELD</td><td>指Element list中特定的Screen field。即，可以判断Screen Field的值或状态是否发生变化。在PAI中对相关Field进行控制时，一定要使用的关键字。</td></tr><tr><td>ON</td><td>FIELD  …… ON (Field的连接语)</td></tr><tr><td>VALUE</td><td>FIELD  …… VALUE (Field的连接语)</td></tr><tr><td>CHAIN</td><td>CHAIN的开始。CHAIN可以将多个Field捆绑成一个同时进行管理。</td></tr><tr><td>ENDCHAIN</td><td>结束CHAIN。</td></tr><tr><td>CALL</td><td>调用(CALL a Subscreen)。</td></tr><tr><td>LOOP</td><td>开始处理Screen  Table。</td></tr><tr><td>ENDLOOP</td><td>结束Screen  Table处理。</td></tr></tbody></table><h3 id="数据处理逻辑"><a href="#数据处理逻辑" class="headerlink" title="数据处理逻辑"></a>数据处理逻辑</h3><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230916202651289.png" alt="数据处理逻辑"></p><h3 id="Module执行顺序（生命周期）"><a href="#Module执行顺序（生命周期）" class="headerlink" title="Module执行顺序（生命周期）"></a>Module执行顺序（生命周期）</h3><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230916202749610.png" alt="演示代码"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230916202848155.png" alt="代码执行顺序"></p><p><strong>附：对于子屏幕来说，子屏幕里事件触发的执行顺序一般是主屏幕PBO&#x3D;&gt;子屏幕PBO&#x3D;&gt;子屏幕PAI&#x3D;&gt;子屏幕PAI</strong></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230916210619054.png" alt="子屏幕执行顺序"></p><h3 id="数据校验"><a href="#数据校验" class="headerlink" title="数据校验"></a>数据校验</h3><blockquote><p>在一些程序中，当我们设置了输入框后，需要根据用户的输入，进行有效性的检查等，DIALOG界面中提供了针对字段的检查方式</p></blockquote><h4 id="针对某个字段"><a href="#针对某个字段" class="headerlink" title="针对某个字段"></a>针对某个字段</h4><p><code>FIELD f1 MODULE m1 [ON REQUEST] .</code></p><h4 id="针对多个字段同时检查"><a href="#针对多个字段同时检查" class="headerlink" title="针对多个字段同时检查"></a>针对多个字段同时检查</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">CHAIN. <br> FIELD f1.<br> FIELD f2.<br> FIELD f3.<br> MODULE m1 [ON CHAIN-REQUEST]. <br>ENDCHAIN.<br></code></pre></td></tr></table></figure><h3 id="按钮监听"><a href="#按钮监听" class="headerlink" title="按钮监听"></a>按钮监听</h3><ol><li>在屏幕上绘制一个按钮，设置其功能码</li><li>在PAI里根据OK_CODE进行监听</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230916211633084.png" alt="按钮监听步骤一"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">MODULE user_command_0100 INPUT.<br>  CASE SY-UCOMM.<br>   WHEN &#x27;BTN_BACK&#x27;.<br>    LEAVE TO SCREEN 0.<br>   WHEN &#x27;BTN_EXIT&#x27;.<br>    LEAVE PROGRAM.<br>   WHEN &#x27;ZSCHOOL&#x27;.<br> &#x27;do some thing&#x27;<br>  ENDCASE.<br> ENDMODULE.<br></code></pre></td></tr></table></figure><h2 id="复合式屏幕元素"><a href="#复合式屏幕元素" class="headerlink" title="复合式屏幕元素"></a>复合式屏幕元素</h2><h3 id="表格控件（Table-Control）"><a href="#表格控件（Table-Control）" class="headerlink" title="表格控件（Table Control）"></a>表格控件（Table Control）</h3><blockquote><p>当界面中查询多条数据时，可以使用Table Control控件来进行表单输出</p></blockquote><ul><li>Table Control的行及列可以由以下元素构成：</li><li>KeyWords</li><li>Input&#x2F;Output Fields</li><li>Radio Button&#x2F;Radio Button Group</li><li>Checkbox</li><li>Pushbutton</li></ul><h3 id="使用向导创建Table-Control元素"><a href="#使用向导创建Table-Control元素" class="headerlink" title="使用向导创建Table Control元素"></a>使用向导创建Table Control元素</h3><ol><li><p>在程序中创建Table Control使用的内表（向导会自动创建相应执行代码）</p></li><li><p>创建Table Control</p></li><li><p>Name of Table Control：Table Control的名称（例：TC_TAB）</p></li><li><p>使用Internal Program Table创建，选择程序中的内表</p></li><li><p>选择显示列</p></li><li><p>设定属性</p><ul><li><p>Output only：只显示，不可输入</p></li><li><p>Input Control：可输入</p></li><li><p>With column header：带标题</p></li><li><p>Line selection col.：行可选中</p></li><li><p>Single：只能选中一行</p></li><li><p>Multiple：可以选中多行</p></li></ul></li><li><p>设定按钮</p><ul><li><p>Scroll：设定滚动条</p></li><li><p>Insert&#x2F;delete line：插入&#x2F;删除行按钮</p></li><li><p>Select&#x2F;deselect all：选中所有&#x2F;不选中按钮</p></li><li><p>设定选中列的字段</p></li></ul></li><li><p>设定各部分代码进入的Include程序</p></li></ol><h3 id="Table-Control列的修改"><a href="#Table-Control列的修改" class="headerlink" title="Table Control列的修改"></a>Table Control列的修改</h3><h4 id="减少"><a href="#减少" class="headerlink" title="减少"></a>减少</h4><ol><li>选中input&#x2F;output field，直接删除</li><li>将PAI中的Chain部分，相应字段进行注释</li></ol><h4 id="增加"><a href="#增加" class="headerlink" title="增加"></a>增加</h4><ol><li>内表中增加字段</li><li>使用Input&#x2F;Output Field增加列</li><li>Text控件增加描述</li><li>在PAI的Chain部分，增加相应字段</li></ol><h4 id="属性修改"><a href="#属性修改" class="headerlink" title="属性修改"></a>属性修改</h4><ol><li>将Input&#x2F;Output Field设成不可输入</li></ol><h3 id="控件属性临时修改"><a href="#控件属性临时修改" class="headerlink" title="控件属性临时修改"></a>控件属性临时修改</h3><p><strong>在PBO中修改控件属性</strong></p><ul><li>程序每次获取控件静态属性，在PBO中对相应属性做临时修改</li><li>以单元格修改为例</li></ul><p><strong>创建变量，作为选择标志变量：GV_MODIFY</strong></p><p><strong>界面中创建按钮，function code输入’CELL’</strong></p><p><strong>在User-command中将GV_MODIFY值进行修改</strong></p><p><strong>在PBO的循环中（因为要针对单元格判断），根据MARK字段（是否选中），修改screen表的input属性</strong></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230916205954442.png" alt="控件属性临时修改步驟一"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230916210018137.png" alt="控件属性临时修改步驟二"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230916210046090.png" alt="控件属性临时修改步驟三"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230916210056363.png" alt="控件属性临时修改步驟四"></p><h3 id="修改table-control属性"><a href="#修改table-control属性" class="headerlink" title="修改table control属性"></a>修改table control属性</h3><p><strong>在PAI中修改属性（修改Table Control的静态属性）</strong></p><ol><li>在PAI中修改静态属性，在PBO中输出时自动获取，按属性输出</li><li>以列修改为例</li></ol><p><strong>屏幕中创建按钮，Fct Code输入’COL’</strong></p><p><strong>修改table control控件属性结构（图中为TC_TAB2）中的COLS字段（此字段为一个内表）</strong></p><p><strong>创建COLS表相应的结构，通过执行其中INDEX &#x3D; 5（第五列）的行，将COL中的SCREEN字段（结构）中的INPUT字段进行修改</strong></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230916210426283.png" alt="修改table control属性一"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230916210434466.png" alt="修改table control属性二"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230916210444437.png" alt="修改table control属性三"></p><h2 id="GUI-Status-GUI-Title"><a href="#GUI-Status-GUI-Title" class="headerlink" title="GUI Status&#x2F;GUI Title"></a>GUI Status&#x2F;GUI Title</h2><h3 id="按钮"><a href="#按钮" class="headerlink" title="按钮"></a>按钮</h3><ol><li>在程序中定义GUI Status</li><li>在PBO中创建Module，使用SET PF-STATUS语句设置按钮</li><li>在PAI中根据SY-UCOMM值进行判断</li></ol><p><strong>使用OK_CODE&#x2F;OK_SAVE</strong></p><ul><li>… EXCLUDING …（一个字段的内表）</li></ul><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><ol><li>在程序中定义GUI Title</li><li>在PBO中创建Module，使用的SET TITLEBAR语句设置标题</li><li>… WITH … （&amp;1占位符）</li></ol>]]></content>
    
    
    <categories>
      
      <category>ABAP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SAP</tag>
      
      <tag>ABAP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新语法</title>
    <link href="/unrpyc/2023/09/16/%E6%96%B0%E8%AF%AD%E6%B3%95/"/>
    <url>/unrpyc/2023/09/16/%E6%96%B0%E8%AF%AD%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="ABAP新语法以及使用案例"><a href="#ABAP新语法以及使用案例" class="headerlink" title="ABAP新语法以及使用案例"></a>ABAP新语法以及使用案例</h1><h2 id="内联声明（Inline-Declaration）"><a href="#内联声明（Inline-Declaration）" class="headerlink" title="内联声明（Inline Declaration）"></a>内联声明（Inline Declaration）</h2><p><strong>适用场景：</strong></p><ul><li>定义变量</li><li>定义结构</li><li>定义内表</li><li>定义对象</li><li>定义指针</li></ul><p><strong>声明语法：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">DATA(…)<br>FIELD-SYMBOL(&lt;…&gt;)<br><br>## 构造表达式<br></code></pre></td></tr></table></figure><p><strong>适用场景：</strong></p><ul><li><p>构造单值</p></li><li><p>构造结构</p></li><li><p>构造内表</p></li><li><p>构造类对象</p></li></ul><p><strong>类型：</strong></p><ul><li><p>NEW，构造类对象，即类的实例，适用于定义了构造方法的类实例化。</p></li><li><p>VALUE 赋值，根据被赋值对象的数据类型来赋值（value #(…)）；或者赋值时指定具体的数据类型（value dtype）。<br><strong>语法：</strong><br>① 结构赋值：<code>value dtype/#( [BASE dobj] comp1 = v1 comp2 = v2 … ).</code><br>② 内表赋值：<code>value dtype/#( [BASE itab] ( line1_comp1 = dobj1 line1_comp2 = dobj2 … ) ( … ) ( … ) ).</code></p></li><li><p>CORRESPONDING 赋值，匹配不同结构中的同名字段进行赋值，或者是依据映射表MAPPING 进行赋值。</p><p>语法：</p><p><code>toobj = corresponding dtype/#( [BASE dobj] fromobj MAPPING comp1 = v1 comp2 = v2 … Except compX …).</code></p></li></ul><h2 id="FILTER-内表过滤"><a href="#FILTER-内表过滤" class="headerlink" title="FILTER 内表过滤"></a>FILTER 内表过滤</h2><h2 id="REDUCE-汇总"><a href="#REDUCE-汇总" class="headerlink" title="REDUCE 汇总"></a>REDUCE 汇总</h2><h2 id="SWITCH"><a href="#SWITCH" class="headerlink" title="SWITCH"></a>SWITCH</h2><h2 id="COND"><a href="#COND" class="headerlink" title="COND"></a>COND</h2><h2 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">*&amp;---------------------------------------------------------------------*<br>*&amp; Report Y_XLEVON_NEW_SYNTAX<br>*&amp;---------------------------------------------------------------------*<br>*&amp;<br>*&amp;---------------------------------------------------------------------*<br>REPORT y_xlevon_new_syntax.<br><br>****************************************************<br>*   1、内联声明  DATA(...)，FIELD-SYMBOL(...)<br>****************************************************<br>*  （1）赋值动态声明变量：系统根据所赋的值来确定变量类型及数据长度<br>DATA(gv_str) = &#x27;hello xlevon&#x27;.    &quot; C(12)<br>DATA(gv_int) = 1024.              &quot; I(4)<br>DATA(gr_container) = NEW cl_gui_custom_container( container_name = &#x27;cust_container&#x27;).   &quot; 类实例<br><br>*  （2）SELECT动态声明内表/结构/变量：组件类型与 SELECT LIST 对应一致<br>SELECT carrid, carrname FROM scarr UP TO 2 ROWS<br>INTO TABLE @DATA(gt_scarr).  &quot; 内表<br><br>SELECT SINGLE carrid, carrname FROM scarr<br>INTO @DATA(gw_scarr).        &quot; 结构<br><br>SELECT COUNT(*) FROM scarr<br>INTO @DATA(gv_count).        &quot; 变量<br><br>*  （3）LOOP动态声明结构/指针<br>LOOP AT gt_scarr INTO DATA(ls_scarr).   &quot; 工作区结构<br>  ...<br>ENDLOOP.<br>LOOP AT gt_scarr ASSIGNING FIELD-SYMBOL(&lt;fs_scarr&gt;).  &quot; 工作区指针<br>  ...<br>ENDLOOP.<br><br>*  （4）READ TABLE动态声明结构/指针<br>READ TABLE gt_scarr INTO DATA(lw_scarr) WITH KEY carrid = &#x27;AA&#x27;.   &quot; 工作区结构<br>READ TABLE gt_scarr ASSIGNING FIELD-SYMBOL(&lt;fw_scarr&gt;) WITH KEY carrid = &#x27;AA&#x27;.    &quot; 工作区指针<br><br>*  （5）调用类方法时动态声明（输出）对象<br>cl_salv_table=&gt;factory(<br>  IMPORTING<br>    r_salv_table = DATA(lr_table)   &quot; 类实例<br>  CHANGING<br>    t_table = gt_scarr[]<br>).<br><br><br>****************************************************<br>*   2、VALUE 赋值<br>****************************************************<br>TYPES: BEGIN OF ty_person,<br>         code TYPE char4,<br>         name TYPE char20,<br>       END OF ty_person,<br>       tty_person TYPE TABLE OF ty_person.<br><br>* 以下演示结构赋值及操作<br>DATA(gr_output) = cl_demo_output=&gt;new( )-&gt;next_section( |一、VALUE 赋示例| ).<br>gr_output-&gt;next_section( |1、VALUE 结构赋值| ).<br><br>*  （1）VALUE dtype/# 结构赋值<br>DATA(gw_person1) = VALUE ty_person( code = &#x27;1000&#x27; name = &#x27;XLevon&#x27; ).<br>*gr_output-&gt;write( gw_person1 ).<br><br>DATA gw_person2 TYPE ty_person.<br>gw_person2 = VALUE #( code = &#x27;2000&#x27; name = &#x27;XLevon&#x27; ).  &quot; 初始赋值<br>gr_output-&gt;write( gw_person2 ).<br><br>*  （2）使用 VALUE 赋值，默认会覆盖原有数据<br>gw_person2 = VALUE #( name = &#x27;Leo&#x27; ).                   &quot; 重新赋值，原值被清空，code变为空<br>gr_output-&gt;write( gw_person2 ).<br><br>*  （3）使用 VALUE 和 BASE 赋值<br>gw_person2 = VALUE #( BASE gw_person2 code = &#x27;2000&#x27; ).  &quot; 更新，name保留原值<br>gr_output-&gt;write( gw_person2 ).<br><br>*  （4）使用 LET 引入临时变量，只能在当前语句中使用<br>*   LET关键字可以使用在VALUE，SWITCH，COND等语句中<br>*   与 FOR 语句类似，LET 语句中定义的临时变量同样只能在当前语句中使用<br>DATA(gw_person3) = VALUE ty_person( LET<br>                                    let_name = gw_person2-name &amp;&amp; &#x27;-let&#x27;   &quot; 临时变量<br>                                    IN<br>                                    code = &#x27;3000&#x27;<br>                                    name = let_name  ).    &quot; 引用临时变量<br>gr_output-&gt;write( gw_person3 ).<br><br>* 以下演示内表赋值及操作<br>gr_output-&gt;next_section( |2、VALUE 内表赋值| ).<br><br>*  （5）VALUE 内表赋值<br>DATA: gt_person TYPE tty_person.<br>gt_person = VALUE #( ( gw_person1 ) ).              &quot; 赋值<br>gt_person = VALUE #( BASE gt_person ( gw_person2 )  &quot; 相当于在原来内表上 append line<br>                      ( code = &#x27;3000&#x27; name = &#x27;L&#x27; ) ).<br><br>*  （6）使用 VALUE 追加数据 &amp; 更新数据<br>APPEND VALUE #( code = &#x27;4000&#x27; name = &#x27;X&#x27; ) TO gt_person.  &quot; 相当于向内表追加（由VALUE构造的）结构<br>MODIFY gt_person FROM VALUE #( name = &#x27;XLevon&#x27; )          &quot; 相当于从（由VALUE构造的）结构更新内表<br>      TRANSPORTING name WHERE name EQ &#x27;X&#x27;.                &quot; 限定更新字段name及更新条件<br>gr_output-&gt;write( gt_person ).<br><br>*  （7）FOR 循环：从其他内表中批量引入数据<br>TYPES: BEGIN OF ty_person_for,<br>         index TYPE int4.<br>         INCLUDE TYPE ty_person.<br>TYPES: END OF ty_person_for,<br>tty_person_for TYPE TABLE OF ty_person_for WITH EMPTY KEY. &quot; 或者：WITH DEFAULT KEY<br><br>DATA(gt_person_xlevon_with_index) =<br>  VALUE tty_person_for(       &quot;备注：定义的表类型需要 WITH KEY<br>    FOR lw_ps IN gt_person    &quot; 临时变量，遍历行工作区<br>    INDEX INTO lv_i           &quot; 临时变量，当前遍历行<br>    WHERE ( name = &#x27;XLevon&#x27; ) &quot; 备注：此处必须有小括号<br>    (<br>      index = CONV #( lv_i )  &quot; 引用行号<br>      code = lw_ps-code       &quot; 引用工作区<br>      name = lw_ps-name<br>    )<br>  ).<br>gr_output-&gt;write( gt_person_xlevon_with_index ).<br><br>DATA(gt_person_xlevon_corresspond) =<br>  VALUE tty_person_for(        &quot;备注：定义的表类型需要有 WITH KEY<br>    FOR lw_ps IN gt_person<br>    WHERE ( name = &#x27;XLevon&#x27; )<br>    ( CORRESPONDING #( lw_ps ) ) &quot; 部分字段匹配赋值，未匹配的保持为空<br>  ).<br>gr_output-&gt;write( gt_person_xlevon_corresspond ).<br><br>DATA(gt_person_for_then_def) = VALUE tty_person_for(<br>  FOR i = 1 WHILE i &lt; lines( gt_person )   &quot; 默认：then i + 1<br>  (<br>    index = i    &quot; 当前FOR循环的i<br>    code = gt_person[ i ]-code<br>    name = gt_person[ i ]-name<br>  )<br>).<br>gr_output-&gt;write( gt_person_for_then_def ).<br><br>DATA(gt_person_for_then_2) = VALUE tty_person_for(<br>  FOR i = 1 THEN i + 2 WHILE i &lt; lines( gt_person )<br>  ( CORRESPONDING #( gt_person[ i ] ) )<br>).<br>gr_output-&gt;write( gt_person_for_then_2 ).<br><br><br>* 以下演示内表读取及操作<br>gr_output-&gt;next_section( |3、内表读取| ).<br>*  （8）读取内表<br>TRY.<br>    DATA(gw_person_index) = gt_person[ 1 ].           &quot; Index：从1开始，超出会dump<br>    gr_output-&gt;write( gw_person_index ).<br>  CATCH cx_sy_itab_line_not_found INTO DATA(cx).<br>*    gr_output-&gt;write( cx-&gt;get_text( ) ).<br>ENDTRY.<br><br>&quot; 取出符合件的第一条记录，取不到则为空值<br>DATA(gw_person_name) = VALUE #( gt_person[ name = &#x27;XLevon&#x27; ] OPTIONAL ).<br>gr_output-&gt;write( gw_person_name ).<br><br>* 读取不到时赋默认值<br>DATA(gw_ps_def) = VALUE ty_person( code = &#x27;0000&#x27; name = &#x27;I am XLevon&#x27; )..<br>DATA(gw_person_def) = VALUE #( gt_person[ code = &#x27;11&#x27; ] DEFAULT gw_ps_def ).<br>gr_output-&gt;write( gw_person_def ).<br><br>*gr_output-&gt;display( ).<br><br>****************************************************<br>*   3、CORRESPONDING 赋值<br>* 语法：CORRESPONDING dtype/#( [BASE ( base )] struct|itab [mapping] )<br>****************************************************<br>*  结构赋值语句，CORRESPONDING语句允许控制组件映射关系。<br>*  在ABAP 7.40之前，主要通过 MOVE-CORRESPONDING 来传递结构化数据，<br>*  但需要保持结构内部组件名称一致，否则数据将不会被传递，<br>*  而使用 CORRESPONDING 后，该语句在保持同名组件自动进行数据传递的基础上，<br>*  MAPPING 可以允许我们将不同名称的组件映射到一起，<br>*  EXCEPT 可以规避掉我们不需要传值的一些字段<br><br>*gr_output = cl_demo_output=&gt;new( )-&gt;next_section( |二、CORRESPONDING 使用示例| ).<br>gr_output-&gt;next_section( |二、CORRESPONDING 使用示例| ).<br>gr_output-&gt;next_section( |1、CORRESPONDING 结构赋值| ).<br><br>TYPES:BEGIN OF ty_person2,<br>        code TYPE char4,<br>        name TYPE char10,<br>        age  TYPE i,<br>      END OF ty_person2.<br><br>DATA(ls_p1) = VALUE ty_person( code = &#x27;1000&#x27; name = &#x27;XLevon&#x27; ).<br>DATA(ls_p2) = VALUE ty_person2( code = &#x27;2000&#x27; name = &#x27;Leo&#x27; age = 16 ).<br>gr_output-&gt;write( ls_p1 ).<br>gr_output-&gt;write( ls_p2 ).<br><br>ls_p2 = CORRESPONDING #( ls_p1 ).   &quot; 此时 ls_p2-age = 0 在赋值过程中被覆盖<br>gr_output-&gt;write( ls_p2 ).<br><br>ls_p2  =  VALUE ty_person2( code = &#x27;2000&#x27; name = &#x27;Leo&#x27; age = 16 ).<br>ls_p2 = CORRESPONDING #( BASE ( ls_p2 ) ls_p1 ).   &quot;此时 ls_p2-age = 16 未被覆盖<br>gr_output-&gt;write( ls_p2 ).<br><br>ls_p2  =  VALUE ty_person2( code = &#x27;2000&#x27; name = &#x27;Leo&#x27; age = 16 ).<br>DATA(ls_p3) = CORRESPONDING ty_person2( BASE ( ls_p2 ) ls_p1 ).  &quot; 同上<br>gr_output-&gt;write( ls_p3 ).<br><br>gr_output-&gt;next_section( |2、CORRESPONDING MAPPING 结构赋值| ).<br><br>DATA:BEGIN OF customer_crm,<br>       code TYPE char10 VALUE &#x27;1000001000&#x27;,<br>       name TYPE char35 VALUE &#x27;XLevon&#x27;,<br>       BEGIN OF information,<br>         company_code       TYPE char4 VALUE &#x27;1000&#x27;,<br>         sales_organization TYPE char4 VALUE &#x27;1010&#x27;,<br>         country            TYPE char3 VALUE &#x27;CN&#x27;,<br>       END OF information,<br>     END OF customer_crm,<br><br>     BEGIN OF customer_sap,<br>       kunnr TYPE kna1-kunnr,<br>       name1 TYPE kna1-name1,<br>       BEGIN OF info,<br>         bukrs TYPE knb1-bukrs,<br>         vkorg TYPE knvv-vkorg,<br>         land1 TYPE kna1-land1,<br>       END OF info,<br>     END OF customer_sap.<br><br>&quot;两个名字不相同的工作区相互赋值<br>customer_sap = CORRESPONDING #(<br>  customer_crm<br>  MAPPING kunnr = code name1 = name<br>    (<br>      info = information<br>      MAPPING<br>      bukrs = company_code<br>      vkorg = sales_organization<br>      land1 = country<br>    )<br>  ).<br>gr_output = gr_output-&gt;write( customer_crm ).<br>gr_output = gr_output-&gt;write( customer_sap ).<br><br>gr_output-&gt;next_section( |3、CORRESPONDING 嵌套表赋值| ).<br>*在 MAPPING 语句中，需要注意两边的字段类型，以免类型不兼容而导致程序 dump。<br>* 使用DEEP处理深层结构数据，相当于MOVE CORRESPONDING [ EXPANDING NESTED TABLES ]。<br>* 使用BASE保留初始数据，<br>* 为结构赋值时类似于 VALUE [ BASE ]，<br>* 为内表赋值时相当于 MOVE CORRESPONDING [ KEEPING TARGET LINES ]<br><br>DATA: BEGIN OF gs_emps,<br>        dept      TYPE char10,<br>        t_persons TYPE TABLE OF ty_person,<br>        count     TYPE i VALUE 0,<br>      END OF gs_emps,<br>      gt_emps LIKE TABLE OF gs_emps.<br><br>TYPES: BEGIN OF ty_sales,<br>         code       TYPE char4,<br>         sales_name TYPE char20,    &quot; 字段名不同，需要mapping<br>       END OF ty_sales.<br><br>DATA: BEGIN OF gs_sales,<br>        dept      TYPE char10,<br>        t_persons TYPE TABLE OF ty_sales,<br>        count     TYPE i VALUE 0,<br>      END OF gs_sales,<br>      gt_sales   LIKE TABLE OF gs_sales,<br>      gt_sales_b LIKE TABLE OF gs_sales.<br><br>gt_person = VALUE #( ( code = &#x27;1000&#x27; name = &#x27;XLevon&#x27; ) ( code = &#x27;2000&#x27; name = &#x27;Leo&#x27; ) ).<br><br>gs_sales = VALUE #( dept = &#x27;SALES-A&#x27; count = 2<br>                    t_persons = CORRESPONDING #( gt_person MAPPING sales_name = name ) ).<br>gs_emps = CORRESPONDING #( gs_sales<br>                          MAPPING ( t_persons = t_persons MAPPING name = sales_name )<br>                          EXCEPT dept ).    &quot; 结构赋值<br>gr_output = gr_output-&gt;write( gs_sales ).   &quot; mapping<br>gr_output = gr_output-&gt;write( gs_emps ).    &quot; except dept<br><br>gt_sales = VALUE #( ( gs_sales ) ).<br>gt_emps = CORRESPONDING #( gt_sales<br>                          MAPPING ( t_persons = t_persons MAPPING name = sales_name ) ).  &quot; 内表赋值<br><br>gt_sales_b = VALUE #( ( dept = &#x27;DEPT-B&#x27; count = 1<br>                        t_persons = VALUE #( ( code = &#x27;3000&#x27; sales_name = &#x27;L&#x27; ) ) ) ).<br>gt_emps = CORRESPONDING #(  BASE ( gt_emps )      &quot; 保留原有数据<br>                            gt_sales_b            &quot; 追加新数据<br>                            MAPPING ( t_persons = t_persons MAPPING name = sales_name )<br>                            EXCEPT dept ).  &quot; 内表赋值<br>gr_output = gr_output-&gt;write( gt_sales ).<br>gr_output = gr_output-&gt;write( gt_emps ).   &quot; except dept<br><br>gr_output-&gt;next_section( |4、CORRESPONDING 内表更新| ).<br>*CORRESPONDING中可以从两个内表中引入数据，FORM子句后的内表结构需要定义为排序表或哈希表<br>* 该语法不能与DEEP/BASE关键字同时使用，但是可以使用MAPPING/EXCEPT<br>* 如下例所示，以表1为基表，根据USING定义的关联条件去表2查找数据，如果查找到，<br>* 则将表2的该条数据复写到表1对应的记录上并返回，否则直接返回表1的数据<br>* MAPPING/EXCEPT作用于表2数据复写到表1对应记录的过程中，特定条件下可以用来实现读取数据<br>* 并更新内表的操作，但是需要定义非标准表，有一定的局限性<br><br>TYPES:BEGIN OF ty_data_a,<br>        index TYPE i,<br>        text1 TYPE char1,<br>        text2 TYPE char1,<br>        text3 TYPE char1,<br>      END OF ty_data_a,<br>      BEGIN OF ty_data_b,<br>        id    TYPE i,<br>        text1 TYPE char1,<br>        text2 TYPE char1,<br>        char3 TYPE char1,<br>      END OF ty_data_b.<br><br>DATA: lt_tmp1            TYPE SORTED TABLE OF ty_data_a WITH UNIQUE KEY index,<br>      &quot;TYPE STANDARD TABLE OF ty_data_a WITH EMPTY KEY,<br>      lt_tmp2            TYPE SORTED TABLE OF ty_data_b WITH UNIQUE KEY id,     &quot; TYPE HASHED TABLE<br>      lt_data            TYPE TABLE OF ty_data_a,<br>      lt_data_map_except TYPE TABLE OF ty_data_a.<br><br>lt_tmp1 = VALUE #( FOR i = 1 UNTIL i &gt; 4 ( index = i text1 = &#x27;L&#x27; ) ).   &quot; 默认 THEN i + 1<br>lt_tmp2 = VALUE #( text2 = &#x27;E&#x27; char3 = &#x27;O&#x27; ( id = 2 ) ( id = 3 ) ).<br><br>&quot;按照using后条件对应，from后表的数据传递给前表<br>lt_data = CORRESPONDING #( lt_tmp1 FROM lt_tmp2 USING id = index ).<br>&quot;可以使用mapping和except<br>lt_data_map_except = CORRESPONDING #( lt_tmp1 FROM lt_tmp2 USING id = index<br>                                      MAPPING text3 = char3 EXCEPT text1 ).<br><br>gr_output = gr_output-&gt;write( lt_tmp1 ).<br>gr_output = gr_output-&gt;write( lt_tmp2 ).<br>gr_output = gr_output-&gt;write( lt_data ).<br>gr_output = gr_output-&gt;write( lt_data_map_except ).<br><br>*gr_output-&gt;display( ).<br><br><br>****************************************************<br>*   4、内表筛选 Filter<br>****************************************************<br>gr_output-&gt;next_section( |三、Filter 使用示例| ).<br>gr_output-&gt;next_section( |1、排序表赋值（自动排序）| ).<br><br>*定义数据类型<br>*TYPES tty_person2 TYPE TABLE OF ty_person WITH DEFAULT KEY.<br><br>*  初始化内表<br>&quot; 需要是排序表或者哈希表<br>TYPES: ty_sorted_tab TYPE SORTED TABLE OF ty_person WITH NON-UNIQUE KEY code.<br><br>DATA(gt_person_sorted) = VALUE ty_sorted_tab(<br>                                ( code = &#x27;1000&#x27; name = &#x27;XLevon1&#x27; )<br>                                ( code = &#x27;3000&#x27; name = &#x27;XLevon3&#x27; )<br>                                ( code = &#x27;2000&#x27; name = &#x27;XLevon2&#x27; ) ).<br>gr_output-&gt;write( gt_person_sorted ).   &quot; 输出时已经排序<br><br>*  直接Filter WHERE code = &#x27;1000&#x27;<br>DATA(gt_person_1000) = FILTER #( gt_person_sorted WHERE code = &#x27;1000&#x27; ).<br>gr_output-&gt;next_section( |1.1、直接 WHERE code = &#x27;1000&#x27;| )-&gt;write( gt_person_1000 ).<br><br>*  使用except语句 EXCEPT WHERE code = &#x27;1000&#x27;<br>DATA(gt_person_except_1000) = FILTER #( gt_person_sorted EXCEPT WHERE code = &#x27;1000&#x27;).<br>gr_output-&gt;next_section( |1.2、使用 EXCEPT WHERE code = &#x27;1000&#x27;| )-&gt;write( gt_person_except_1000 ).<br><br>*  标准表赋值<br>TYPES: ty_std_tab TYPE STANDARD TABLE OF ty_person<br>             WITH NON-UNIQUE SORTED KEY cod COMPONENTS code.<br>DATA gt_person_std TYPE ty_std_tab.<br>gt_person_std  = VALUE #(<br>                    ( code = &#x27;1000&#x27; name = &#x27;XLevon1&#x27; )<br>                    ( code = &#x27;3000&#x27; name = &#x27;XLevon3&#x27; )<br>                    ( code = &#x27;2000&#x27; name = &#x27;XLevon2&#x27; ) ).<br>gr_output-&gt;next_section( |2、标准表赋值（无排序）| )-&gt;write( gt_person_std ).<br><br>*  标准表filter USING KEY cod WHERE code = &#x27;01&#x27;<br>DATA(gt_person2_1000) = FILTER #( gt_person_std USING KEY cod WHERE code = &#x27;1000&#x27;).<br>gr_output-&gt;next_section( |2.1、标准表 USING KEY| )-&gt;write( gt_person2_1000 ).<br><br>*  标准表except语句 EXCEPT USING KEY cod  WHERE code = &#x27;01&#x27;<br>DATA(gt_person2_except_1000) = FILTER #( gt_person_std EXCEPT USING KEY cod  WHERE code = &#x27;1000&#x27;).<br>gr_output-&gt;next_section( |2.2、标准表 EXCEPT USING KEY| )-&gt;write( gt_person2_except_1000 ).<br><br>*  使用多个值筛选<br>DATA it_codes TYPE SORTED TABLE OF ty_person-code WITH NON-UNIQUE KEY table_line.<br>it_codes = VALUE #( ( &#x27;1000&#x27; ) ( &#x27;3000&#x27; ) ).<br>DATA(gt_person_cond) = FILTER #( gt_person_std IN it_codes WHERE code = table_line ).<br>gr_output-&gt;next_section( |3.1、使用单个关键字多个值筛选 IN| )-&gt;write( gt_person_cond ).<br><br>DATA(gt_person_exept_cond) = FILTER #( gt_person_std EXCEPT IN it_codes WHERE code = table_line ).<br>gr_output-&gt;next_section( |3.2、使用单个关键字多个值筛选 EXCEPT IN| )-&gt;write( gt_person_exept_cond ).<br><br>*  使用多个关键字筛选<br>TYPES: ty_filter_tab TYPE HASHED TABLE OF ty_person WITH UNIQUE KEY code name.<br>DATA(lt_filter) = VALUE ty_filter_tab(<br>                      ( code = &#x27;1000&#x27; name  =&#x27;XLevon1&#x27; )<br>                      ( code = &#x27;3000&#x27; name = &#x27;XLevon3&#x27; )  ).<br>gr_output-&gt;next_section( |4、使用多个关键字的行记录筛选| )-&gt;write( lt_filter ).<br><br>DATA(gt_person2_cond) = FILTER #( gt_person_std IN lt_filter<br>                              WHERE code = code AND name = name ).<br>gr_output-&gt;next_section( |4.1、使用多个关键字的行记录筛选 IN| )-&gt;write( gt_person2_cond ).<br><br>*    排除<br>DATA(gt_person2_except_cond) = FILTER #( gt_person_std EXCEPT IN lt_filter<br>                              WHERE code = code AND name = name ).<br>gr_output-&gt;next_section( |4.2、使用多个关键字的行记录筛选 EXCEPT IN| )-&gt;write( gt_person2_except_cond ).<br><br>*  显示数据<br>*gr_output-&gt;display( ).<br><br><br>****************************************************<br>*   5、Reduce 汇总求和 （ ≥ NW 7.40）<br>****************************************************<br>gr_output-&gt;next_section( |四、REDUCE 使用示例| ).<br><br>*  数字汇总<br>DATA(lv_sum) = REDUCE i( INIT s = 0 FOR  i = 1 UNTIL i &gt; 10 NEXT s += i ).<br>gr_output-&gt;next_section( |1、简单汇总| )-&gt;write( lv_sum ).<br><br>*   字符串连接<br>DATA(lv_str) = REDUCE string( INIT st = |数字连接:|<br>                           FOR i = 10 THEN i - 1 UNTIL i = 0  &quot; 或者： while i &gt; 0<br>                           NEXT st = st &amp;&amp; |&#123; i &#125;| ).<br>gr_output-&gt;next_section( |2、字符串连接| )-&gt;write( lv_str ).<br><br>*   内表汇总<br>TYPES: tty_30 TYPE TABLE OF i WITH EMPTY KEY.<br>DATA(itab31) = VALUE tty_30( FOR j = 1 WHILE j &lt;= 10 ( j ) ).<br>DATA(it_sum) = REDUCE i( INIT x = 0 FOR ls_tab IN itab31 NEXT x = x + ls_tab ).<br>gr_output-&gt;next_section( |3、内表| )-&gt;write( itab31 ).<br>gr_output-&gt;next_section( |4、内表汇总| )-&gt;write( it_sum ).<br><br>*  复杂汇总<br>TYPES:BEGIN OF ty_031,<br>        code  TYPE char2,<br>        group TYPE char1,<br>        quan  TYPE i,<br>      END OF ty_031.<br>DATA itab32 TYPE TABLE OF ty_031<br>      WITH NON-UNIQUE SORTED KEY grp COMPONENTS group       &quot; 按照group汇总时需要<br>      WITH NON-UNIQUE SORTED KEY cod COMPONENTS code group. &quot; 按照code和group汇总时需要<br><br>itab32 = VALUE #( ( code = &#x27;1&#x27; group = &#x27;A&#x27; quan = 1 )<br>                  ( code = &#x27;1&#x27; group = &#x27;A&#x27; quan = 3 )<br>                  ( code = &#x27;3&#x27; group = &#x27;A&#x27; quan = 2 )<br>                  ( code = &#x27;2&#x27; group = &#x27;C&#x27; quan = 4 )<br>                  ( code = &#x27;2&#x27; group = &#x27;A&#x27; quan = 5 )<br>                  ( code = &#x27;3&#x27; group = &#x27;B&#x27; quan = 8 )<br>                  ( code = &#x27;3&#x27; group = &#x27;A&#x27; quan = 4 )<br>                  ( code = &#x27;1&#x27; group = &#x27;C&#x27; quan = 2 ) ).<br>gr_output-&gt;next_section( |5、复杂汇总-示例表| )-&gt;write( itab32 ).<br><br>*  按照group汇总<br>DATA itabg TYPE TABLE OF ty_031.<br>LOOP AT itab32 INTO DATA(ls_itab32).<br>  DATA(lscheck) = VALUE #( itabg[ group = ls_itab32-group ] OPTIONAL ).<br>  IF lscheck IS NOT INITIAL.<br>    CONTINUE.<br>  ENDIF.<br><br>  DATA(ls_itabg) = ls_itab32.<br>  CLEAR:ls_itabg-code.<br>  ls_itabg-quan = REDUCE i(<br>    INIT sum = 0<br>    FOR ls IN FILTER #( itab32 USING KEY grp WHERE group = ls_itabg-group )<br>    NEXT sum += ls-quan ).<br>  APPEND ls_itabg TO itabg.<br>ENDLOOP.<br>gr_output-&gt;next_section( |5.1、按照group汇总| )-&gt;write( itabg ).<br><br>*  按照 code 和 group 汇总<br>DATA itabcg TYPE TABLE OF ty_031.<br>CLEAR: lscheck, ls_itabg.<br>LOOP AT itab32 INTO ls_itab32.<br>  lscheck = VALUE #( itabcg[ code = ls_itab32-code group = ls_itab32-group ] OPTIONAL ).<br>  IF lscheck IS NOT INITIAL.<br>    CONTINUE.<br>  ENDIF.<br><br>  ls_itabg = ls_itab32.<br>  ls_itabg-quan = REDUCE i(<br>    INIT sum = 0<br>    FOR ls IN FILTER #( itab32 USING KEY cod WHERE code = ls_itabg-code AND group = ls_itabg-group )<br>    NEXT sum += ls-quan ).<br>  APPEND ls_itabg TO itabcg.<br>ENDLOOP.<br>gr_output-&gt;next_section( |5.2、按照 code 和 group 汇总| )-&gt;write( itabcg ).<br><br>*  显示数据<br>*gr_output-&gt;display( ).<br><br>****************************************************<br>*   6、SWITCH、COND 赋值<br>****************************************************<br>gr_output-&gt;next_section( |五、SWITCH、COND 赋值| ).<br>gr_output-&gt;next_section( |1、SWITCH 赋值| ).<br><br>* 1）SWITCH<br>*  SWITCH动态赋值语句，通常根据同一变量的不同数据来动态处理，用法类似于 CASE 语句。<br>DATA(number) = SWITCH string( sy-index<br>                              WHEN 1 THEN &#x27;one&#x27;<br>                              WHEN 2 THEN &#x27;two&#x27;<br>                              WHEN 3 THEN &#x27;three&#x27;<br>                              ELSE &#x27;unkown&#x27; ).  &quot;THROW cx_overflow( ) ).<br>gr_output-&gt;write( number ).<br><br>DATA(lv_indicator) = 1.<br>DATA(lv_day1) = SWITCH char10( lv_indicator<br>                              WHEN 1 THEN &#x27;MONDAY&#x27;<br>                              WHEN 2 THEN &#x27;TUESDAY&#x27;<br>                              WHEN 3 THEN &#x27;WEDNESDAY&#x27;<br>                              WHEN 4 THEN &#x27;THURSDAY&#x27;<br>                              WHEN 5 THEN &#x27;FRIDAY&#x27;<br>                              WHEN 6 THEN &#x27;SATURDAY&#x27;<br>                              WHEN 7 THEN &#x27;SUNDAY&#x27;<br>                              ELSE &#x27;404&#x27; &amp;&amp; &#x27;-ERROR&#x27;<br>                             ).<br>gr_output-&gt;write( lv_day1 ).<br><br>* 23）COND<br>*COND动态赋值语句，可以根据不同条件来动态处理，用法类似于CASE/IF语句。<br>*COND语句中允许使用较为复杂的判断条件，因此VALUE语句中动态赋值通常会使用COND。<br>lv_indicator = 7.<br>DATA(lv_day7) = COND char10( WHEN lv_indicator = 1 THEN &#x27;MONDAY&#x27;<br>                            WHEN lv_indicator = 2 THEN &#x27;TUESDAY&#x27;<br>                            WHEN lv_indicator = 3 THEN &#x27;WEDNESDAY&#x27;<br>                            WHEN lv_indicator = 4 THEN &#x27;THURSDAY&#x27;<br>                            WHEN lv_indicator = 5 THEN &#x27;FRIDAY&#x27;<br>                            WHEN lv_indicator = 6 THEN &#x27;SATURDAY&#x27;<br>                            WHEN lv_indicator = 7 AND sy-langu EQ &#x27;E&#x27; THEN &#x27;SUNDAY&#x27;<br>                            WHEN lv_indicator = 7 AND sy-langu EQ &#x27;F&#x27; THEN &#x27;DIMANCHE&#x27;<br>                            WHEN lv_indicator = 7 AND sy-langu EQ &#x27;1&#x27; THEN &#x27;星期天&#x27;<br>                            ELSE &#x27;404&#x27; &amp;&amp; &#x27;-ERROR&#x27;<br>                           ).<br>gr_output-&gt;next_section( |2、COND 赋值| )-&gt;write( lv_day7 ).<br><br>*gr_output-&gt;display( ).<br><br>****************************************************<br>*   7、其他<br>****************************************************<br>* 1）前导零处理<br>DATA:lv_matnr1 TYPE matnr VALUE &#x27;X999&#x27;,<br>     lv_matnr2 TYPE matnr VALUE &#x27;999&#x27;,<br>     lv_matnr6 TYPE matnr,<br>     lv_matnr7 TYPE matnr.<br><br>* Width/Alignment/Padding 宽度/对齐/填充<br>&quot;按指定宽度（18）位置（RIGHT）填充指定字符（0），不管是否含非数字<br>DATA(lv_matnr3) = |&#123; lv_matnr1  WIDTH = 18 ALIGN = RIGHT PAD = &#x27;0&#x27; &#125;|.<br>DATA(lv_matnr4) = |&#123; lv_matnr1 ALPHA = IN &#125;|.           &quot;含有非数字，不补前导0<br>&quot;不有非数字，补前导0至40位，物料标准转换例程为补前导0至18位，故这个方法不适合物料补前导0<br>DATA(lv_matnr5) = |&#123; lv_matnr2 ALPHA = IN &#125;|.<br><br>&quot;物料标准转换例程，含有非数字，不做转换<br>CALL FUNCTION &#x27;CONVERSION_EXIT_MATN1_INPUT&#x27;<br>  EXPORTING<br>    input        = lv_matnr1<br>  IMPORTING<br>    output       = lv_matnr6<br>  EXCEPTIONS<br>    length_error = 1<br>    OTHERS       = 2.<br>IF sy-subrc &lt;&gt; 0.<br>* Implement suitable error handling here<br>ENDIF.<br><br>&quot;物料标准转换例程，不含非数字，则补前导0至18位<br>CALL FUNCTION &#x27;CONVERSION_EXIT_MATN1_INPUT&#x27;<br>  EXPORTING<br>    input        = lv_matnr2<br>  IMPORTING<br>    output       = lv_matnr7<br>  EXCEPTIONS<br>    length_error = 1<br>    OTHERS       = 2.<br>IF sy-subrc &lt;&gt; 0.<br>* Implement suitable error handling here<br>ENDIF.<br><br>DATA(lv_matnr8) = |&#123; lv_matnr7 ALPHA = OUT &#125;|.<br>DATA(lv_matnr9) = lv_matnr7.<br>SHIFT lv_matnr9 LEFT DELETING LEADING &#x27;0&#x27;.  &quot;去前导0<br><br>WRITE / : &#x27;非纯数字物料号：lv_matnr1:&#x27; &amp;&amp; lv_matnr1 ,<br>          &#x27;纯数字物料号：lv_matnr2:&#x27; &amp;&amp; lv_matnr2 ,<br>          &#x27;WIDTH ALIGN PAD lv_matnr3:&#x27; &amp;&amp; lv_matnr3 ,<br>          &#x27;ALPHA = IN lv_matnr4:&#x27; &amp;&amp; lv_matnr4 ,<br>          &#x27;ALPHA = IN lv_matnr5:&#x27; &amp;&amp; lv_matnr5 ,<br>          &#x27;CONVERSION_EXIT_MATN1_INPUT lv_matnr6:&#x27; &amp;&amp; lv_matnr6 ,<br>          &#x27;CONVERSION_EXIT_MATN1_INPUT lv_matnr7:&#x27; &amp;&amp; lv_matnr7 ,<br>          &#x27;ALPHA = OUT lv_matnr8:&#x27; &amp;&amp; lv_matnr8 ,<br>          &#x27;SHIFT LEFT DELETING LEADING lv_matnr9:&#x27; &amp;&amp; lv_matnr9 .<br><br>* 2） 日期格式<br>WRITE / : ,<br>|ISO日期：&#123; sy-datum DATE = ISO &#125;|,                &quot;Date Format YYYY-MM-DD<br>|USER日期：&#123; sy-datum DATE = USER &#125;|,              &quot;As per user settings<br>|ENVIRONMENT日期：&#123; sy-datum DATE = ENVIRONMENT &#125;|.&quot;Formatting setting of language environment<br><br>* 3）字符串内表拼接<br>TYPES: BEGIN OF ty_test,<br>         code TYPE char4,<br>         name TYPE char10,<br>       END OF ty_test,<br>       tty_test TYPE TABLE OF ty_test.<br>DATA: gt_test  TYPE tty_test,<br>      lt_split LIKE gt_test.<br>gt_test = VALUE #( ( code = &#x27;10&#x27; name = &#x27;Leo&#x27; )<br>                   ( code = &#x27;20&#x27; name = &#x27;XLevon&#x27; )<br>                   ( code = &#x27;30&#x27; name = &#x27;Leo&#x27; )<br>                   ( code = &#x27;40&#x27; name = &#x27;XLevon&#x27; ) ).<br><br>DATA(lv_concat_lines) = concat_lines_of( table = gt_test  sep = &#x27;/&#x27; ).  &quot; 内表拼接为字符串<br>SPLIT lv_concat_lines AT &#x27;/&#x27; INTO TABLE lt_split.    &quot; 字符串拆分成内表<br><br>WRITE / : ,&#x27;concat_lines_of：&#x27;&amp;&amp; lv_concat_lines.<br>LOOP AT lt_split ASSIGNING FIELD-SYMBOL(&lt;fs_split&gt;).<br>  WRITE / : &#x27;SPLIT-&#x27; &amp;&amp; sy-tabix &amp;&amp; &#x27;：&#x27; &amp;&amp; &lt;fs_split&gt;-code &amp;&amp; &#x27;：&#x27;&amp;&amp; &lt;fs_split&gt;-name.<br>ENDLOOP.<br><br>* 4）LINES、LINE_INDEX、LINE_EXISTS<br>*  LINES 计算内表总行数。<br>*  LINE_EXISTS 判断根据特定条件能否在内表中读取到记录，返回值为布尔型数据。使用此语法，可判断内表中行是否有满足条件的，无需LOOP判断，省去好多代码。<br>*  LINE_INDEX 获取内表中满足特定条件的记录所在的行数( INDEX ),如果存在多个条件值，则只会返回第一个搜索到的值的行数。<br>DATA(lv_lines) = lines( gt_test ).<br>DATA(lv_index) = line_index( gt_test[ code = &#x27;20&#x27; name = &#x27;XLevon&#x27; ] ).<br>DATA(lv_exist) = xsdbool( line_exists( gt_test[ code = &#x27;20&#x27; name = &#x27;XLevon&#x27; ] ) ).<br>IF line_exists( gt_test[ code = &#x27;20&#x27; name = &#x27;XLevon&#x27; ] ).<br>  DATA(ls_data) = gt_test[ code = &#x27;20&#x27; name = &#x27;XLevon&#x27; ]. &quot;取该行数据<br>  WRITE / : ,&#x27;从&#x27; &amp;&amp; lv_lines &amp;&amp; &#x27;条记录中找到第&#x27; &amp;&amp; lv_index &amp;&amp; &#x27;条数据为：&#x27;, ls_data.<br>ENDIF.<br><br>* 5）||、&#123;&#125;、&amp;&amp;的使用<br>*  || 里面内容除&#123;&#125;内的原样输出，包括空格；<br>*  || 里面可以使用&#123;&#125;引入ABAP代码<br>WRITE / : , |有空格: &#123; gt_test[ name = &#x27;XLevon&#x27; ]-code &#125;| ,   &quot; 空格会保留<br>&#x27;没空格: &#x27;&amp;&amp; gt_test[ name = &#x27;XLevon&#x27; ]-code  .   &quot; 空格被忽略<br><br>* 6）REPLACE<br>*  如果occ为正，则从左边开始计数;如果occ为负，则从右数。<br>*   值1、2、....表示第一，第二，事件。取值为-1、-2、....表示最后一个，倒数第二个，。<br>DATA(lv_string1) = &#x27;XLevon&#x27;.<br>DATA(lv_string2) = &#x27;Leo&#x27;..<br>DATA(lv_string3) = replace(   val = lv_string1<br>                               sub = &#x27;Lev&#x27;<br>                               case = abap_true<br>                               with = to_upper( lv_string2 ) &quot;如果发现sta,用lv_string2的大写替换<br>                               occ = 1   &quot;val中只有1处为sub<br>                            ).<br>WRITE / : , &#x27;替换后的字符串：&#x27; &amp;&amp;  lv_string3.<br><br>* 7）CASE TYPE OF dobj<br>TRY.<br>    DATA(lv_value) = 10 / 0.<br>    WRITE: / , &#x27;10 / 0，触发错误：&#x27;.<br>  CATCH cx_root INTO DATA(exc).<br>    CASE TYPE OF exc.<br>      WHEN TYPE cx_sy_arithmetic_error.<br>        WRITE: &#x27;Arithmetic error&#x27; .<br>      WHEN TYPE cx_sy_conversion_error.<br>        WRITE:  &#x27;Conversion error&#x27; .<br>      WHEN OTHERS.<br>        WRITE:  &#x27;Other error&#x27; .<br>    ENDCASE.<br>ENDTRY.<br><br>* 8）GROUP BY分组循环<br>*  分组处理，不像at end of 那样需要调整字段顺序<br>gr_output-&gt;next_section( |六、其他| )-&gt;next_section( |1、GROUP BY分组| ).<br><br>DATA lt_groupby_name LIKE gt_test.<br>LOOP AT gt_test INTO DATA(ls_test)<br>  GROUP BY ( name = ls_test-name )<br>  ASCENDING INTO DATA(lt_group).<br>  &quot;组内循环<br>  LOOP AT GROUP lt_group INTO DATA(ls_group).<br>    APPEND ls_group TO lt_groupby_name.<br>  ENDLOOP.<br>  gr_output-&gt;write( lt_groupby_name ).<br>  CLEAR lt_groupby_name[].<br>ENDLOOP.<br><br>* 9）GROUP BY SWITCH 动态条件分组。<br>gr_output-&gt;next_section( |2、GROUP BY SWITCH 动态条件分组| ).<br><br>SELECT<br>  code, name,<br>  CASE WHEN code IN (&#x27;10&#x27;, &#x27;20&#x27;) THEN &#x27;A&#x27; ELSE &#x27;B&#x27; END AS group<br>  FROM @gt_test AS t<br>  INTO TABLE @DATA(gt_group).<br><br>DATA lt_groupby_switch LIKE gt_group.<br>DATA: lv_switch_field TYPE c VALUE &#x27;B&#x27;.<br>LOOP AT gt_group ASSIGNING FIELD-SYMBOL(&lt;fs_group&gt;)<br>  GROUP BY SWITCH string( lv_switch_field<br>      WHEN &#x27;A&#x27; THEN |name = &#123; &lt;fs_group&gt;-name &#125;|<br>      WHEN &#x27;B&#x27; THEN |group = &#123; &lt;fs_group&gt;-group &#125;| )<br>*  GROUP BY ( group = &lt;fs_group&gt;-group )    &quot; 等同<br>    ASSIGNING FIELD-SYMBOL(&lt;ls_group&gt;).<br>  LOOP AT GROUP &lt;ls_group&gt; ASSIGNING FIELD-SYMBOL(&lt;fs1&gt;).<br>    APPEND &lt;fs1&gt; TO lt_groupby_switch.<br>  ENDLOOP.<br>  gr_output-&gt;write( lt_groupby_switch ).<br>  CLEAR lt_groupby_switch[].<br>ENDLOOP.<br><br></code></pre></td></tr></table></figure><p>————————————————<br>版权声明：本文为CSDN博主「X档案库」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/XLevon/article/details/129232646">https://blog.csdn.net/XLevon/article/details/129232646</a></p>]]></content>
    
    
    <categories>
      
      <category>ABAP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SAP</tag>
      
      <tag>ABAP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>RFC使用的SOAP协议</title>
    <link href="/unrpyc/2023/09/16/soap%E5%8D%8F%E8%AE%AE/"/>
    <url>/unrpyc/2023/09/16/soap%E5%8D%8F%E8%AE%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="RFC使用的SOAP协议"><a href="#RFC使用的SOAP协议" class="headerlink" title="RFC使用的SOAP协议"></a>RFC使用的SOAP协议</h1><p><img src="https://raw.githubusercontent.com/Yan-Cam/blogPictureHost/main/soap%E5%8D%8F%E8%AE%AE.png" alt="webservice图示"></p><h2 id="什么是webservice"><a href="#什么是webservice" class="headerlink" title="什么是webservice"></a>什么是webservice</h2><p>一个SOA（面向服务的编程）的架构，它是不依赖于语言，不依赖于平台，可以实现不同的语言（通过 xml 描述）间的相互调用，通过Internet进行基于Http协议的网络应用间的交互。通过SOAP在Web上提供的软件服务，使用WSDL文件进行说明，并通过UDDI进行注册。<strong>在SAP中由SAP系统定义服务后在SOA管理中设置</strong></p><h2 id="什么是UDDI"><a href="#什么是UDDI" class="headerlink" title="什么是UDDI"></a>什么是UDDI</h2><p>(Universal Description, Discovery, and Integration) 是一个主要针对Web服务供应商和使用者的新项目。在用户能够调用Web服务之前，必须确定这个服务内包含哪些商务方法，找到被调用的接口定义，还要在服务端来编制软件，UDDI是一种根据描述文档来引导系统查找相应服务的机制。UDDI利用SOAP消息机制（标准的XML&#x2F;HTTP）来发布，编辑，浏览以及查找注册信息。它采用XML格式来封装各种不同类型的数据，并且发送到注册中心或者由注册中心来返回需要的数据。<strong>在SAP中UDDI由SOA管理创建</strong></p><p><img src="https://raw.githubusercontent.com/Yan-Cam/blogPictureHost/main/image-20231026202139480.png" alt="SOA管理系统"></p><h2 id="什么是WSDL"><a href="#什么是WSDL" class="headerlink" title="什么是WSDL"></a><strong>什么是WSDL</strong></h2><p>(Web Services Description Language) WSDL 文件是一个 XML 文档，用于说明一组 SOAP 消息以及如何交换这些消息。大多数情况下由软件自动生成和使用。<strong>在sap系统中定义服务会自动生成，由函数创建服务也会生成wsdl</strong></p><p>以下为wsdl示例解析</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 以下为约定俗成的固定写法 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">wsdl:definitions</span> <span class="hljs-attr">xmlns:wsdl</span>=<span class="hljs-string">&quot;http://schemas.xmlsoap.org/wsdl/&quot;</span> <span class="hljs-attr">xmlns:xsd</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema&quot;</span> <span class="hljs-attr">xmlns:soap</span>=<span class="hljs-string">&quot;http://schemas.xmlsoap.org/wsdl/soap/&quot;</span> <span class="hljs-attr">xmlns:wsoap12</span>=<span class="hljs-string">&quot;http://schemas.xmlsoap.org/wsdl/soap12/&quot;</span> <span class="hljs-attr">xmlns:http</span>=<span class="hljs-string">&quot;http://schemas.xmlsoap.org/wsdl/http/&quot;</span> <span class="hljs-attr">xmlns:mime</span>=<span class="hljs-string">&quot;http://schemas.xmlsoap.org/wsdl/mime/&quot;</span> <span class="hljs-attr">xmlns:tns</span>=<span class="hljs-string">&quot;urn:sap-com:document:sap:rfc:functions&quot;</span> <span class="hljs-attr">xmlns:wsp</span>=<span class="hljs-string">&quot;http://schemas.xmlsoap.org/ws/2004/09/policy&quot;</span> <span class="hljs-attr">xmlns:wsu</span>=<span class="hljs-string">&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;</span> <span class="hljs-attr">targetNamespace</span>=<span class="hljs-string">&quot;urn:sap-com:document:sap:rfc:functions&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">wsdl:documentation</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">sidl:sidl</span> <span class="hljs-attr">xmlns:sidl</span>=<span class="hljs-string">&quot;http://www.sap.com/2007/03/sidl&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">wsdl:documentation</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">wsp:UsingPolicy</span> <span class="hljs-attr">wsdl:required</span>=<span class="hljs-string">&quot;true&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">wsp:Policy</span> <span class="hljs-attr">wsu:Id</span>=<span class="hljs-string">&quot;IF_IF_ZRFC_TEST_001_SRFC&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">sapsession:Session</span> <span class="hljs-attr">xmlns:sapsession</span>=<span class="hljs-string">&quot;http://www.sap.com/webas/630/soap/features/session/&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">sapsession:enableSession</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">sapsession:enableSession</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">sapsession:Session</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">wsp:Policy</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">wsp:Policy</span> <span class="hljs-attr">wsu:Id</span>=<span class="hljs-string">&quot;OP_IF_OP_ZRFC_TEST001&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">sapblock:enableBlocking</span> <span class="hljs-attr">xmlns:sapblock</span>=<span class="hljs-string">&quot;http://www.sap.com/NW05/soap/features/blocking/&quot;</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">sapblock:enableBlocking</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">sapcomhnd:enableCommit</span> <span class="hljs-attr">xmlns:sapcomhnd</span>=<span class="hljs-string">&quot;http://www.sap.com/NW05/soap/features/commit/&quot;</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">sapcomhnd:enableCommit</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">saptrhnw05:required</span> <span class="hljs-attr">xmlns:saptrhnw05</span>=<span class="hljs-string">&quot;http://www.sap.com/NW05/soap/features/transaction/&quot;</span>&gt;</span>no<span class="hljs-tag">&lt;/<span class="hljs-name">saptrhnw05:required</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">saprmnw05:enableWSRM</span> <span class="hljs-attr">xmlns:saprmnw05</span>=<span class="hljs-string">&quot;http://www.sap.com/NW05/soap/features/wsrm/&quot;</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">saprmnw05:enableWSRM</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">wsp:Policy</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 声明了WebService用到的所有数据类型，下面声明了一个简单类型char10，两个复合类型ZRFC_TEST_INPUT与ZRFC_TEST_OUTPUT --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">wsdl:types</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">xsd:schema</span> <span class="hljs-attr">attributeFormDefault</span>=<span class="hljs-string">&quot;qualified&quot;</span> <span class="hljs-attr">targetNamespace</span>=<span class="hljs-string">&quot;urn:sap-com:document:sap:rfc:functions&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">xsd:simpleType</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;char10&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">xsd:restriction</span> <span class="hljs-attr">base</span>=<span class="hljs-string">&quot;xsd:string&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">xsd:maxLength</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;10&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">xsd:restriction</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">xsd:simpleType</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">xsd:complexType</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;ZRFC_TEST_INPUT&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">xsd:sequence</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">xsd:element</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;TEXT1&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;tns:char10&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">xsd:element</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;TEXT2&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;tns:char10&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">xsd:element</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;TEXT3&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;tns:char10&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">xsd:sequence</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">xsd:complexType</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">xsd:complexType</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;ZRFC_TEST_OUTPUT&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">xsd:sequence</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">xsd:element</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;ZOUT1&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;tns:char10&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">xsd:element</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;ZOUT2&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;tns:char10&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">xsd:element</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;ZOUT3&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;tns:char10&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">xsd:sequence</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">xsd:complexType</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 将ZRFC_TEST_INPUT放入了ZRFC_TEST001中 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">xsd:element</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;ZRFC_TEST001&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">xsd:complexType</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">xsd:sequence</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">xsd:element</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;ZTS_INPUT&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;tns:ZRFC_TEST_INPUT&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">xsd:sequence</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">xsd:complexType</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">xsd:element</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 将ZRFC_TEST_OUTPUT放入了ZRFC_TEST001Respons中 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">xsd:element</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;ZRFC_TEST001Response&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">xsd:complexType</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">xsd:sequence</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">xsd:element</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;ZTS_OUTPUT&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;tns:ZRFC_TEST_OUTPUT&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">xsd:sequence</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">xsd:complexType</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">xsd:element</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">xsd:schema</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">wsdl:types</span>&gt;</span><br><span class="hljs-comment">&lt;!-- message指定了操作中用到的所有的数据类型 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">wsdl:message</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;ZRFC_TEST001&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">wsdl:part</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;parameters&quot;</span> <span class="hljs-attr">element</span>=<span class="hljs-string">&quot;tns:ZRFC_TEST001&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">wsdl:message</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">wsdl:message</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;ZRFC_TEST001Response&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">wsdl:part</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;parameter&quot;</span> <span class="hljs-attr">element</span>=<span class="hljs-string">&quot;tns:ZRFC_TEST001Response&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">wsdl:message</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 指出了这个WebService所有支持的操作，就是说有哪些函数可供调用。 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">wsdl:portType</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;ZRFC_TEST_001_SRFC&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">wsdl:documentation</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">sapdoc:sapdoc</span> <span class="hljs-attr">xmlns:sapdoc</span>=<span class="hljs-string">&quot;urn:sap:esi:documentation&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">sapdoc:docitem</span> <span class="hljs-attr">docURL</span>=<span class="hljs-string">&quot;http://vhcals4hcs.sap.cn:50000/sap/bc/esdt/docu/sd_text?sap-client=100&amp;sd_name=ZRFC_TEST_001_SRFC&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">sapdoc:sapdoc</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">wsdl:documentation</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">wsp:Policy</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">wsp:PolicyReference</span> <span class="hljs-attr">URI</span>=<span class="hljs-string">&quot;#IF_IF_ZRFC_TEST_001_SRFC&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">wsp:Policy</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 指明要暴露给外界调用的操作，也就是说要暴露的函数是什么 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">wsdl:operation</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;ZRFC_TEST001&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">wsp:Policy</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">wsp:PolicyReference</span> <span class="hljs-attr">URI</span>=<span class="hljs-string">&quot;#OP_IF_OP_ZRFC_TEST001&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">wsp:Policy</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 指定这个函数中所用到的输入输出的类型 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">wsdl:input</span> <span class="hljs-attr">message</span>=<span class="hljs-string">&quot;tns:ZRFC_TEST001&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">wsdl:output</span> <span class="hljs-attr">message</span>=<span class="hljs-string">&quot;tns:ZRFC_TEST001Response&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">wsdl:operation</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">wsdl:portType</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="什么是SOAP"><a href="#什么是SOAP" class="headerlink" title="什么是SOAP"></a>什么是SOAP</h2><p>(Simple Object Access Protocol)简单对象存取协议。是XML Web Service 的通信协议。当用户通过UDDI找到你的WSDL描述文档后，他通过可以SOAP调用你建立的Web服务中的一个或多个操作。SOAP是XML文档形式的调用方法的规范，它可以支持不同的底层接口，像HTTP(S)或者SMTP。</p><blockquote><p>1.SOAP1.1为content-Type:text&#x2F;xm;charset&#x3D;UTF-8</p><p>2.SOAP1.2为content-Type:application&#x2F;soap+xml;charset&#x3D;UTF-8</p></blockquote><p>SOAP1.1的HTTP请求头：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/xe_cxf2.4_soap12_spring_web/ws/helloworldsoap12?wsdl</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>text/xml; charset=UTF-8<br><span class="hljs-attribute">Accept</span><span class="hljs-punctuation">: </span>**<br><span class="hljs-attribute">User-Agent</span><span class="hljs-punctuation">: </span>Apache CXF 2.4.0<br><span class="hljs-attribute">Cache-Control</span><span class="hljs-punctuation">: </span>no-cache<br><span class="hljs-attribute">Pragma</span><span class="hljs-punctuation">: </span>no-cache<br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>localhost:6767<br><span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>keep-alive<br><span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>214<br></code></pre></td></tr></table></figure><p>SOAP1.2的请求头：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/xe_cxf2.4_soap12_spring_web/ws/helloworldsoap12?wsdl</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>application/soap+xml;charset=UTF-8<br><span class="hljs-attribute">Accept</span><span class="hljs-punctuation">: </span>*/*<br><span class="hljs-attribute">User-Agent</span><span class="hljs-punctuation">: </span>Apache CXF 2.4.0<br><span class="hljs-attribute">Cache-Control</span><span class="hljs-punctuation">: </span>no-cache<br><span class="hljs-attribute">Pragma</span><span class="hljs-punctuation">: </span>no-cache<br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>localhost:6767<br><span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>keep-alive<br><span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>214<br></code></pre></td></tr></table></figure><p>以下为SOAP示例解析</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">soap:Envelope</span> <span class="hljs-attr">xmlns:soap</span>=<span class="hljs-string">&quot;http://www.w3.org/2003/05/soap-envelope&quot;</span> <span class="hljs-attr">xmlns:urn</span>=<span class="hljs-string">&quot;urn:sap-com:document:sap:rfc:functions&quot;</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">soap:Header</span>/&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">soap:Body</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 之前暴露出来的操作（接口）,SAP系统中的RFC函数 --&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">urn:ZRFC_TEST001</span>&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">ZTS_INPUT</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">TEXT1</span>&gt;</span>?<span class="hljs-tag">&lt;/<span class="hljs-name">TEXT1</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">TEXT2</span>&gt;</span>?<span class="hljs-tag">&lt;/<span class="hljs-name">TEXT2</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">TEXT3</span>&gt;</span>?<span class="hljs-tag">&lt;/<span class="hljs-name">TEXT3</span>&gt;</span><br>         <span class="hljs-tag">&lt;/<span class="hljs-name">ZTS_INPUT</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">urn:ZRFC_TEST001</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">soap:Body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">soap:Envelope</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ABAP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SAP</tag>
      
      <tag>ABAP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SMARTFORMS</title>
    <link href="/unrpyc/2023/08/29/SMARTFORMS/"/>
    <url>/unrpyc/2023/08/29/SMARTFORMS/</url>
    
    <content type="html"><![CDATA[<h1 id="SMARTFORMS"><a href="#SMARTFORMS" class="headerlink" title="SMARTFORMS"></a>SMARTFORMS</h1><blockquote><p>SAP所提供的一款功能强大的商务报表解决方案，也被称为智能表单</p></blockquote><h2 id="Smart-Forms基本概念"><a href="#Smart-Forms基本概念" class="headerlink" title="Smart Forms基本概念"></a>Smart Forms基本概念</h2><p>能够按指定格式生成报表，并可以将执行结果通过连接打印机直接输出</p><p>采用图形模式来控制报表的格式及位置</p><p>基本事务代码：</p><ul><li>SMARTFORMS：维护表单</li><li>SMARTSTYLES：维护格式</li></ul><p>Smart Forms原理：</p><p>定义内表后，在程序中通过SQL查询将需要的数据放入内表，然后通过函数调用SMARTFORM。在执行SMARTFORM时把内表中的数据填充到所画的表格当中，并显示出来。</p><h2 id="Smart-Forms界面使用方法"><a href="#Smart-Forms界面使用方法" class="headerlink" title="Smart Forms界面使用方法"></a>Smart Forms界面使用方法</h2><h3 id="事务代码：SMARTFORMS"><a href="#事务代码：SMARTFORMS" class="headerlink" title="事务代码：SMARTFORMS"></a>事务代码：SMARTFORMS</h3><p>文本</p><ul><li>创建Smartforms 及相关对象属性设置</li></ul><p>样式</p><ul><li>指定FORM中的文本属性</li><li>字体&#x2F;颜色&#x2F;大小等</li></ul><p>文本模块</p><ul><li>很多对象、文本、消息、提示内容都可以预先设定，可以复用的文本模块多在此设定</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731193837505.png" alt="SMARTFORMS界面"></p><h3 id="SAP-Form-Builder"><a href="#SAP-Form-Builder" class="headerlink" title="SAP Form Builder"></a>SAP Form Builder</h3><h4 id="Navigation-Menu"><a href="#Navigation-Menu" class="headerlink" title="Navigation Menu"></a>Navigation Menu</h4><p>Smart Form开发的Form element、节点、在此显示，在窗口左边显示</p><h4 id="Maintenance-Frame"><a href="#Maintenance-Frame" class="headerlink" title="Maintenance Frame"></a>Maintenance Frame</h4><p>选择的节点属性在此设定，在窗口的中间部分显示</p><h4 id="Form-Painter"><a href="#Form-Painter" class="headerlink" title="Form Painter"></a>Form Painter</h4><p>按钮出现form Painter,在窗口的最右边，显示windows和graphics的位置，大小，布局</p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731194155982.png" alt="Builder界面"></p><table><thead><tr><th><strong>元素</strong></th><th><strong>中文</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>Page</td><td>页面</td><td>不同的页面允许维护不同的格式</td></tr><tr><td>Window</td><td>窗体</td><td>包括主窗体和子窗体，后续节点包括Window和Page以外的所有节点</td></tr><tr><td>Graphic</td><td>图形</td><td>输出页面中的图片</td></tr><tr><td>Address</td><td>地址</td><td>包含数据库中的标准地址</td></tr><tr><td>Template</td><td>模板</td><td>输出包含静态数据的表格（固定行列）</td></tr><tr><td>Table</td><td>表</td><td>输出包含应用数据的表格（可自动扩展）</td></tr><tr><td>Alternative</td><td>是非判断</td><td>执行判断，根据判断结果是非执行两个分支</td></tr><tr><td>Program Lines</td><td>程序代码</td><td>指定传入传出参数，执行ABAP代码</td></tr><tr><td>Loop</td><td>循环</td><td>反复执行后续节点</td></tr><tr><td>Text</td><td>文本</td><td>输出文本&#x2F;变量&#x2F;文本模块</td></tr><tr><td>Command</td><td>命令</td><td>命令操作（如分页）</td></tr><tr><td>Folder</td><td>文件夹</td><td>将多个后续节点组合为一个组</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731194928184.png" alt="图标对应功能参考"></p><h3 id="所有的Form-Global-Setting节点和Pages-and-window在这显示。"><a href="#所有的Form-Global-Setting节点和Pages-and-window在这显示。" class="headerlink" title="所有的Form Global Setting节点和Pages and window在这显示。"></a>所有的Form Global Setting节点和Pages and window在这显示。</h3><ul><li>Global Settings 全局设定</li><li>Form attributes : 基本信息和格式设定</li></ul><h3 id="设置页面样式，指定输出样式（Smartstyles下面创建的样式）"><a href="#设置页面样式，指定输出样式（Smartstyles下面创建的样式）" class="headerlink" title="设置页面样式，指定输出样式（Smartstyles下面创建的样式）"></a>设置页面样式，指定输出样式（Smartstyles下面创建的样式）</h3><ul><li>Form interface : 输入输出参数。在此设定与调用程序间传的参数</li><li>Global definitions : Smart Forms中内部使用的私有变量，不与外界交互.</li></ul><h3 id="Pages-and-windows"><a href="#Pages-and-windows" class="headerlink" title="Pages and windows"></a>Pages and windows</h3><ul><li>显示数据和设定Page页面和windows窗口布局</li></ul><h3 id="执行流程"><a href="#执行流程" class="headerlink" title="执行流程"></a>执行流程</h3><ul><li>根据元素的清单，自上而下的执行</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731194517321.png" alt="示例图片"></p><h3 id="数据定义"><a href="#数据定义" class="headerlink" title="数据定义"></a>数据定义</h3><h4 id="Form-Interface"><a href="#Form-Interface" class="headerlink" title="Form Interface"></a>Form Interface</h4><ul><li>用于数据传输，导入&#x2F;导出参数，表格传输，异常</li><li>结构及表需要参照数据字典中定义的结构&#x2F;表类型进行定义</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731194759684.png" alt="Form Interface"></p><h4 id="Global-Definition"><a href="#Global-Definition" class="headerlink" title="Global Definition"></a>Global Definition</h4><ul><li>定义Smartforms内部使用变量</li><li>设置类型、字段符号（动态指定变量）、初始化等设置</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731194825419.png" alt="Global Definition"></p><h3 id="页面（PAGE）"><a href="#页面（PAGE）" class="headerlink" title="页面（PAGE）"></a>页面（PAGE）</h3><blockquote><p>Smartforms允许建立多个页面，而且不同的页面允许维护不同的格式</p></blockquote><p>例如封面&#x2F;正文</p><p>可包含节点：</p><p>窗体</p><ul><li>包括主窗体和子窗体</li><li>后续节点包括除Window和Page外所有节点</li></ul><p>图形</p><ul><li>输出页面中的图片</li></ul><p>地址</p><ul><li>包含数据库中的标准地址</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731200614808.png" alt="页面1"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731200651652.png" alt="页面2"></p><h3 id="窗体（WINDOWW）"><a href="#窗体（WINDOWW）" class="headerlink" title="窗体（WINDOWW）"></a>窗体（WINDOWW）</h3><blockquote><p>作为容器，放置显示用元素（元素累计宽高不能超过窗体宽度高度）</p></blockquote><p>Smartforms中一般是通过多个窗体来存放不同的内容。</p><p>动态数据主要存储在主窗体中</p><ul><li>主窗体在所有页面中是一致的</li><li>一个页面中至少包含且只能包含一个主窗体</li></ul><p>其他数据通过子窗体来实现</p><ul><li>一个页面中可以包含多个子窗体</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731200846893.png" alt="窗体1"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731200900790.png" alt="窗体2"></p><h3 id="图片（Graphic）"><a href="#图片（Graphic）" class="headerlink" title="图片（Graphic）"></a>图片（Graphic）</h3><blockquote><p>Smartforms所制作的报表中，通常需要加入一些特定的图像，如公司的Logo、商标等。此时使用图片组件，可以加入系统中存在的图片</p></blockquote><ul><li>选择要插入的图片，黑白&#x2F;彩色设置</li></ul><h4 id="向系统中增加图片（SE78）"><a href="#向系统中增加图片（SE78）" class="headerlink" title="向系统中增加图片（SE78）"></a>向系统中增加图片（SE78）</h4><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731201109323.png" alt="插入图片步骤1"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731201616930.png" alt="插入图片步骤1"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731201701730.png" alt="插入图片步骤3"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731201824116.png" alt="插入图片步骤4"></p><h3 id="地址（Address）"><a href="#地址（Address）" class="headerlink" title="地址（Address）"></a>地址（Address）</h3><blockquote><p>引用数据库中已经定义过的地址，显示在界面指定位置</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731202044186.png" alt="地址1"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731202100630.png" alt="地址2"></p><h3 id="模板（Template）"><a href="#模板（Template）" class="headerlink" title="模板（Template）"></a>模板（Template）</h3><blockquote><p>用于实现输出数值的定位，进行固定行列的表格输出</p></blockquote><ul><li>在绘图的界面中通过拖拽，使用画笔直接增加行&#x2F;列</li><li>点击细节，可以对每行&#x2F;列进行宽高。</li></ul><p><strong>注意：</strong></p><ul><li><strong>分行的总宽度不能超过表的宽度</strong></li><li><strong>分列的总高度不能超过表的高度</strong></li><li><strong>在模板中增加文本时，注意要指定对应的行&#x2F;列</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731202248821.png" alt="模板初步设计"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731202418231.png" alt="边框模式设计"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731202435305.png" alt="细节调整（点击第一张图的details）"></p><h3 id="表（Table）-设置好后会自动循环"><a href="#表（Table）-设置好后会自动循环" class="headerlink" title="表（Table）(设置好后会自动循环)"></a>表（Table）(设置好后会自动循环)</h3><p>自动展开生成三部分</p><ul><li><p>表头</p></li><li><p>主要区域</p></li><li><p>脚标</p></li></ul><p>表（Table）属性</p><ul><li>设置行类型，通过画笔直接规划分列、分行（绘制后自动扩展）</li></ul><p>数据（Data）属性</p><ul><li>设置数据来源（内表循环制结构，循环限制条件，排序条件等）</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731202756483.png" alt="表示例图"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731202954103.png" alt="表界面设计"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731203015793.png" alt="表数据设置"></p><p>向表中增加行</p><ul><li>选中表头&#x2F;主要区域&#x2F;脚标中的一部分，右键可以新建行</li><li>新增加的行，选择行类型（从table中创建过的行类型中选择），自动扩展创建相应的cell（单元格）</li><li>单元格不需要单独指定在表格中输出的位置，自上而下排列为表单中从左至右的顺序</li><li>表中的每一个部分，可以创建多种行类型</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731203211683.png" alt="创建行"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731203220729.png" alt="设置行类型"></p><h3 id="判断（Alternative）"><a href="#判断（Alternative）" class="headerlink" title="判断（Alternative）"></a>判断（Alternative）</h3><p>是非判断包含一个Condition（判断条件），以及两个分支条件</p><ul><li>按照对条件的判断结果分别执行是非部分</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731203353137.png" alt="判断的示例图片"></p><h3 id="程序代码（Program-Lines）"><a href="#程序代码（Program-Lines）" class="headerlink" title="程序代码（Program Lines）"></a>程序代码（Program Lines）</h3><blockquote><p>程序代码组件允许用户在Smartforms中编辑ABAP代码，此部分类似于封装函数，和外界通过导入导出参数进行交互</p></blockquote><p>只有通过导入&#x2F;导出参数定义过的变量，才可以在程序代码中使用</p><p>导入参数（Input Parameters）</p><ul><li>传入到程序代码块中的参数</li></ul><p>导出参数（Output Parameters）</p><ul><li>从程序代码快中传出的参数</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731203522755.png" alt="代码示例图片"></p><h3 id="循环（Loop）"><a href="#循环（Loop）" class="headerlink" title="循环（Loop）"></a>循环（Loop）</h3><blockquote><p>循环中指定数据来源的内表以及循环输出使用的结构，可以实现将内表数据多行输出</p></blockquote><ul><li>数据（Data）：指定数据来源</li><li>计算（Calculation）</li><li>事件（Events）：表头及脚标的输出设置</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731203623862.png" alt="循环步骤1"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731203651656.png" alt="循环步骤2"></p><h3 id="命令（Command）"><a href="#命令（Command）" class="headerlink" title="命令（Command）"></a>命令（Command）</h3><blockquote><p>执行命令，如强制分页等</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731203742240.png" alt="命令示例图片"></p><h3 id="文件夹（Folder）"><a href="#文件夹（Folder）" class="headerlink" title="文件夹（Folder）"></a>文件夹（Folder）</h3><blockquote><p>可以将节点下的元素进行成组管理</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731203831120.png" alt="文件夹示例图片"></p><h3 id="文本（Text）"><a href="#文本（Text）" class="headerlink" title="文本（Text）"></a>文本（Text）</h3><blockquote><p>图示编辑器在新版本中不可使用，新版本MS编辑器只能手动输入</p></blockquote><p>显示文字</p><ul><li>在建立的Text组件中，直接输入文字内容</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731204042229.png" alt="显示文字"></p><p>显示变量</p><ul><li>选择字段清单，选择变量，直接拖拽到文本对象内（MS编辑器只能手动输入）</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731204111627.png" alt="显示变量"></p><h3 id="文本模块（Text-Module）"><a href="#文本模块（Text-Module）" class="headerlink" title="文本模块（Text Module）"></a>文本模块（Text Module）</h3><p>SMARTFORMS-&gt;创建Text Module，录入文字</p><p>在Smartforms的Text元素中使用text module</p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731210914019.png" alt="文本模块步骤1"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731211041903.png" alt="文本模块步骤2"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731211117792.png" alt="文本模块步骤3"></p><h3 id="样式（Smart-Styles）"><a href="#样式（Smart-Styles）" class="headerlink" title="样式（Smart Styles）"></a>样式（Smart Styles）</h3><blockquote><p>SmartFroms样式的作用是为了指定Form中的文本属性</p></blockquote><p>如文本的字体、颜色、大小等</p><p>命名规则</p><ul><li>样式：Z&#x2F;Y开头</li></ul><p>包含内容</p><ul><li>表头（Header Data）</li></ul><p>设置默认的字体及段落格式</p><ul><li>段落（Paragraph Formats）</li></ul><p>设置段落格式（包含字符格式）</p><ul><li><p>字符（Character Formats）</p></li><li><p>独立的字符格式</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731211307458.png" alt="创建样式步骤1"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731211332627.png" alt="创建样式步骤2"></p><h4 id="表头"><a href="#表头" class="headerlink" title="表头"></a>表头</h4><p>标准设置</p><ul><li>标准段落：设置默认标准段落格式</li><li>字符每英寸：设置字符间距（每英寸中文字符数）</li><li>指标空间：制表符间距</li><li>行每英寸：设置字符安监局（每行中文字符数）</li><li>字体：字体类型&#x2F;大小&#x2F;风格</li><li>下划线</li><li>颜色</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731211439245.png" alt="表头"></p><h4 id="段落样式"><a href="#段落样式" class="headerlink" title="段落样式"></a>段落样式</h4><p>命名规则</p><ul><li>两位字符</li></ul><p>设置页签</p><ul><li>缩进和空格：段落的方式、页边距等设置</li><li>字体：段落字体风格、大小、样式及颜色设置（SE73维护字体）</li><li>标签：段落制表符设置（不推荐使用）</li><li>编号和框架：段落列表编号方式设置</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731211538661.png" alt="段落样式"></p><h4 id="字体格式"><a href="#字体格式" class="headerlink" title="字体格式"></a>字体格式</h4><p>命名规则</p><ul><li>两位字符</li></ul><p>标准设置</p><ul><li>上标</li><li>下标</li><li>条形码（Bar Code）</li></ul><p>字体</p><ul><li>类型</li><li>大小</li><li>样式</li><li>颜色</li></ul><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731211714625.png" alt="字体格式设置1"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731211759752.png" alt="字体格式设置2"></p><h2 id="Smart-Forms的测试及调用"><a href="#Smart-Forms的测试及调用" class="headerlink" title="Smart Forms的测试及调用"></a>Smart Forms的测试及调用</h2><blockquote><p>Smartforms是通过函数进行调用的</p></blockquote><h3 id="在Smartforms界面调用"><a href="#在Smartforms界面调用" class="headerlink" title="在Smartforms界面调用"></a>在Smartforms界面调用</h3><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731212546570.png" alt="检查后点击测试"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731212610155.png" alt="进入此界面"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731212726892.png" alt="激活后执行"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731212754387.png" alt="再次执行"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731213106298.png" alt="配置参数后点击预览即可LP01为模拟打印机"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731213219544.png" alt="预览效果如下，没有数据是因为没在程序中调用"></p><h3 id="在程序中调用"><a href="#在程序中调用" class="headerlink" title="在程序中调用"></a>在程序中调用</h3><p>获取函数名称</p><blockquote><p>Smartforms默认生成的册数函数名称在不同系统间可能不同，因此需要调用函数 SSF_FUNCTION_MODULE_NAME ，获取smartforms测试的函数名称</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">  CALL FUNCTION &#x27;SSF_FUNCTION_MODULE_NAME&#x27;<br>    EXPORTING<br>     formname         = &#x27;ZTEST0002&#x27;<br>\*     VARIANT         = &#x27; &#x27;<br>\*     DIRECT_CALL       = &#x27; &#x27;<br>   IMPORTING<br>     FM_NAME         = fm_name<br>   EXCEPTIONS<br>    NO_FORM         = 1<br>    NO_FUNCTION_MODULE    = 2<br>    OTHERS          = 3<br>        .<br>   IF sy-subrc &lt;&gt; 0.<br>\* Implement suitable error handling here<br>   ENDIF.<br></code></pre></td></tr></table></figure><p>调用函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">CALL FUNCTION fm_name<br> EXPORTING<br> \*  ARCHIVE_INDEX       =<br> \*  ARCHIVE_INDEX_TAB     =<br> \*  ARCHIVE_PARAMETERS     =<br> \*  CONTROL_PARAMETERS     = l_control_parameters<br> \*  MAIL_APPL_OBJ       =<br> \*  MAIL_RECIPIENT       =<br> \*  MAIL_SENDER        =<br> \*  OUTPUT_OPTIONS       = l_output_options<br>   USER_SETTINGS       = &#x27;&#x27;<br>   NAME = SY-UNAME<br>   TIME = SY-UZEIT<br> \* IMPORTING<br> \*  DOCUMENT_OUTPUT_INFO    =<br> \*  JOB_OUTPUT_INFO      =<br> \*  JOB_OUTPUT_OPTIONS     = l_job_output_options<br>  TABLES<br>   GT_WORK = gt_zewmt0002out<br>  EXCEPTIONS<br>   FORMATTING_ERROR      = 1<br>   INTERNAL_ERROR       = 2<br>   SEND_ERROR         = 3<br>   USER_CANCELED       = 4<br>   OTHERS           = 5<br>      .<br> IF sy-subrc &lt;&gt; 0.<br> \* Implement suitable error handling here<br> ENDIF.<br>  ENDCASE.<br> ENDFORM.<br></code></pre></td></tr></table></figure><p>使用Smartforms调用时的传输参数控制打印参数</p><ul><li>CONTROL_PARAMETERS</li></ul><p>例：实现直接显示预览界面</p><ul><li>OUTPUT_OPTIONS</li></ul><p>例：实现在打印窗口中不显示预览按钮，勾选快速打印按钮</p><ul><li>需要讲USER_SETTINGS值设置为空</li></ul><p>使用返回值判断打印结果</p><ul><li>JOB_OUTPUT_INFO</li></ul><p>例：OUTPUTDONE，判断打印是否完成</p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731214002849.png" alt="打印参数示例图1"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731214036187.png" alt="打印参数示例图2"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731214112238.png" alt="打印参数示例图2"></p><h2 id="简单示例"><a href="#简单示例" class="headerlink" title="简单示例"></a>简单示例</h2><p>整体程序：</p><p>smartform设置</p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731214657769.png" alt="大体设计"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731214751544.png" alt="参数设置1"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731214837353.png" alt="参数设置2关联类型需要自己创建数据元素"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731215100866.png" alt="表数据设置"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">*&amp;---------------------------------------------------------------------*<br> *&amp; Report ZTEST00020<br> *&amp;---------------------------------------------------------------------*<br> *&amp;<br> *&amp;---------------------------------------------------------------------*<br> REPORT ZTEST00020.<br> INCLUDE ZTEST00020_top.<br> INCLUDE ZTEST00020_form.<br><br> INITIALIZATION.<br><br><br> START-OF-SELECTION.<br>  PERFORM get_data.<br><br> END-OF-SELECTION.<br>  PERFORM display_data.<br> *&amp;---------------------------------------------------------------------*<br> *&amp; Form get_data<br> *&amp;---------------------------------------------------------------------*<br> *&amp; text<br> *&amp;---------------------------------------------------------------------*<br> *&amp; --&gt; p1    text<br> *&amp; &lt;-- p2    text<br> *&amp;---------------------------------------------------------------------*<br> FORM get_data .<br>  SELECT * FROM ZEWMT0002<br>  WHERE LGNUM IN @s_lgnum AND<br>     LGPLA IN @s_LGPLA AND<br>     MAKTX IN @s_MAKTX AND<br>     MATID IN @s_MATID<br>  INTO TABLE @gt_zewmt0002out.<br> ENDFORM.<br> *&amp;---------------------------------------------------------------------*<br> *&amp; Form build_fieldcat<br> *&amp;---------------------------------------------------------------------*<br> *&amp; text<br> *&amp;---------------------------------------------------------------------*<br> *&amp; --&gt; p1    text<br> *&amp; &lt;-- p2    text<br> *&amp;---------------------------------------------------------------------*<br> FORM build_fieldcat .<br>  %%add_fieldcat: &#x27;1&#x27; &#x27;LGNUM&#x27; &#x27;仓库号&#x27;,<br>          &#x27;2&#x27; &#x27;LNUMT&#x27; &#x27;仓库名称&#x27;,<br>          &#x27;3&#x27; &#x27;LGPLA&#x27; &#x27;库位&#x27;,<br>          &#x27;4&#x27; &#x27;MATID&#x27; &#x27;物料编号&#x27;,<br>          &#x27;5&#x27; &#x27;MAKTX&#x27; &#x27;物料描述&#x27;,<br>          &#x27;6&#x27; &#x27;BATCHID&#x27; &#x27;批次&#x27;,<br>          &#x27;7&#x27; &#x27;PKNUM&#x27; &#x27;包数&#x27;,<br>          &#x27;8&#x27; &#x27;QUAN&#x27; &#x27;库存量&#x27;,<br>          &#x27;9&#x27; &#x27;MEINS&#x27; &#x27;单位&#x27;,<br>          &#x27;10&#x27; &#x27;WPTYP&#x27; &#x27;包型&#x27;,<br>          &#x27;11&#x27; &#x27;WPWET&#x27; &#x27;单包重&#x27;,<br>          &#x27;12&#x27; &#x27;HUIDENT&#x27; &#x27;HU号&#x27;.<br> ENDFORM.<br> *&amp;---------------------------------------------------------------------*<br> *&amp; Form build_layout<br> *&amp;---------------------------------------------------------------------*<br> *&amp; text<br> *&amp;---------------------------------------------------------------------*<br> *&amp; --&gt; p1    text<br> *&amp; &lt;-- p2    text<br> *&amp;---------------------------------------------------------------------*<br> FORM build_layout .<br>  gs_layout-colwidth_optimize = &#x27;X&#x27;.<br> ENDFORM.<br> *&amp;---------------------------------------------------------------------*<br> *&amp; Form build_event<br> *&amp;---------------------------------------------------------------------*<br> *&amp; text<br> *&amp;---------------------------------------------------------------------*<br> *&amp; --&gt; p1    text<br> *&amp; &lt;-- p2    text<br> *&amp;---------------------------------------------------------------------*<br> FORM build_event .<br><br> ENDFORM.<br> *&amp;---------------------------------------------------------------------*<br> *&amp; Form display_data<br> *&amp;---------------------------------------------------------------------*<br> *&amp; text<br> *&amp;---------------------------------------------------------------------*<br> *&amp; --&gt; p1    text<br> *&amp; &lt;-- p2    text<br> *&amp;---------------------------------------------------------------------*<br> FORM display_data .<br>  IF gt_zewmt0002out IS NOT INITIAL.<br>   PERFORM build_fieldcat.<br>   PERFORM build_layout.<br>   PERFORM build_event.<br>   CALL FUNCTION &#x27;REUSE_ALV_GRID_DISPLAY&#x27;<br>   EXPORTING<br>    I_CALLBACK_PROGRAM        = SY-REPID<br>    I_CALLBACK_PF_STATUS_SET     = &#x27;SET_STATUS&#x27;<br>    I_CALLBACK_USER_COMMAND      = &#x27;FRM_USER_COMMAND&#x27;<br>    IS_LAYOUT             = gs_layout<br>    IT_FIELDCAT            = gt_fieldcat<br>    TABLES<br>     t_outtab             = gt_zewmt0002out<br>        .<br>   IF sy-subrc &lt;&gt; 0.<br> \* Implement suitable error handling here<br>   ENDIF.<br>  ENDIF.<br> ENDFORM.<br><br> FORM SET_STATUS USING RT_EXTAB TYPE SLIS_T_EXTAB.<br>  SET PF-STATUS &#x27;ZUI&#x27;.<br> ENDFORM.<br><br> FORM FRM_USER_COMMAND USING R_UCOMM LIKE SY-UCOMM RS_SELFIELD TYPE SLIS_SELFIELD.<br>  CASE R_UCOMM.<br>   WHEN &#x27;&amp;PRINT&#x27;.<br>    CALL FUNCTION &#x27;SSF_FUNCTION_MODULE_NAME&#x27;<br>     EXPORTING<br>      formname         = &#x27;ZTEST0002&#x27;<br> \*     VARIANT         = &#x27; &#x27;<br> \*     DIRECT_CALL       = &#x27; &#x27;<br>    IMPORTING<br>      FM_NAME         = fm_name<br>    EXCEPTIONS<br>     NO_FORM         = 1<br>     NO_FUNCTION_MODULE    = 2<br>     OTHERS          = 3<br>         .<br>    IF sy-subrc &lt;&gt; 0.<br> \* Implement suitable error handling here<br>    ENDIF.<br><br>  CALL FUNCTION fm_name<br> EXPORTING<br> \*  ARCHIVE_INDEX       =<br> \*  ARCHIVE_INDEX_TAB     =<br> \*  ARCHIVE_PARAMETERS     =<br> \*  CONTROL_PARAMETERS     = l_control_parameters<br> \*  MAIL_APPL_OBJ       =<br> \*  MAIL_RECIPIENT       =<br> \*  MAIL_SENDER        =<br> \*  OUTPUT_OPTIONS       = l_output_options<br>   USER_SETTINGS       = &#x27;&#x27;<br>   NAME = SY-UNAME<br>   TIME = SY-UZEIT<br> \* IMPORTING<br> \*  DOCUMENT_OUTPUT_INFO    =<br> \*  JOB_OUTPUT_INFO      =<br> \*  JOB_OUTPUT_OPTIONS     = l_job_output_options<br>  TABLES<br>   GT_WORK = gt_zewmt0002out<br>  EXCEPTIONS<br>   FORMATTING_ERROR      = 1<br>   INTERNAL_ERROR       = 2<br>   SEND_ERROR         = 3<br>   USER_CANCELED       = 4<br>   OTHERS           = 5<br>      .<br> IF sy-subrc &lt;&gt; 0.<br> \* Implement suitable error handling here<br> ENDIF.<br><br>  ENDCASE.<br> ENDFORM.<br></code></pre></td></tr></table></figure><p>效果演示：</p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731214212129.png" alt="运行效果1"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731214248541.png" alt="运行效果2"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731214317813.png" alt="点击打印"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731214353962.png" alt="打印效果预览"></p>]]></content>
    
    
    <categories>
      
      <category>ABAP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SAP</tag>
      
      <tag>ABAP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>FUNCTION ALV的设置与使用</title>
    <link href="/unrpyc/2023/08/15/FUNCTION_ALV/"/>
    <url>/unrpyc/2023/08/15/FUNCTION_ALV/</url>
    
    <content type="html"><![CDATA[<h1 id="SAP-FUNCTION-ALV的设置与使用"><a href="#SAP-FUNCTION-ALV的设置与使用" class="headerlink" title="SAP FUNCTION ALV的设置与使用"></a>SAP FUNCTION ALV的设置与使用</h1><blockquote><p>ALV：SAPListViewer</p></blockquote><h2 id="LAYOUT设置"><a href="#LAYOUT设置" class="headerlink" title="LAYOUT设置"></a>LAYOUT设置</h2><blockquote><p>用于设置ALV整体输出格式，为ALV可选参数。属于类型池 TYPE-POOLS:SLIS</p></blockquote><p>代码定义：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">TYPE-POOLS:slis.<br>DATA: layout TYPE slis_layout_alv.<br>layout-[字段名] = ‘xxxx’.<br></code></pre></td></tr></table></figure><table><thead><tr><th align="left">字段名</th><th>长度</th><th>类型参考</th><th>描述</th></tr></thead><tbody><tr><td align="left">no_colhead</td><td>1</td><td>TYPE C</td><td>no headings 不显示列标题行</td></tr><tr><td align="left">no_hotspot</td><td>1</td><td>TYPE C</td><td>headings not as hotspot</td></tr><tr><td align="left">zebra</td><td>1</td><td>TYPE C</td><td>striped pattern斑马线显示，颜色隔行交替显示</td></tr><tr><td align="left">no_vline</td><td>1</td><td>TYPE C</td><td>columns separated by space不显示垂直网格线</td></tr><tr><td align="left">no_hline</td><td>1</td><td>TYPE C</td><td>rows separated by space B20K8A0N5D不显示水平网格线</td></tr><tr><td align="left">cell_merge</td><td>1</td><td>TYPE C</td><td>not suppress field replication ALV单元格中的内容能够复制到剪贴板</td></tr><tr><td align="left">edit</td><td>1</td><td>TYPE C</td><td>for grid onlyALV是否可编辑，注意只对Grid模式有效，对List模式无效</td></tr><tr><td align="left">numc_sum</td><td>1</td><td>TYPE C</td><td>totals for NUMC-Fields possib</td></tr><tr><td align="left">no_input</td><td>1</td><td>TYPE C</td><td>only display fields</td></tr><tr><td align="left">f2code</td><td></td><td>LIKE sy-ucomm</td><td>设置触发弹出详细信息窗口的功能码</td></tr><tr><td align="left">reprep</td><td>1</td><td>TYPE C</td><td>report report interface active</td></tr><tr><td align="left">no_keyfix</td><td>1</td><td>TYPE C</td><td>do not fix keycolumns</td></tr><tr><td align="left">expand_all</td><td>1</td><td>TYPE C</td><td>Expand all positions</td></tr><tr><td align="left">no_author</td><td>1</td><td>TYPE C</td><td>No standard authority check</td></tr><tr><td align="left">def_status</td><td>1</td><td>TYPE C</td><td>default status space or ‘A’</td></tr><tr><td align="left">item_text</td><td>20</td><td>TYPE C</td><td>Text for item button</td></tr><tr><td align="left">countfname</td><td></td><td>TYPE lvc_fname</td><td></td></tr><tr><td align="left">colwidth_optimize</td><td>1</td><td>TYPE C</td><td>ALV网格（单元格）宽度设置为自动最优化，按输出内容宽度自动调整</td></tr><tr><td align="left">no_min_linesize</td><td>1</td><td>TYPE C</td><td>TYPE Cline size &#x3D; width of the list</td></tr><tr><td align="left">min_linesize</td><td></td><td>LIKE sy-linsz</td><td>if initial min_linesize &#x3D; 80</td></tr><tr><td align="left">max_linesize</td><td></td><td>LIKE sy-linsz</td><td>Default 250</td></tr><tr><td align="left">window_titlebar</td><td></td><td>like sy-title</td><td></td></tr><tr><td align="left">no_uline_hs</td><td>1</td><td>TYPE C</td><td>fieldname for exception列显示为红绿灯</td></tr><tr><td align="left">lights_fieldname</td><td></td><td>type slis_fieldname</td><td></td></tr><tr><td align="left">lights_tabname</td><td></td><td>type slis_tabname</td><td>fieldname for exception</td></tr><tr><td align="left">lights_rollname</td><td></td><td>like dfies-rollname</td><td>rollname f. exceptiondocu</td></tr><tr><td align="left">lights_condense</td><td>1</td><td>TYPE C</td><td>fieldname for exception</td></tr><tr><td align="left">no_sumchoice</td><td>1</td><td>TYPE C</td><td>no choice for summing up</td></tr><tr><td align="left">no_totalline</td><td>1</td><td>TYPE C</td><td>no total line</td></tr><tr><td align="left">no_subchoice</td><td>1</td><td>TYPE C</td><td>no choice for subtotals</td></tr><tr><td align="left">no_subtotals</td><td>1</td><td>TYPE C</td><td>no subtotals possible</td></tr><tr><td align="left">no_unit_splitting</td><td></td><td>TYPE C</td><td>no sep. tot.lines by inh.units</td></tr><tr><td align="left">totals_before_items</td><td></td><td>TYPE C</td><td>diplay totals before the items统计行会在数据行前面显示</td></tr><tr><td align="left">totals_only</td><td>1</td><td>TYPE C</td><td>show only totals只显示合计</td></tr><tr><td align="left">totals_text</td><td>60</td><td>TYPE C</td><td>text for 1st col. in total line合计第一列文本</td></tr><tr><td align="left">subtotals_text</td><td>60</td><td>TYPE C</td><td>text for 1st col. in subtotals</td></tr><tr><td align="left">box_fieldname</td><td></td><td>type slis_fieldname</td><td>fieldname for checkbox指定数据内表中哪列以选择按钮形式显示（首列前可按下或弹上来的按钮），ALV最左上角会出现全选按钮</td></tr><tr><td align="left">box_tabname</td><td></td><td>type slis_tabname</td><td>tabname for checkbox</td></tr><tr><td align="left">box_rollname</td><td></td><td>like dd03p-rollname</td><td>rollname for checkbox</td></tr><tr><td align="left">expand_fieldname</td><td></td><td>type slis_fieldname</td><td>fieldname flag ‘expand’</td></tr><tr><td align="left">hotspot_fieldname</td><td></td><td>type slis_fieldname</td><td>fieldname flag hotspot</td></tr><tr><td align="left">confirmation_prompt</td><td></td><td></td><td>confirm. prompt when leaving当退出ALV报表展示界面时，是否需要提示用户</td></tr><tr><td align="left">key_hotspot</td><td>1</td><td>TYPE C</td><td>keys as hotspot  K_KEYHOT设置关键字段是否是热点，可单击</td></tr><tr><td align="left">flexible_key</td><td>1</td><td>TYPE C</td><td>key columns movable,…</td></tr><tr><td align="left">group_buttons</td><td>1</td><td>TYPE C</td><td>buttons for COL1 - COL5</td></tr><tr><td align="left">get_selinfos</td><td>1</td><td>TYPE C</td><td>read selection screen</td></tr><tr><td align="left">group_change_edit</td><td>1</td><td>TYPE C</td><td>Settings by user for new group</td></tr><tr><td align="left">no_scrolling</td><td>1</td><td>TYPE C</td><td>no scrolling</td></tr><tr><td align="left">detail_popup</td><td>1</td><td>TYPE C</td><td>show detail in popup 右键中有 Detail 菜单，是否弹出详细信息窗口</td></tr><tr><td align="left">detail_initial_lines</td><td>1</td><td>TYPE C</td><td>show also initial lines为空行时单元格内容也会显示在右键弹出的详细框中</td></tr><tr><td align="left">detail_titlebar</td><td></td><td>like sy-title</td><td>Titlebar for detail设置详细弹出窗口的标题栏</td></tr><tr><td align="left">header_text</td><td>20</td><td>TYPE C</td><td>Text for header button</td></tr><tr><td align="left">default_item</td><td>1</td><td>TYPE C</td><td>Items as default</td></tr><tr><td align="left">info_fieldname</td><td></td><td>type slis_fieldname</td><td>infofield for listoutput 指定数据输出内表中哪列存储的是颜色，用来设置ALV每行数据的颜色。</td></tr><tr><td align="left">coltab_fieldname</td><td></td><td>type slis_fieldname</td><td>colors</td></tr><tr><td align="left">list_append</td><td>1</td><td>TYPE C</td><td>no call screen</td></tr><tr><td align="left">xifunckey</td><td></td><td>type aqs_xikey</td><td>eXtended interaction(SAPQuery)</td></tr><tr><td align="left">xidirect</td><td></td><td>type flag</td><td>eXtended INTeraction(SAPQuery)</td></tr><tr><td align="left">dtc_layout</td><td></td><td>type dtc_s_layo</td><td>Layout for configure the Tabstip</td></tr><tr><td align="left">allow_switch_to_list</td><td>1</td><td>TYPE C</td><td>ACC: Switch from FullGrid to List</td></tr></tbody></table><h2 id="FIELDCAT设置"><a href="#FIELDCAT设置" class="headerlink" title="FIELDCAT设置"></a>FIELDCAT设置</h2><blockquote><p>用于ALV数据显示结构的定义，包括具体的栏位名称、类型、各字段的输出格式（与Layout不一样的是输出格式只针对某个字段），为ALV必选参数</p></blockquote><p>此处使用宏来完成添加操作</p><p>代码定义：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">gt_fieldcat TYPE lvc_t_fcat,<br>gs_fieldcat TYPE lvc_s_fcat.<br><br>DEFINE %%APPEND_FIELDCAT.<br>  CLEAR gs_fieldcat.<br>  gs_fieldcat-col_pos = &amp;1.<br>  gs_fieldcat-fieldname = &amp;2.<br>  gs_fieldcat-outputlen = &amp;3.<br>  gs_fieldcat-scrtext_m = &amp;4.<br>  gs_fieldcat-edit = &amp;5.<br>  gs_fieldcat-checkbox = &amp;6.<br>  APPEND gs_fieldcat TO gt_fieldcat.<br>END-OF-DEFINITION.<br><br>%%APPEND_FIELDCAT: &#x27;1&#x27; &#x27;ebeln&#x27; &#x27;10&#x27; &#x27;采购凭证编号&#x27; &#x27;&#x27; &#x27;&#x27; ,<br>                   &#x27;2&#x27; &#x27;bukrs&#x27; &#x27;10&#x27; &#x27;公司代码&#x27; &#x27;X&#x27; &#x27;&#x27; ,<br>                   &#x27;3&#x27; &#x27;bsart&#x27; &#x27;10&#x27; &#x27;采购凭证类型&#x27; &#x27;X&#x27; &#x27;&#x27; ,<br>                   &#x27;4&#x27; &#x27;lifnr&#x27; &#x27;10&#x27; &#x27;供应商账户号&#x27; &#x27;X&#x27; &#x27;&#x27; ,<br>                   &#x27;5&#x27; &#x27;zterm&#x27; &#x27;10&#x27; &#x27;付款条件代码&#x27; &#x27;X&#x27; &#x27;&#x27; ,<br>                   &#x27;6&#x27; &#x27;slect&#x27; &#x27;2&#x27; &#x27;选择&#x27; &#x27;X&#x27; &#x27;X&#x27; .<br></code></pre></td></tr></table></figure><table><thead><tr><th>字段名</th><th>长度</th><th>类型参考</th><th>描述</th></tr></thead><tbody><tr><td>row_pos</td><td></td><td>like sy-curow</td><td>output in row</td></tr><tr><td>col_pos</td><td></td><td>like sy-cucol</td><td>position of the column列的输出位置字段在表中第几列</td></tr><tr><td>fieldname</td><td></td><td>type slis_fieldname</td><td>针对输出内表哪列进行设置，只有设置了的列才会显示，如果没有设置，则不会显示在ALV中。如果此字段是CURR(currency field) ,QUAN(Quantity field) 需要指定相应的CUKY, UNIT字段.需设置Cfieldname、Ctabname和Qfieldname、 Qtabname</td></tr><tr><td>tabname</td><td></td><td></td><td>type slis_tabname,</td></tr><tr><td>currency</td><td>5</td><td>type c</td><td>TCURX表中的货币名称</td></tr><tr><td>cfieldname</td><td></td><td>type slis_fieldname</td><td>field with currency unit金额字段所参照的货币单位字段名称（货币单位字段为数据内表中的某列？）</td></tr><tr><td>ctabname</td><td></td><td>type slis_tabname</td><td></td></tr><tr><td>ifieldname</td><td></td><td>initial column</td><td>initial column</td></tr><tr><td>quantity</td><td>3</td><td>type c</td><td>计量单位</td></tr><tr><td>qfieldname</td><td></td><td>type slis_fieldname</td><td>field with quantity unit</td></tr><tr><td>qtabname</td><td></td><td>type slis_tabname</td><td></td></tr><tr><td>roundtypei</td><td></td><td></td><td>round in write statement四舍五入至小数点后多少位</td></tr><tr><td>exponent</td><td>3</td><td>type c</td><td>exponent for floats浮点数的幂指数为多少位</td></tr><tr><td>key</td><td>1</td><td>type c</td><td>column with key-color指定字段是否是关键字段，如果是则单元格显示的颜色会不同，并会靠前显示</td></tr><tr><td>icon</td><td>1</td><td>type c</td><td>as icon字段将以图标形式显示，INCLUDE <list> ，图标字段内容来自list Inc.文件</td></tr><tr><td>symbol</td><td>1</td><td>type c</td><td>as symbol字段内容作为符号输出，与上面的ICON属性相似</td></tr><tr><td>checkbox</td><td>1</td><td>type c</td><td>as checkbox字段将以复选框形式显示</td></tr><tr><td>just</td><td>1</td><td>type c</td><td>(R)ight (L)eft (C)ent.单元格中内容显示时对齐方式。不设置时按钮数据类型默认对齐方式来对齐</td></tr><tr><td>lzero</td><td>1</td><td>type c</td><td>leading zero  为X时输出前导零</td></tr><tr><td>no_sign</td><td>1</td><td>type c,</td><td>write no-sign 不显示数字符号</td></tr><tr><td>no_zero</td><td>1</td><td>type c</td><td>write no-zero 只输出有意义的值,空值不输出。为X时全为零（如：00000）时不输出，所以不输出零时应该最好同时设置lzero &#x3D; sapce与no_zero &#x3D; X，相反如果要输出，则应同时设置lzero &#x3D; X 与no_zero &#x3D; space</td></tr><tr><td>no_convext</td><td>1</td><td>type c</td><td></td></tr><tr><td>edit_mask</td><td></td><td>type slis_edit_mask</td><td>对字段内容进行掩码格式化输出，具体请参照《ABAP BC Programming.docx》中的WRITE … TO章节，如：gt_fieldcat-edit_mask &#x3D; ‘_<em><strong>&#x2F;</strong>&#x2F;</em>_’可对日期字段都日期格式化显</td></tr><tr><td>emphasize</td><td>4</td><td>type c</td><td>emphasize设置列的颜色</td></tr><tr><td>fix_column</td><td>1</td><td>type c</td><td>Spalte fixieren列固定不滚动，与Key属性相似，但颜色不会发生变化</td></tr><tr><td>do_sum</td><td>1</td><td>type c</td><td>sum up该列是否进行小计，需与gt_sort-subtot一起使用（即需要参考排序），否则只对整列进行一个合计</td></tr><tr><td>no_out</td><td>1</td><td>type c</td><td>(O)blig.(X)no out但注意用户可以change layout（布局设置）来显示出此列</td></tr><tr><td>tech</td><td>1</td><td>type c</td><td>technical field该字段为技术字段：设置为技术列的列将不会再显示出来，即使是在布局设置里也是看不到的</td></tr><tr><td>outputlen</td><td></td><td>like dd03p-outputlen</td><td>列的字符输出宽度</td></tr><tr><td>offset</td><td></td><td>type dd03p-outputlen</td><td>offset</td></tr><tr><td>ref_fieldname</td><td></td><td>like dd03p-fieldname</td><td>如需单元格显示F4输入帮助，则需要指定字段所参照的表名</td></tr><tr><td>roundfieldname</td><td></td><td>type slis_fieldname</td><td></td></tr><tr><td>decimalsfieldname</td><td></td><td>type slis_fieldname</td><td></td></tr><tr><td>decimalstabname</td><td></td><td>type slis_tabname</td><td></td></tr><tr><td>decimals_out</td><td>6</td><td>type c</td><td>控制小数点的位数</td></tr><tr><td>text_fieldname</td><td></td><td>type slis_fieldname</td><td></td></tr><tr><td>ddic_outputlen</td><td></td><td>like dd03p-outputlen</td><td></td></tr><tr><td>key_sel</td><td>1</td><td>type c</td><td>field not obligatory</td></tr><tr><td>no_sum</td><td>1</td><td>type c</td><td>do not sum up</td></tr><tr><td>sp_group</td><td>4</td><td>type c</td><td>group specification</td></tr><tr><td>reprep</td><td>1</td><td>type c</td><td>selection for rep&#x2F;rep</td></tr><tr><td>input</td><td></td><td>type c</td><td>input</td></tr><tr><td>edit</td><td>1</td><td>type c</td><td>internal use only是否可编辑</td></tr><tr><td>hotspot</td><td>1</td><td>type c</td><td>hotspot设置字段内容下面是否有热点（有下划线，可点击，单击即可触发相应事件）</td></tr><tr><td><strong>datatype</strong></td><td></td><td>like dd03p-datatype</td><td><a href="#datatype">具体请看下面的特别说明</a></td></tr></tbody></table><blockquote><p>调整输出列抬头的文本:文本可以随着用户调整列的宽度而变化,其文本即是在对应data element中定义的,如果需要定制,则可以指定以下字段</p></blockquote><table><thead><tr><th>字段名</th><th>长度</th><th>类型参考</th><th>描述</th></tr></thead><tbody><tr><td>seltext_l</td><td></td><td>like dd03p-scrtext_l</td><td>long key word标题字段显示的名称（长）</td></tr><tr><td>seltext_m</td><td></td><td>like dd03p-scrtext_m</td><td>middle key word标题字段显示的名称（中）</td></tr><tr><td>seltext_s</td><td></td><td>like dd03p-scrtext_s</td><td>short key word标题字段显示的名称（短）</td></tr><tr><td>ddictxt</td><td>1</td><td>type c</td><td>(S)hort (M)iddle (L)ong设置以长、中还是短名称来显示，取值分别为 S、M、L。直接指定文本显示为长文本、中、还是短文本, 指定这个字段后则会固定下来,不会随着用户的宽度调整变化，具体代码实现参考。</td></tr><tr><td>reptext_ddic</td><td></td><td>like dd03p-reptext</td><td>heading (ddic)，(header) Analogous（相似） to the Data element main header</td></tr><tr><td>rollname</td><td></td><td>like dd03p-rollname</td><td>F1帮助需参照的DataElement，在ALV的显示界面将鼠标放到该字段的位置后按F1会弹出该字段的说明。另外，可以不指明字段的描述（如seltext_l、seltext_m、seltext_s），函数会自动将字段的描述显示为该参照的数据元素</td></tr></tbody></table><p>两个属性在字段如果是金额或P小数（数量）类型时，需要对datatype此属性进行设置，否则，如果不设置时，在修改对应单元格内容时，会自动将你所输入的数除100，即小数点提前两位；并且如果是数量类型，除了设置datatype外，inttype也需要进行设置，且为 C，具体实现请参考这里：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">datatype LIKE dd03p-datatype,<br>inttype LIKE dd03p-inttype,<br>intlen  LIKE dd03p-intlen,<br>lowercase LIKE dd03p-lowercase,<br></code></pre></td></tr></table></figure><h2 id="函数设置"><a href="#函数设置" class="headerlink" title="函数设置"></a>函数设置</h2><blockquote><p>REUSE_ALV_GRID_DISPLAY GRID模式</p><p>REUSE_ALV_LIST_DISPLAY LIST模式</p></blockquote><p>REUSE_ALV_GRID_DISPLAY与REUSE_ALV_LIST_DISPLAY函数的参数基本相同：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">CALLFUNCTION&#x27;REUSE_ALV_GRID_DISPLAY&#x27;<br>* EXPORTING<br>*   I_INTERFACE_CHECK                 = &#x27; &#x27;<br>*   I_BYPASSING_BUFFER                = &#x27; &#x27;<br>*   I_BUFFER_ACTIVE                   = &#x27; &#x27;<br>*   I_CALLBACK_PROGRAM                = &#x27; &#x27;回调函数、待输出数据内表所在的程序名，一般为本程序，但一般不要直接使用SY-REPID系统变量，因为可能出现多层次调用（一个程序调用另一程序，形成调用链时）SY-REPID可能不是最后想要的程序<br>*   I_CALLBACK_PF_STATUS_SET          = &#x27; &#x27;设置工具栏<br>*   I_CALLBACK_USER_COMMAND           = &#x27; &#x27;工具栏按钮或数据行事件触发时所要调用的Form<br>*   I_CALLBACK_TOP_OF_PAGE            = &#x27; &#x27;<br>*   I_CALLBACK_HTML_TOP_OF_PAGE       = &#x27; &#x27;<br>*   I_CALLBACK_HTML_END_OF_LIST       = &#x27; &#x27;<br>*   I_STRUCTURE_NAME                  =如果输出内表的结构参照的就是表结构，则可以不用指定fieldcat，直接使用这个词典结构，函数会自动根据此结构来生成fieldcat。在实际业务中一般是从多个表读取数据，因此直接使用字典结构作为字段目录的情况不常见；另外，可与IT_FIELDCAT混合使用，手动的IT_FIELDCAT级别优先<br>*   I_BACKGROUND_ID                   = &#x27; &#x27;设置报表背景图片？<br>*   I_GRID_TITLE                      = ALV标题名<br>*   I_GRID_SETTINGS                   =设置（打印、网格中的数据同步更新到输出数据内表）<br>*   IS_LAYOUT                         = ALV Layout<br>*   IT_FIELDCAT                       = FieldCat配置<br>*   IT_EXCLUDING                      =<br>*   IT_SPECIAL_GROUPS                 =<br>*   IT_SORT                           =<br>*   IT_FILTER                         =<br>*   IS_SEL_HIDE                       =<br>*   I_DEFAULT                         = &#x27;X&#x27;用户是否可以设置默认的布局变式（即是否可以将某个布局变式设置为默认的布局）: &#x27;X&#x27; 可以定义默认布局，SPACE 不可以定义默认布局image003[6]<br>*   I_SAVE                            = &#x27; &#x27;保存表格布局：&#x27;X&#x27; 只能保存为全局标准变式，&#x27;U&#x27; 只能保存特定用户变式，&#x27;A&#x27;都可以保存，SPACE不能保存变式<br>*   IS_VARIANT                        =<br>*   IT_EVENTS                         =<br>*   IT_EVENT_EXIT                     =<br>*   IS_PRINT                          =从后端开始打印的参数<br>*   IS_REPREP_ID                      =<br>*   I_SCREEN_START_COLUMN             = 0<br>*   I_SCREEN_START_LINE               = 0<br>*   I_SCREEN_END_COLUMN               = 0<br>*   I_SCREEN_END_LINE                 = 0<br>*   I_HTML_HEIGHT_TOP                 = 0<br>*   I_HTML_HEIGHT_END                 = 0<br>*   IT_ALV_GRAPHICS                   =<br>*   IT_HYPERLINK                      =<br>*   IT_ADD_FIELDCAT                   =<br>*   IT_EXCEPT_QINFO                   =<br>*   IR_SALV_FULLSCREEN_ADAPTER        =<br>* IMPORTING<br>*   E_EXIT_CAUSED_BY_CALLER           =<br>*   ES_EXIT_CAUSED_BY_USER            =<br>TABLES<br>t_outtab                          =需要显示的数据内表<br>* EXCEPTIONS<br>*   PROGRAM_ERROR                     = 1<br>*   OTHERS                            = 2<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">CALLFUNCTION&#x27;REUSE_ALV_LIST_DISPLAY&#x27;<br>* EXPORTING<br>*   I_INTERFACE_CHECK              = &#x27; &#x27;<br>*   I_BYPASSING_BUFFER             =<br>*   I_BUFFER_ACTIVE                = &#x27; &#x27;<br>*   I_CALLBACK_PROGRAM             = &#x27; &#x27;<br>*   I_CALLBACK_PF_STATUS_SET       = &#x27; &#x27;<br>*   I_CALLBACK_USER_COMMAND        = &#x27; &#x27;<br>*   I_STRUCTURE_NAME               =<br>*   IS_LAYOUT                      =<br>*   IT_FIELDCAT                    =<br>*   IT_EXCLUDING                   =<br>*   IT_SPECIAL_GROUPS              =<br>*   IT_SORT                        =<br>*   IT_FILTER                      =<br>*   IS_SEL_HIDE                    =<br>*   I_DEFAULT                      = &#x27;X&#x27;<br>*   I_SAVE                         = &#x27; &#x27;<br>*   IS_VARIANT                     =<br>*   IT_EVENTS                      =<br>*   IT_EVENT_EXIT                  =<br>*   IS_PRINT                       =<br>*   IS_REPREP_ID                   =<br>*   I_SCREEN_START_COLUMN          = 0<br>*   I_SCREEN_START_LINE            = 0<br>*   I_SCREEN_END_COLUMN            = 0<br>*   I_SCREEN_END_LINE              = 0<br>*   IR_SALV_LIST_ADAPTER           =<br>*   IT_EXCEPT_QINFO                =<br>*   I_SUPPRESS_EMPTY_DATA          = ABAP_FALSE<br>* IMPORTING<br>*   E_EXIT_CAUSED_BY_CALLER        =<br>*   ES_EXIT_CAUSED_BY_USER         =<br>TABLES<br>  t_outtab                       =<br>* EXCEPTIONS<br>*   PROGRAM_ERROR                  = 1<br>*   OTHERS                         = 2<br></code></pre></td></tr></table></figure><h2 id="EVENT设置"><a href="#EVENT设置" class="headerlink" title="EVENT设置"></a>EVENT设置</h2><p>需要将<code>gt_events </code>配置到函数参数中：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">IT_EVENTS = gt_event<br></code></pre></td></tr></table></figure><p>代码定义：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">TYPE-POOLS:SLIS.<br>DATA: gt_events TYPE SLIS_T_EVENT,<br>      gs_event TYPE SLIS_ALV_EVENT.<br>gs_event-name = gs_event-form = &#x27;DATA_CHANGED&#x27;. ##添加DATACHANGED事件<br>APPEND gs_event TO gt_events.<br></code></pre></td></tr></table></figure><h2 id="标题设置"><a href="#标题设置" class="headerlink" title="标题设置"></a>标题设置</h2><p>传统标题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">FORM frm_top_page.&quot; USING co_doc TYPE cl_dd_document.<br><br>* ALV Header declarations<br>  DATA : lt_header TYPE slis_t_listheader,<br>         ls_header TYPE slis_listheader,<br>         t_line    LIKE ls_header-info,<br>         ld_lines  TYPE i,<br>         ld_linesc(10) TYPE c.<br><br>* 查询条件<br>  CLEAR : ls_header.<br>  ls_header-typ  = &#x27;S&#x27;.<br>  ls_header-key  = &#x27;注意: &#x27;.<br>  ls_header-info = &#x27;同一张提单，涉及多张发货指令单，提单则默认是否我司运输、是否含运费、是否赊销为空。&#x27;.<br>  APPEND ls_header TO lt_header.<br><br>  CALL FUNCTION &#x27;REUSE_ALV_COMMENTARY_WRITE&#x27;<br>    EXPORTING<br>      it_list_commentary = lt_header.<br><br>ENDFORM.              <br></code></pre></td></tr></table></figure><p>html标题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">FORM html_top_of_page USING DOCUMENT TYPE REF TO CL_DD_DOCUMENT.<br>     DATA : m_p TYPE I ,<br>            m_buffer TYPE STRING.<br>     CONCATENATE &#x27;&lt;html&gt;&lt;center&gt;&lt;h1&gt;&#x27;<br>                  &#x27;考核程序&#x27;<br>                  &#x27;&lt;/h1&gt;&lt;/center&gt;&lt;/html&gt;&#x27;<br>                  INTO  m_buffer.<br>     CALL  METHOD DOCUMENT-&gt;HTML_INSERT   &quot;使用html insert css布局保证了 标题永远居中<br>     EXPORTING<br>      CONTENTS = m_buffer<br>     CHANGING<br>       POSITION = M_P.<br>ENDFORM.<br></code></pre></td></tr></table></figure><h2 id="自定义STATUS"><a href="#自定义STATUS" class="headerlink" title="自定义STATUS"></a>自定义STATUS</h2><h3 id="拷贝标准GUI状态"><a href="#拷贝标准GUI状态" class="headerlink" title="拷贝标准GUI状态"></a>拷贝标准GUI状态</h3><blockquote><p>从<code>SLVC_FULLSCREEN</code>函数组中的拷贝STANDARD_FULLSCREENGui Status，再在此基础之上新增按钮即可</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230730174803455.png" alt="image-20230730174803455"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230730174939640.png" alt="image-20230730174939640"></p><p>右键&#x3D;&gt;复制&#x3D;&gt;进入对话框</p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230730175047112.png" alt="image-20230730175047112"></p><h3 id="创建功能按钮"><a href="#创建功能按钮" class="headerlink" title="创建功能按钮"></a>创建功能按钮</h3><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230730093305438.png" alt="image-20230730093305438"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230730093536517.png" alt="image-20230730093536517"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230730093615450.png" alt="image-20230730093615450"></p><p><strong>创建好后一定要激活！！！</strong></p><h3 id="指定自定义GUI状态"><a href="#指定自定义GUI状态" class="headerlink" title="指定自定义GUI状态"></a>指定自定义GUI状态</h3><blockquote><p>需要将<code>I_CALLBACK_PF_STATUS_SET </code>配置到函数参数中：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">I_CALLBACK_PF_STATUS_SET = &#x27;ALV_STATUS_SET&#x27;<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">FORM alv_status_set USING RT_EXTAB TYPE SLIS_T_EXTAB.<br>    SET PF-STATUS &#x27;ZUI&#x27;.<br>ENDFORM.<br></code></pre></td></tr></table></figure><h3 id="编写相应事件"><a href="#编写相应事件" class="headerlink" title="编写相应事件"></a>编写相应事件</h3><blockquote><p>需要将<code>FRM_USER_COMMAND</code>配置到函数参数中：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">I_CALLBACK_USER_COMMAND = &#x27;FRM_USER_COMMAND&#x27;<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">FORM FRM_USER_COMMAND USING R_UCOMM LIKE SY-UCOMM RS_SELFIELD TYPE SLIS_SELFIELD.<br>  DATA: l_grid TYPE REF TO cl_gui_alv_grid,<br>        lt_zyc003 TYPE STANDARD TABLE OF zyc003,<br>        ls_zyc003 LIKE LINE OF lt_zyc003.<br>  CASE R_UCOMM.<br>    WHEN &#x27;&amp;ADD&#x27;.<br>        DATA: lines TYPE i.<br>        CLEAR gs_zyc003.<br>        CLEAR gt_zyc003.<br>        INSERT INITIAL LINE INTO gt_alv_zyc003 INDEX 1.<br>        INSERT INITIAL LINE INTO gt_zyc003 INDEX 1.<br>        IF sy-subrc = 0.<br>           READ TABLE gt_alv_zyc003 INTO gs_alv_zyc003 INDEX 1.<br>           CLEAR gs_alv_zyc003-field_style.<br>           lines = LINES( gt_alv_zyc003 ) + 1.<br>           gs_alv_zyc003-ebeln = lines.<br>           gs_zyc003-ebeln = lines.<br>           MODIFY gt_alv_zyc003 FROM gs_alv_zyc003 INDEX 1.<br>           MODIFY gt_zyc003 FROM gs_zyc003 INDEX 1.<br>           INSERT zyc003 FROM TABLE gt_zyc003.<br>           COMMIT WORK.<br>           CLEAR gs_zyc003.<br>           CLEAR gt_zyc003.<br>           CLEAR gs_alv_zyc003.<br>        ENDIF.<br>        RS_SELFIELD-refresh = &#x27;X&#x27;.<br>    WHEN &#x27;&amp;ZSAVE&#x27;.<br>       CLEAR lt_zyc003.<br>       CLEAR ls_zyc003.<br>*------------将ALV上修改的内容保存到内表---------------------------------*<br>      CALL FUNCTION &#x27;GET_GLOBALS_FROM_SLVC_FULLSCR&#x27;<br>        IMPORTING<br>          e_grid = l_grid.<br>      CALL METHOD l_grid-&gt;check_changed_data.<br>      LOOP AT gt_alv_zyc003 INTO gs_alv_zyc003 WHERE slect = &#x27;X&#x27;.<br>        ls_zyc003-ebeln = gs_alv_zyc003-ebeln.<br>        ls_zyc003-bukrs = gs_alv_zyc003-bukrs.<br>        ls_zyc003-bsart = gs_alv_zyc003-bsart.<br>        ls_zyc003-lifnr = gs_alv_zyc003-lifnr.<br>        ls_zyc003-zterm = gs_alv_zyc003-zterm.<br>        APPEND ls_zyc003 TO lt_zyc003.<br>      ENDLOOP.<br>      UPDATE zyc003 FROM TABLE lt_zyc003.<br>      commit WORK.<br>      rs_selfield-refresh = &#x27;X&#x27;.  &quot;自动刷新<br><br>    WHEN &#x27;&amp;EDIT&#x27;.<br>      LOOP AT gt_alv_zyc003 INTO gs_alv_zyc003.<br>        IF gs_alv_zyc003-slect = &#x27;X&#x27;.<br>            CLEAR gs_alv_zyc003-field_style.<br>            MODIFY gt_alv_zyc003 FROM gs_alv_zyc003.<br>            rs_selfield-refresh = &#x27;X&#x27;.<br>        ENDIF.<br>        CLEAR gs_alv_zyc003.<br>      ENDLOOP.<br>    WHEN &#x27;&amp;SEA&#x27;.<br>      LOOP AT gt_alv_zyc003 INTO gs_alv_zyc003.<br>        gs_alv_zyc003-slect = &#x27;X&#x27;.<br>        MODIFY gt_alv_zyc003 FROM gs_alv_zyc003.<br>        rs_selfield-refresh = &#x27;X&#x27;.<br>        CLEAR gs_alv_zyc003.<br>      ENDLOOP.<br>    WHEN &#x27;&amp;FSEA&#x27;.<br>      LOOP AT gt_alv_zyc003 INTO gs_alv_zyc003.<br>        CLEAR gs_alv_zyc003-slect.<br>        MODIFY gt_alv_zyc003 FROM gs_alv_zyc003.<br>        rs_selfield-refresh = &#x27;X&#x27;.<br>        CLEAR gs_alv_zyc003.<br>      ENDLOOP.<br>     WHEN &#x27;&amp;REMOVE&#x27;.<br>        CLEAR lt_zyc003.<br>        CLEAR ls_zyc003.<br>        LOOP AT gt_alv_zyc003 INTO gs_alv_zyc003 WHERE slect = &#x27;X&#x27;.<br>          ls_zyc003-ebeln = gs_alv_zyc003-ebeln.<br>          ls_zyc003-bukrs = gs_alv_zyc003-bukrs.<br>          ls_zyc003-bsart = gs_alv_zyc003-bsart.<br>          ls_zyc003-lifnr = gs_alv_zyc003-lifnr.<br>          ls_zyc003-zterm = gs_alv_zyc003-zterm.<br>          APPEND ls_zyc003 TO lt_zyc003.<br>        ENDLOOP.<br>        DELETE gt_alv_zyc003 WHERE slect = &#x27;X&#x27;.<br>        DELETE zyc003 FROM TABLE lt_zyc003.<br>        COMMIT WORK.<br>        rs_selfield-refresh = &#x27;X&#x27;.<br>    ENDCASE.<br>ENDFORM.<br></code></pre></td></tr></table></figure><h2 id="DATACHANGED事件"><a href="#DATACHANGED事件" class="headerlink" title="DATACHANGED事件"></a>DATACHANGED事件</h2><blockquote><p>需要将<code>data_changed</code>配置到EVENT参数中：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">gs_event-name = gs_event-form = &#x27;DATA_CHANGED&#x27;.<br>APPEND gs_event TO gt_event.<br></code></pre></td></tr></table></figure><p>代码示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">FORM data_changed USING pcl_data TYPE REF TO cl_alv_changed_data_protocol.<br>  data: lt_mod_cell TYPE lvc_t_modi,<br>        ls_mod_cell TYPE lvc_s_modi.<br>  lt_mod_cell = pcl_data-&gt;mt_mod_cells.<br>  LOOP AT lt_mod_cell INTO ls_mod_cell WHERE fieldname = &#x27;lifnr&#x27;. &quot; 如果有多个列需要响应，可以去掉此处的where在循环中使用case或if判断即可<br>    READ TABLE gt_alv_zyc003 INTO gs_alv_zyc003 INDEX ls_mod_cell-row_id.&quot; 读内表中将要被修改的一行<br>      gs_alv_zyc003-lifnr = ls_mod_cell-value. &quot; ALV界面已经改了，现在把这个修改内容赋值给内表工作区<br>      IF ls_mod_cell-value = &#x27;002&#x27;.<br>        gs_alv_zyc003-rcolr = &#x27;C610&#x27;.<br>        MODIFY gt_alv_zyc003 FROM gs_alv_zyc003 INDEX ls_mod_cell-row_id . &quot;更新内表<br>      ELSE.<br>        gs_alv_zyc003-rcolr = &#x27;&#x27;.<br>        MODIFY gt_alv_zyc003 FROM gs_alv_zyc003 INDEX ls_mod_cell-row_id . &quot;更新内表<br>      ENDIF.<br>      CLEAR gs_alv_zyc003.<br>      PERFORM re_alv.<br>  ENDLOOP.<br></code></pre></td></tr></table></figure><h2 id="颜色更改"><a href="#颜色更改" class="headerlink" title="颜色更改"></a>颜色更改</h2><p>颜色设置中有优先级顺序，他们是单元格–&gt;行–&gt;列，即若同时使用了上述3中更改颜色的方法，则列的颜色会被行的颜色覆盖掉，而行的颜色又会被单元格的颜色覆盖掉，最终只会显示出单元格的颜色。</p><p>如果这列被设置为关键列，就是LS_FCAT-KEY &#x3D; ‘X’ ，那么颜色设置就不会起作用</p><h3 id="行颜色"><a href="#行颜色" class="headerlink" title="行颜色"></a>行颜色</h3><p>ALV中的每行数据颜色是通过LAYOUT来控制的。需要在显示输出内表结构中增加一列字段，用来存储数据行的颜色</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">TYPE-POOLS:slis.<br>DATA: gt_fieldcat TYPE slis_t_fieldcat_alv WITH HEADER LINE.<br>DATA: gs_layout TYPE slis_layout_alv.<br><br>DATA:BEGIN OF gt_data OCCURS 0,<br> val1(4),&quot;颜色值<br> val2(4),&quot;颜色值<br> color(4),&quot;用来存储行颜色<br> END OF gt_data.<br><br>START-OF-SELECTION.<br> PERFORM inital.<br> DEFINE fill_fdcat.<br>  clear gt_fieldcat.<br>  gt_fieldcat-fieldname = &amp;1.<br>  gt_fieldcat-seltext_l = &amp;2.<br>  append gt_fieldcat.<br> END-OF-DEFINITION.<br><br> fill_fdcat &#x27;VAL1&#x27; &#x27;颜色值&#x27;.<br> fill_fdcat &#x27;VAL2&#x27; &#x27;颜色值&#x27;.<br><br> gs_layout-info_fieldname = &#x27;COLOR&#x27;.&quot; 指定哪一列用来作为行颜色的列<br> CALL FUNCTION &#x27;REUSE_ALV_GRID_DISPLAY&#x27;<br>  EXPORTING<br>   it_fieldcat = gt_fieldcat[]<br>   is_layout  = gs_layout<br>  TABLES<br>   t_outtab  = gt_data.<br><br>FORM inital .<br> DATA: c1,c2,c3.<br> DO 8 TIMES.<br>  c1 = sy-index - 1.<br>  DO 2 TIMES.<br>   c2 = sy-index - 1.<br>   DO 2 TIMES.<br>    c3 = sy-index - 1.<br>    CONCATENATE &#x27;C&#x27; c1 c2 c3 INTO gt_data-color.<br>    gt_data-val1 = gt_data-color.<br>    gt_data-val2 = gt_data-color.<br>    APPEND gt_data.<br>   ENDDO.<br>  ENDDO.<br> ENDDO.<br>ENDFORM.<br></code></pre></td></tr></table></figure><ul><li>颜色值定义为4位字符，首位固定为字母“C”</li><li>第2位为颜色，由0~7表示，不同的数字表示不同的颜色属性</li><li>第3位表示输出文字是否高亮显示，由0~1表示，为1时表示高亮显示</li><li>第4位测试了一下，基本上0~9颜色都差不多，唯一就是当取值为1时，底色又回到了灰色（且只是在第3位为0时才有此效果）</li></ul><table><thead><tr><th>第一位（固定为C）</th><th>第二位</th><th>第三位</th><th>第四位</th><th>代表颜色</th></tr></thead><tbody><tr><td>C</td><td>0</td><td>0</td><td>0</td><td>background color</td></tr><tr><td>C</td><td>1</td><td>0</td><td>0</td><td>Gray-blue</td></tr><tr><td>C</td><td>2</td><td>0</td><td>0</td><td>Light gray</td></tr><tr><td>C</td><td>3</td><td>0</td><td>0</td><td>yellow</td></tr><tr><td>C</td><td>4</td><td>0</td><td>0</td><td>blue-gray</td></tr><tr><td>C</td><td>5</td><td>0</td><td>0</td><td>green</td></tr><tr><td>C</td><td>6</td><td>0</td><td>0</td><td>red</td></tr><tr><td>C</td><td>7</td><td>0</td><td>0</td><td>orange</td></tr></tbody></table><blockquote><p>ALV中的颜色是由4位数组成：’C’+COL+INT+INV</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">types: begin of slis_color,<br>     col type i,<br>     int type i,<br>     inv type i,<br>    end of slis_color.<br></code></pre></td></tr></table></figure><ul><li>第1位：固定取值为C</li><li>第2位COL：颜色值，取值为0~7</li><li>第3位INT：高亮，即颜色是否加深，取值为0、1。1表示加深显示</li><li>第4位INV：颜色是否反转，即颜色是作用在背景上，还是作用在输出字符上，取值上为0、1。为1时表示设置的是前景色，即输出字符本身的颜色（好像只有在第3位为0时才有效？）</li></ul><p>颜色参考表如下：</p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230730172603207.png" alt="image-20230730172603207"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230730172642005.png" alt="image-20230730172642005"></p><h3 id="列颜色"><a href="#列颜色" class="headerlink" title="列颜色"></a>列颜色</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">TYPE-POOLS:slis.<br>DATA: gt_fieldcat TYPE slis_t_fieldcat_alv WITH HEADER LINE.<br>DATA: gt_sort TYPE slis_t_sortinfo_alv WITH HEADER LINE.<br>DATA:BEGIN OF gt_data OCCURS 0,<br>  curr TYPE ekpo-netpr,<br>  int TYPE i,<br>  p TYPE p LENGTH 5 DECIMALS 2,<br>  END OF gt_data.<br><br>START-OF-SELECTION.<br>  PERFORM inital.<br>  DEFINE fill_fdcat.<br>    clear gt_fieldcat.<br>    gt_fieldcat-fieldname = &amp;1.<br>    gt_fieldcat-seltext_l = &amp;2.<br>    if &amp;1 = &#x27;CURR&#x27; .<br>      &quot;设置列颜色<br>      gt_fieldcat-emphasize = &#x27;C510&#x27;.<br>    endif.<br>    if &amp;1 = &#x27;INT&#x27; .<br>      gt_fieldcat-emphasize = &#x27;C610&#x27;.<br>    endif.<br>    append gt_fieldcat.<br>  END-OF-DEFINITION.<br><br>  fill_fdcat &#x27;CURR&#x27; &#x27;CURR&#x27; .<br>  fill_fdcat &#x27;INT&#x27; &#x27;INT&#x27; .<br>  fill_fdcat &#x27;P&#x27; &#x27;P(3.2)&#x27; .<br><br>  CALL FUNCTION &#x27;REUSE_ALV_GRID_DISPLAY&#x27;<br>    EXPORTING<br>      i_callback_program = sy-repid<br>      it_fieldcat        = gt_fieldcat[]<br>    TABLES<br>      t_outtab           = gt_data[].<br><br>FORM inital .<br>  gt_data-curr = 1.<br>  gt_data-int = 1.<br>  gt_data-p = 1.<br>  APPEND gt_data.<br>  gt_data-curr = 2.<br>  gt_data-int = 2.<br>  gt_data-p = 2.<br>  APPEND gt_data.<br>ENDFORM.<br></code></pre></td></tr></table></figure><h3 id="单元格颜色"><a href="#单元格颜色" class="headerlink" title="单元格颜色"></a>单元格颜色</h3><p><img src="https://images0.cnblogs.com/blog/717614/201502/141044024489045.png" alt="image029[6]"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">TYPE-POOLS:slis.<br>DATA: gt_fieldcat TYPE slis_t_fieldcat_alv WITH HEADER LINE.<br>DATA: gs_layout TYPE slis_layout_alv.<br><br>DATA:BEGIN OF gt_data OCCURS 0,<br>  val1(40),&quot;颜色值<br>  val2(40),&quot;颜色值<br>  val3(40),<br>  colortable TYPE slis_t_specialcol_alv, &quot;每行中的单元格颜色内表，可对多个单元格进行不同颜色设置<br>  END OF gt_data.<br>&quot;每行中单元格颜色列表<br>DATA: gt_color TYPE slis_t_specialcol_alv WITH HEADER LINE.<br><br>START-OF-SELECTION.<br>  PERFORM inital.<br>  DEFINE fill_fdcat.<br>    clear gt_fieldcat.<br>    gt_fieldcat-fieldname = &amp;1.<br>    gt_fieldcat-seltext_l = &amp;2.<br>    append gt_fieldcat.<br>  END-OF-DEFINITION.<br><br>  fill_fdcat &#x27;VAL1&#x27; &#x27;颜色值&#x27;.<br>  fill_fdcat &#x27;VAL2&#x27; &#x27;颜色值&#x27;.<br>  fill_fdcat &#x27;VAL3&#x27; &#x27;无颜色&#x27;.<br><br>  gs_layout-coltab_fieldname = &#x27;COLORTABLE&#x27;.&quot;设置输出内表中哪列为颜色列表<br><br>  CALL FUNCTION &#x27;REUSE_ALV_GRID_DISPLAY&#x27;<br>    EXPORTING<br>      it_fieldcat = gt_fieldcat[]<br>      is_layout   = gs_layout<br>    TABLES<br>      t_outtab    = gt_data.<br><br>FORM inital .<br>  DATA: c1,c2.<br>  DO 7 TIMES.<br>    c1 = gt_color-color-col = sy-index - 1.&quot;颜色值<br>    DO 2 TIMES.<br>      c2 = gt_color-color-int =  sy-index - 1.&quot;颜色亮度<br>      gt_color-color-inv = &#x27;0&#x27;.&quot;颜色作用于背景<br>      CASE sy-index .<br>        WHEN 1.<br>          gt_color-fieldname = &#x27;VAL1&#x27;.&quot;需进行颜色设置的列名（已具体到单元格）<br>          CONCATENATE &#x27;col=&#x27; c1 ` ` &#x27;int=&#x27; c2 ` `  &#x27;inv=0&#x27;  INTO gt_data-val1 .<br>        WHEN 2.<br>          gt_color-fieldname = &#x27;VAL2&#x27;.&quot;需进行颜色设置的列名（已具体到单元格）<br>          CONCATENATE &#x27;col=&#x27; c1 ` ` &#x27;int=&#x27; c2 ` `  &#x27;inv=0&#x27;  INTO gt_data-val2 .<br>      ENDCASE.<br>      APPEND gt_color.<br>    ENDDO.<br>    &quot;设置每行数据中单元格的颜色内表<br>    gt_data-colortable = gt_color[].<br>    gt_data-val3 = &#x27;无颜色&#x27;.<br>    APPEND gt_data.<br>    CLEAR:gt_color,gt_color[].<br>  ENDDO.<br></code></pre></td></tr></table></figure><h2 id="可编辑"><a href="#可编辑" class="headerlink" title="可编辑"></a>可编辑</h2><p>整体可编辑</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">DATA: gs_layout TYPE slis_layout_alv.<br>gs_layout-edit = &#x27;X&#x27;.<br></code></pre></td></tr></table></figure><p>列可编辑，设置fieldcat里的edit参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">gt_fieldcat-edit = &#x27;X&#x27;<br></code></pre></td></tr></table></figure><p>单元格满足条件可编辑，只能通过<code>REUSE_ALV_GRID_DISPLAY_LVC</code>来完成这一操作，具体思路是先设置该列可编辑，再控制不满足条件的样式为不可编辑样式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">&quot;TYPE-POOLS:slis.<br>DATA: gt_fieldcat TYPE lvc_t_fcat WITH HEADER LINE.&quot;注：此时的fieldcat不再引用slis_t_fieldcat_alv类型<br>DATA: gs_layout TYPE lvc_s_layo.&quot;注：此时的Layout不再是引用slis_layout_alv类型<br><br>DATA:BEGIN OF gt_data OCCURS 0,<br>  val1(40),<br>  val2(40),<br>  cellstab TYPE lvc_t_styl,&quot;单元格可编辑控制<br>  END OF gt_data.<br>&quot;单元格可编辑控制内表<br>DATA: gt_cellstab TYPE lvc_t_styl WITH HEADER LINE.<br><br>START-OF-SELECTION.<br>  PERFORM inital.<br>  DEFINE fill_fdcat.<br>    clear gt_fieldcat.<br>    gt_fieldcat-fieldname = &amp;1.<br>    gt_fieldcat-scrtext_l = &amp;2.<br>    &quot;设置单元格为可编辑状态：此处设置所有单元格都可编辑<br>    gt_fieldcat-edit = &#x27;X&#x27;.<br>    append gt_fieldcat.<br>  END-OF-DEFINITION.<br><br>  fill_fdcat &#x27;VAL1&#x27; &#x27;列1&#x27;.<br>  fill_fdcat &#x27;VAL2&#x27; &#x27;列2&#x27;.<br><br>  gs_layout-stylefname = &#x27;CELLSTAB&#x27;.&quot;设置可编辑信息<br>  CALL FUNCTION &#x27;REUSE_ALV_GRID_DISPLAY_LVC&#x27;<br>    EXPORTING<br>      is_layout_lvc   = gs_layout<br>      it_fieldcat_lvc = gt_fieldcat[]<br>    TABLES<br>     t_outtab        = gt_data.<br><br>FORM inital .<br>  gt_data-val1 = &#x27;cell1&#x27;.<br>  gt_data-val2 = &#x27;cell2&#x27;.<br>  gt_cellstab-fieldname = &#x27;VAL1&#x27;.<br>  &quot;将原本可编辑的单元格切换到不可编辑样式。注：这里<br>  &quot;只是样式的切换，不能仅仅使用cl_gui_alv_grid=&gt;mc_style_enabled来将单元格设置为<br>  &quot;可编辑状态，单元格真正是否可编辑是由fieldcat-edit或layout-edit来决定的，而仅<br>  &quot;设置为cl_gui_alv_grid=&gt;mc_style_enabled是不可编辑的<br>  gt_cellstab-style = cl_gui_alv_grid=&gt;mc_style_disabled.<br>  APPEND gt_cellstab.<br>  gt_data-cellstab = gt_cellstab[].<br>  APPEND gt_data.<br>ENDFORM.<br></code></pre></td></tr></table></figure><h2 id="整体示例代码"><a href="#整体示例代码" class="headerlink" title="整体示例代码"></a>整体示例代码</h2><p>此示例使用了 lvc alv 与 function alv 除了变量定义外别无区别。</p><p>ZYC_T004：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">*&amp;---------------------------------------------------------------------*<br>*&amp; Report ZYC_T004<br>*&amp;---------------------------------------------------------------------*<br>*&amp;<br>*&amp;---------------------------------------------------------------------*<br>REPORT ZYC_T004 MESSAGE-ID ZYC.<br>INCLUDE zyc_t004top.<br>INCLUDE zyc_t004form.<br>START-OF-SELECTION.<br>  PERFORM get_data.<br><br>END-OF-SELECTION.<br>  PERFORM display_data.<br><br>FORM display_data .<br>  IF gt_zyc003 IS NOT INITIAL.<br>    PERFORM build_fieldcat.                                 .<br>    PERFORM build_layout.<br>    PERFORM build_sort.<br>    PERFORM build_event.<br>    PERFORM build_alv.<br>  ELSE.<br>    MESSAGE i000.<br>  ENDIF.<br>ENDFORM.<br>*&amp;---------------------------------------------------------------------*<br>*&amp; Form build_fieldcat<br>*&amp;---------------------------------------------------------------------*<br>*&amp; text<br>*&amp;---------------------------------------------------------------------*<br>*&amp; --&gt;  p1        text<br>*&amp; &lt;--  p2        text<br>*&amp;---------------------------------------------------------------------*<br>FORM build_fieldcat .<br>  %%APPEND_FIELDCAT: &#x27;1&#x27; &#x27;ebeln&#x27; &#x27;10&#x27; &#x27;采购凭证编号&#x27; &#x27;&#x27; &#x27;&#x27; ,<br>                     &#x27;2&#x27; &#x27;bukrs&#x27; &#x27;10&#x27; &#x27;公司代码&#x27; &#x27;X&#x27; &#x27;&#x27; ,<br>                     &#x27;3&#x27; &#x27;bsart&#x27; &#x27;10&#x27; &#x27;采购凭证类型&#x27; &#x27;X&#x27; &#x27;&#x27; ,<br>                     &#x27;4&#x27; &#x27;lifnr&#x27; &#x27;10&#x27; &#x27;供应商账户号&#x27; &#x27;X&#x27; &#x27;&#x27; ,<br>                     &#x27;5&#x27; &#x27;zterm&#x27; &#x27;10&#x27; &#x27;付款条件代码&#x27; &#x27;X&#x27; &#x27;&#x27; ,<br>                     &#x27;6&#x27; &#x27;slect&#x27; &#x27;2&#x27; &#x27;选择&#x27; &#x27;X&#x27; &#x27;X&#x27; .<br>ENDFORM.<br>*&amp;---------------------------------------------------------------------*<br>*&amp; Form build_layout<br>*&amp;---------------------------------------------------------------------*<br>*&amp; text<br>*&amp;---------------------------------------------------------------------*<br>*&amp; --&gt;  p1        text<br>*&amp; &lt;--  p2        text<br>*&amp;---------------------------------------------------------------------*<br>FORM build_layout .<br>  LOOP AT gt_alv_zyc003 INTO gs_alv_zyc003.<br>    %%APPEND_FIELD_STYLE: &#x27;ebeln&#x27; cl_gui_alv_grid=&gt;mc_style_disabled,<br>                          &#x27;bukrs&#x27; cl_gui_alv_grid=&gt;mc_style_disabled,<br>                          &#x27;bsart&#x27; cl_gui_alv_grid=&gt;mc_style_disabled,<br>                          &#x27;lifnr&#x27; cl_gui_alv_grid=&gt;mc_style_disabled,<br>                          &#x27;zterm&#x27; cl_gui_alv_grid=&gt;mc_style_disabled.<br><br>    MODIFY gt_alv_zyc003 FROM gs_alv_zyc003.<br>  ENDLOOP.<br>    gs_grid_settings-edt_cll_cb  = &#x27;X&#x27; .<br>    gs_layout-info_fname = &#x27;rcolr&#x27;.<br>    gs_layout-stylefname = &#x27;field_style&#x27;.<br>ENDFORM.<br>*&amp;---------------------------------------------------------------------*<br>*&amp; Form build_sort<br>*&amp;---------------------------------------------------------------------*<br>*&amp; text<br>*&amp;---------------------------------------------------------------------*<br>*&amp; --&gt;  p1        text<br>*&amp; &lt;--  p2        text<br>*&amp;---------------------------------------------------------------------*<br>FORM build_sort .<br><br>ENDFORM.<br>*&amp;---------------------------------------------------------------------*<br>*&amp; Form build_event<br>*&amp;---------------------------------------------------------------------*<br>*&amp; text<br>*&amp;---------------------------------------------------------------------*<br>*&amp; --&gt;  p1        text<br>*&amp; &lt;--  p2        text<br>*&amp;---------------------------------------------------------------------*<br>FORM build_event .<br>  gs_event-name = gs_event-form = &#x27;DATA_CHANGED&#x27;.<br>  APPEND gs_event TO gt_event.<br>ENDFORM.<br>*&amp;---------------------------------------------------------------------*<br>*&amp; Form build_alv<br>*&amp;---------------------------------------------------------------------*<br>*&amp; text<br>*&amp;---------------------------------------------------------------------*<br>*&amp; --&gt;  p1        text<br>*&amp; &lt;--  p2        text<br>*&amp;---------------------------------------------------------------------*<br>FORM build_alv .<br>  CALL FUNCTION &#x27;REUSE_ALV_GRID_DISPLAY_LVC&#x27;<br>   EXPORTING<br>*     I_INTERFACE_CHECK                 = &#x27; &#x27;<br>*     I_BYPASSING_BUFFER                =<br>*     I_BUFFER_ACTIVE                   =<br>     I_CALLBACK_PROGRAM                = SY-REPID<br>     I_CALLBACK_PF_STATUS_SET          = &#x27;ALV_STATUS_SET&#x27;<br>     I_CALLBACK_USER_COMMAND           = &#x27;FRM_USER_COMMAND&#x27;<br>*     I_CALLBACK_TOP_OF_PAGE            = &#x27;&#x27;<br>     I_CALLBACK_HTML_TOP_OF_PAGE       = &#x27;HTML_TOP_OF_PAGE&#x27;<br>*     I_CALLBACK_HTML_END_OF_LIST       = &#x27; &#x27;<br>*     I_STRUCTURE_NAME                  = &#x27;&#x27;<br>*     I_BACKGROUND_ID                   = &#x27; &#x27;<br>*     I_GRID_TITLE                      =<br>     I_GRID_SETTINGS                   = gs_grid_settings<br>     IS_LAYOUT_LVC                     = gs_layout<br>     IT_FIELDCAT_LVC                   = gt_fieldcat<br>*     IT_EXCLUDING                      =<br>*     IT_SPECIAL_GROUPS_LVC             =<br>*     IT_SORT_LVC                       =<br>*     IT_FILTER_LVC                     =<br>*     IT_HYPERLINK                      =<br>*     IS_SEL_HIDE                       =<br>*     I_DEFAULT                         = &#x27;X&#x27;<br>*     I_SAVE                            = &#x27; &#x27;<br>*     IS_VARIANT                        =<br>     IT_EVENTS                         = gt_event<br>*     IT_EVENT_EXIT                     =<br>*     IS_PRINT_LVC                      =<br>*     IS_REPREP_ID_LVC                  =<br>*     I_SCREEN_START_COLUMN             = 0<br>*     I_SCREEN_START_LINE               = 0<br>*     I_SCREEN_END_COLUMN               = 0<br>*     I_SCREEN_END_LINE                 = 0<br>*     I_HTML_HEIGHT_TOP                 =<br>*     I_HTML_HEIGHT_END                 =<br>*     IT_ALV_GRAPHICS                   =<br>*     IT_EXCEPT_QINFO_LVC               =<br>*     IR_SALV_FULLSCREEN_ADAPTER        =<br>*   IMPORTING<br>*     E_EXIT_CAUSED_BY_CALLER           =<br>*     ES_EXIT_CAUSED_BY_USER            =<br>    TABLES<br>      t_outtab                          = gt_alv_zyc003<br>*   EXCEPTIONS<br>*     PROGRAM_ERROR                     = 1<br>*     OTHERS                            = 2<br>            .<br>  IF sy-subrc &lt;&gt; 0.<br>*   Implement suitable error handling here<br>  ENDIF.<br><br>ENDFORM.<br>*&amp;---------------------------------------------------------------------*<br>*&amp; Form get_data<br>*&amp;---------------------------------------------------------------------*<br>*&amp; text<br>*&amp;---------------------------------------------------------------------*<br>*&amp; --&gt;  p1        text<br>*&amp; &lt;--  p2        text<br>*&amp;---------------------------------------------------------------------*<br>FORM get_data .<br>  SELECT *<br>    FROM<br>    ZYC003<br>    WHERE EBELN IN @s_ebeln<br>    AND BUKRS = @p_bukrs<br>    AND BSART = @p_bsart<br>    INTO TABLE @gt_zyc003.<br>  LOOP AT gt_zyc003 INTO gs_zyc003.<br>   MOVE: gs_zyc003-ebeln TO gs_alv_zyc003-ebeln,<br>         gs_zyc003-bukrs TO gs_alv_zyc003-bukrs,<br>         gs_zyc003-bsart TO gs_alv_zyc003-bsart,<br>         gs_zyc003-lifnr TO gs_alv_zyc003-lifnr,<br>         gs_zyc003-zterm TO gs_alv_zyc003-zterm.<br>   APPEND gs_alv_zyc003 TO gt_alv_zyc003.<br>   CLEAR gs_zyc003.<br>  ENDLOOP.<br>ENDFORM.<br><br>FORM FRM_USER_COMMAND USING R_UCOMM LIKE SY-UCOMM RS_SELFIELD TYPE SLIS_SELFIELD.<br>  DATA: l_grid TYPE REF TO cl_gui_alv_grid,<br>        lt_zyc003 TYPE STANDARD TABLE OF zyc003,<br>        ls_zyc003 LIKE LINE OF lt_zyc003.<br>  CASE R_UCOMM.<br>    WHEN &#x27;&amp;ADD&#x27;.<br>        DATA: lines TYPE i.<br>        CLEAR gs_zyc003.<br>        CLEAR gt_zyc003.<br>        INSERT INITIAL LINE INTO gt_alv_zyc003 INDEX 1.<br>        INSERT INITIAL LINE INTO gt_zyc003 INDEX 1.<br>        IF sy-subrc = 0.<br>           READ TABLE gt_alv_zyc003 INTO gs_alv_zyc003 INDEX 1.<br>           CLEAR gs_alv_zyc003-field_style.<br>           lines = LINES( gt_alv_zyc003 ) + 1.<br>           gs_alv_zyc003-ebeln = lines.<br>           gs_zyc003-ebeln = lines.<br>           MODIFY gt_alv_zyc003 FROM gs_alv_zyc003 INDEX 1.<br>           MODIFY gt_zyc003 FROM gs_zyc003 INDEX 1.<br>           INSERT zyc003 FROM TABLE gt_zyc003.<br>           COMMIT WORK.<br>           CLEAR gs_zyc003.<br>           CLEAR gt_zyc003.<br>           CLEAR gs_alv_zyc003.<br>        ENDIF.<br>        RS_SELFIELD-refresh = &#x27;X&#x27;.<br>    WHEN &#x27;&amp;ZSAVE&#x27;.<br>       CLEAR lt_zyc003.<br>       CLEAR ls_zyc003.<br>*------------将ALV上修改的内容保存到内表---------------------------------*<br>      CALL FUNCTION &#x27;GET_GLOBALS_FROM_SLVC_FULLSCR&#x27;<br>        IMPORTING<br>          e_grid = l_grid.<br>      CALL METHOD l_grid-&gt;check_changed_data.<br>      LOOP AT gt_alv_zyc003 INTO gs_alv_zyc003 WHERE slect = &#x27;X&#x27;.<br>        ls_zyc003-ebeln = gs_alv_zyc003-ebeln.<br>        ls_zyc003-bukrs = gs_alv_zyc003-bukrs.<br>        ls_zyc003-bsart = gs_alv_zyc003-bsart.<br>        ls_zyc003-lifnr = gs_alv_zyc003-lifnr.<br>        ls_zyc003-zterm = gs_alv_zyc003-zterm.<br>        APPEND ls_zyc003 TO lt_zyc003.<br>      ENDLOOP.<br>      UPDATE zyc003 FROM TABLE lt_zyc003.<br>      commit WORK.<br>      rs_selfield-refresh = &#x27;X&#x27;.  &quot;自动刷新<br><br>    WHEN &#x27;&amp;EDIT&#x27;.<br>      LOOP AT gt_alv_zyc003 INTO gs_alv_zyc003.<br>        IF gs_alv_zyc003-slect = &#x27;X&#x27;.<br>            CLEAR gs_alv_zyc003-field_style.<br>            MODIFY gt_alv_zyc003 FROM gs_alv_zyc003.<br>            rs_selfield-refresh = &#x27;X&#x27;.<br>        ENDIF.<br>        CLEAR gs_alv_zyc003.<br>      ENDLOOP.<br>    WHEN &#x27;&amp;SEA&#x27;.<br>      LOOP AT gt_alv_zyc003 INTO gs_alv_zyc003.<br>        gs_alv_zyc003-slect = &#x27;X&#x27;.<br>        MODIFY gt_alv_zyc003 FROM gs_alv_zyc003.<br>        rs_selfield-refresh = &#x27;X&#x27;.<br>        CLEAR gs_alv_zyc003.<br>      ENDLOOP.<br>    WHEN &#x27;&amp;FSEA&#x27;.<br>      LOOP AT gt_alv_zyc003 INTO gs_alv_zyc003.<br>        CLEAR gs_alv_zyc003-slect.<br>        MODIFY gt_alv_zyc003 FROM gs_alv_zyc003.<br>        rs_selfield-refresh = &#x27;X&#x27;.<br>        CLEAR gs_alv_zyc003.<br>      ENDLOOP.<br>     WHEN &#x27;&amp;REMOVE&#x27;.<br>        CLEAR lt_zyc003.<br>        CLEAR ls_zyc003.<br>        LOOP AT gt_alv_zyc003 INTO gs_alv_zyc003 WHERE slect = &#x27;X&#x27;.<br>          ls_zyc003-ebeln = gs_alv_zyc003-ebeln.<br>          ls_zyc003-bukrs = gs_alv_zyc003-bukrs.<br>          ls_zyc003-bsart = gs_alv_zyc003-bsart.<br>          ls_zyc003-lifnr = gs_alv_zyc003-lifnr.<br>          ls_zyc003-zterm = gs_alv_zyc003-zterm.<br>          APPEND ls_zyc003 TO lt_zyc003.<br>        ENDLOOP.<br>        DELETE gt_alv_zyc003 WHERE slect = &#x27;X&#x27;.<br>        DELETE zyc003 FROM TABLE lt_zyc003.<br>        COMMIT WORK.<br>        rs_selfield-refresh = &#x27;X&#x27;.<br>    ENDCASE.<br>ENDFORM.<br><br>FORM alv_status_set USING rT_EXTAB TYPE SLIS_T_EXTAB.<br>    SET PF-STATUS &#x27;ZUI&#x27;.<br>ENDFORM.<br><br>FORM data_changed USING pcl_data TYPE REF TO cl_alv_changed_data_protocol.<br>  data: lt_mod_cell TYPE lvc_t_modi,<br>        ls_mod_cell TYPE lvc_s_modi.<br>  lt_mod_cell = pcl_data-&gt;mt_mod_cells.<br>  LOOP AT lt_mod_cell INTO ls_mod_cell WHERE fieldname = &#x27;lifnr&#x27;.<br>    READ TABLE gt_alv_zyc003 INTO gs_alv_zyc003 INDEX ls_mod_cell-row_id.&quot; 读内表中将要被修改的一行<br>      gs_alv_zyc003-lifnr = ls_mod_cell-value. &quot; ALV界面已经改了，现在把这个修改内容赋值给内表工作区<br>      IF ls_mod_cell-value = &#x27;002&#x27;.<br>        gs_alv_zyc003-rcolr = &#x27;C610&#x27;.<br>        MODIFY gt_alv_zyc003 FROM gs_alv_zyc003 INDEX ls_mod_cell-row_id . &quot;更新内表<br>      ELSE.<br>        gs_alv_zyc003-rcolr = &#x27;&#x27;.<br>        MODIFY gt_alv_zyc003 FROM gs_alv_zyc003 INDEX ls_mod_cell-row_id . &quot;更新内表<br>      ENDIF.<br>      CLEAR gs_alv_zyc003.<br>      PERFORM re_alv.<br>  ENDLOOP.<br><br>ENDFORM.<br><br>FORM re_alv.<br>  DATA:lv_grid  TYPE REF TO CL_GUI_ALV_GRID,<br>       ls_layout TYPE LVC_S_LAYO.&quot;这一句很关键<br>  CALL FUNCTION &#x27;GET_GLOBALS_FROM_SLVC_FULLSCR&#x27;<br>    IMPORTING<br>      E_GRID = lv_grid.<br>* 获取ALV变化过后的布局参数<br>  CALL METHOD LV_GRID-&gt;GET_FRONTEND_LAYOUT<br>    IMPORTING<br>      ES_LAYOUT = ls_layout.<br><br>* 重新回写自适应宽度<br><br>   gs_layout-info_fname = &#x27;rcolr&#x27;.<br><br>* 回写ALV变化过后的布局参数<br>  CALL METHOD LV_GRID-&gt;SET_FRONTEND_LAYOUT<br>    EXPORTING<br>      IS_LAYOUT = ls_layout.<br><br>* 刷新ALV布局<br>  CALL METHOD LV_GRID-&gt;REFRESH_TABLE_DISPLAY.<br>ENDFORM.<br><br>FORM html_top_of_page USING DOCUMENT TYPE REF TO CL_DD_DOCUMENT.<br>     DATA : m_p TYPE I ,<br>            m_buffer TYPE STRING.<br>     CONCATENATE &#x27;&lt;html&gt;&lt;center&gt;&lt;h1&gt;&#x27;<br>                  &#x27;考核程序&#x27;<br>                  &#x27;&lt;/h1&gt;&lt;/center&gt;&lt;/html&gt;&#x27;<br>                  INTO  m_buffer.<br>     CALL  METHOD DOCUMENT-&gt;HTML_INSERT   &quot;使用html insert css布局保证了 标题永远居中<br>     EXPORTING<br>      CONTENTS = m_buffer<br>     CHANGING<br>       POSITION = M_P.<br>ENDFORM.<br></code></pre></td></tr></table></figure><p>zyc_t004top：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">*&amp;---------------------------------------------------------------------*<br>*&amp; 包含               ZYC_T004TOP<br>*&amp;---------------------------------------------------------------------*<br><br>DATA: gt_zyc003 TYPE STANDARD TABLE OF ZYC003,<br>      gs_zyc003 LIKE LINE OF gt_zyc003,<br>      gt_fieldcat TYPE lvc_t_fcat,<br>      gs_fieldcat TYPE lvc_s_fcat.<br><br>TYPES: BEGIN OF gty_alv_zyc003.<br>       INCLUDE STRUCTURE gs_zyc003.<br>TYPES: slect TYPE C,<br>       rcolr TYPE CHAR4,<br>       field_style TYPE LVC_T_STYL,<br>       END OF gty_alv_zyc003.<br><br>DATA: gt_alv_zyc003 TYPE STANDARD TABLE OF gty_alv_zyc003,<br>      gs_alv_zyc003 LIKE LINE OF gt_alv_zyc003,<br>      gs_field_style TYPE LVC_S_STYL,<br>      gs_layout TYPE lvc_S_layo,<br>      gt_event TYPE SLIS_T_EVENT,<br>      gs_event TYPE SLIS_ALV_EVENT,<br>      gs_grid_settings TYPE lvc_s_glay.<br><br>DEFINE %%APPEND_FIELDCAT.<br>  CLEAR gs_fieldcat.<br>  gs_fieldcat-col_pos = &amp;1.<br>  gs_fieldcat-fieldname = &amp;2.<br>  gs_fieldcat-outputlen = &amp;3.<br>  gs_fieldcat-scrtext_m = &amp;4.<br>  gs_fieldcat-edit = &amp;5.<br>  gs_fieldcat-checkbox = &amp;6.<br>  APPEND gs_fieldcat TO gt_fieldcat.<br>END-OF-DEFINITION.<br><br>DEFINE %%APPEND_FIELD_STYLE.<br>  CLEAR gs_field_style.<br>  gs_field_style-fieldname = &amp;1.<br>  gs_field_style-style = &amp;2.<br>  INSERT gs_field_style INTO TABLE gs_alv_zyc003-field_style.<br>END-OF-DEFINITION.<br></code></pre></td></tr></table></figure><p>zyc_t004form：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">*&amp;---------------------------------------------------------------------*<br>*&amp; 包含               ZYC_T004FORM<br>*&amp;---------------------------------------------------------------------*<br>SELECT-OPTIONS s_ebeln FOR gs_zyc003-EBELN.<br>PARAMETERS p_bukrs LIKE EKKO-BUKRS.<br>PARAMETERS p_bsart LIKE EKKO-BSART.<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ABAP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SAP</tag>
      
      <tag>ABAP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>选择屏幕</title>
    <link href="/unrpyc/2023/07/29/SELECT_SCREEN/"/>
    <url>/unrpyc/2023/07/29/SELECT_SCREEN/</url>
    
    <content type="html"><![CDATA[<h1 id="选择屏幕"><a href="#选择屏幕" class="headerlink" title="选择屏幕"></a>选择屏幕</h1><blockquote><p>常常用来做报表程序，例如ALV程序中需要用户取数。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230730201805046.png" alt="选择屏幕界面"></p><h1 id="BlOCK"><a href="#BlOCK" class="headerlink" title="BlOCK"></a>BlOCK</h1><p>将控件放入块中，并设置一个文字标题</p><p>代码定义：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME TITLE TEXT-001.<br>...<br>SELECTION-SCREEN END OF BLOCK b1.<br></code></pre></td></tr></table></figure><h1 id="LINE"><a href="#LINE" class="headerlink" title="LINE"></a>LINE</h1><p>将控件放入LINE中，排列方式将从默认的纵向改为横向</p><p>代码定义：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">SELECTION-SCREEN BEGIN OF LINE.<br>...<br>SELECTION-SCREEN END OF LINE.<br></code></pre></td></tr></table></figure><h1 id="常用控件"><a href="#常用控件" class="headerlink" title="常用控件"></a>常用控件</h1><h3 id="SELECT-OPTIONS（常用）"><a href="#SELECT-OPTIONS（常用）" class="headerlink" title="SELECT-OPTIONS（常用）"></a>SELECT-OPTIONS（常用）</h3><p>可以输入单值、多值 、范围</p><p>还可以使用包含、排除等条件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">SELECT-OPTIONS s_zsuid FOR gs_student-ZSUID NO-EXTENSION NO INTERVALS MODIF ID MD1.<br></code></pre></td></tr></table></figure><h3 id="PARAMETERS（不常用）"><a href="#PARAMETERS（不常用）" class="headerlink" title="PARAMETERS（不常用）"></a>PARAMETERS（不常用）</h3><p><strong>注：一般不会使用，因为使用后输入不能为空！！！</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">PARAMETERS p_mandt LIKE gs_student-MANDT MODIF ID MD1.<br></code></pre></td></tr></table></figure><h3 id="RADIOBUTTON"><a href="#RADIOBUTTON" class="headerlink" title="RADIOBUTTON"></a>RADIOBUTTON</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">SELECTION-SCREEN COMMENT (10) TEXT-001 FOR FIELD r_mode1.<br> PARAMETERS r_mode1 RADIOBUTTON GROUP gpm USER-COMMAND hide.<br> SELECTION-SCREEN COMMENT (10) TEXT-002 FOR FIELD r_mode2.<br> PARAMETERS r_mode2 RADIOBUTTON GROUP gpm.<br> SELECTION-SCREEN COMMENT (10) TEXT-003 FOR FIELD r_mode3.<br> PARAMETERS r_mode3 RADIOBUTTON GROUP gpm.<br></code></pre></td></tr></table></figure><h3 id="CHECKBOX"><a href="#CHECKBOX" class="headerlink" title="CHECKBOX"></a>CHECKBOX</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">PARAMETERS p_xxxx AS CHECKBOX.<br></code></pre></td></tr></table></figure><h3 id="DROP-DOWN-LIST"><a href="#DROP-DOWN-LIST" class="headerlink" title="DROP DOWN LIST"></a>DROP DOWN LIST</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">TYPE-POOLS: vrm.<br><br>DATA: gv_name TYPE vrm_id,<br>      gt_list TYPE vrm_values,<br>      gs_list LIKE LINE OF gt_list.<br><br>PARAMETERS: p_type(10) AS LISTBOX VISIBLE LENGTH 10.<br><br>AT SELECTION-SCREEN OUTPUT.<br><br>  gv_name = &#x27;P_TYPE&#x27;.<br>  gs_list-key = &#x27;1&#x27;.<br>  gs_list-text = &#x27;失败&#x27;.<br>  APPEND gs_list TO gt_list.<br><br>  gs_list-key = &#x27;2&#x27;.<br>  gs_list-text = &#x27;成功&#x27;.<br>  APPEND gs_list TO gt_list.<br><br>  gs_list-key = &#x27;3&#x27;.<br>  gs_list-text = &#x27;全部&#x27;.<br>  APPEND gs_list TO gt_list.<br><br>  CALL FUNCTION &#x27;VRM_SET_VALUES&#x27; EXPORTING id = gv_name values = gt_list.<br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230731014724123.png" alt="image-20230731014724123"></p><h1 id="常用后缀"><a href="#常用后缀" class="headerlink" title="常用后缀"></a>常用后缀</h1><p><code>NO-EXTENSION</code>：限制选择表为单行，后面不会出现扩展按钮（SELECT-OPTIONS）</p><p><code>NO INTERVALS</code>：会出现LOW字段，To后面的HIGH字段不出现在选择屏幕上，但是用户仍然可以在<strong>Mutiple Selection</strong>窗口中输入范围选择，也就是说如果没有设置NO-EXTENSION用户仍然可以输入非单行（SELECT-OPTIONS）</p><p><code>MODIF ID</code>：分组标识（ALL）</p><p><code>OBLIGATORY</code>：标识参数为必输项，只有前面一个框框中出现扩展按钮，第二个框没有，也就是说该选项只能LOW字段有效</p><p><code>DEFAULT</code>：使用后缀为参数指定缺省值</p><h1 id="文本元素"><a href="#文本元素" class="headerlink" title="文本元素"></a>文本元素</h1><blockquote><p>设置控件文本，或者块标题</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230730204717066.png" alt="文本元素步骤一"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230730204757156.png" alt="文本符号"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230730204901310.png" alt="选择文本"></p><h1 id="PBO与PAI-生命周期？"><a href="#PBO与PAI-生命周期？" class="headerlink" title="PBO与PAI(生命周期？)"></a>PBO与PAI(生命周期？)</h1><blockquote><p>PBO（Process Before Output）：就是在屏幕输出之前做的一些操作，例如：控制按钮的显示和键值、屏幕初始化的操作等</p></blockquote><blockquote><p>PAI（Process After Input）：就是在屏幕已经展示出来，在屏幕上做的操作,会触发PAI，例如：点击按钮触发的事件可以在PAI中去定义。</p></blockquote><p>PBO与PAI与屏幕的生命周期：</p><p>PBO -&gt; 屏幕 -&gt; PAI -&gt; （另一屏幕的）PBO -&gt; 另一屏幕 -&gt; PAI （另一屏幕的）-&gt; PBO（另一屏幕的）… … </p><h1 id="选择屏幕的生命周期"><a href="#选择屏幕的生命周期" class="headerlink" title="选择屏幕的生命周期"></a>选择屏幕的生命周期</h1><p>INITIALIZATION -&gt; START-OF-SELECTION -&gt; AT SELECTION-SCREEN -&gt; END-OF-SELECTION -&gt; AT SELECTION-SCREEN</p><p><code>INITIALIZATION</code>：初始化</p><p>进行一些非选择屏幕空间数据的初始化，例如给选择屏幕添加一个功能按钮：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">functxt-icon_id = ICON_INTENSIFY.<br>functxt-icon_text = &#x27;维护学生信息表&#x27;.<br>sscrfields-functxt_01 = functxt.<br></code></pre></td></tr></table></figure><p><code>START-OF-SELECTION</code>：取数逻辑</p><p>取数逻辑例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">FORM get_data .<br> CLEAR gt_student.<br> SELECT zsuid,mandt,zsname,zschool,zsage,zssex<br>    FROM ztyc001<br>    INTO CORRESPONDING FIELDS OF TABLE @gt_student<br>    WHERE zsuid IN @s_zsuid<br>    AND zsname IN @s_zsname<br>    AND zschool IN @s_school<br> AND zsage IN @s_zsage<br> AND zssex = @r_sex.<br>ENDFORM.<br></code></pre></td></tr></table></figure><p><code>AT SELECTION-SCREEN</code>：屏幕事件</p><p>（1）.其实就像一个FORM，所以在这个事件里声明的变量都是局部变量。</p><p>（2）.根据SY-UCOMM这个系统变量可以判断用户的命令</p><p>（3）.在这个事件里响应的是屏幕上选择条件中的事件，例如CHECKBOX的选择与否，RADIOBUTTON的选择，LISTBOX的选择等等。</p><p>所以分为以下几个方面：</p><ol><li>… ON field ：在PARAMETER变化时触发的事件，对于选择屏幕某字段输入的PAI事件，当该字段的值被传递给程序时被触发，可以应用于改字段本身的正确性检查，如可系统提示错误，则可以在该字段中重新输入，此时其他元素呈灰色，不接受输入</li><li>… ON END OF sel ：SELECT-OPTION触发的事件,用于整个选择表输入结束后各行的检查</li><li>… ON VALUE-REQUEST FOR psel_low_high ：当光标位于某屏幕字段时，选择的帮助(F4)</li><li>… ON HELP-REQUEST FOR psel_low_high ：当光标位于某屏幕字段时，选择的帮助(F1)</li><li>… ON RADIOBUTTON GROUP radi ：单选按钮事件，必须进行整体输入检查</li><li>… ON BLOCK block ：框架的触发事件</li><li>… OUTPUT ：响应屏幕上的事件，修改选择屏幕的唯一方法</li></ol><p>在上面定义了一个功能按钮，如果要做监听就可以在此处通过SY-UCOMM判断：</p><p><strong>注：FC01表示添加的第一个按钮，依次类推<code>FC02</code>表示第二个，<code>FC03</code>表示……</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">IF sscrfields-ucomm = &#x27;FC01&#x27;.<br> PERFORM FRM_CALL_SM30 USING &#x27;ZTYC001&#x27;.<br>ENDIF.<br></code></pre></td></tr></table></figure><p><code>AT SELECTION-SCREEN OUTPUT</code>：PBO事件</p><p><code>END-OF-SELECTION</code>：显示数据</p><h1 id="动态显示"><a href="#动态显示" class="headerlink" title="动态显示"></a>动态显示</h1><p><strong>特别提醒：如果需要做动态显示，那么被切换的控件里一定不能有默认数据，如<code>SELECT-OPTION</code>里面有默认数据，会导致无法切换。（是否有解决办法呢？）</strong></p><p>顾名思义，就是将控件分成不同组别，进行动态切换显示的效果，依靠<code>MODIF ID</code>后缀实现。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">*&amp;---------------------------------------------------------------------*<br> *&amp; 包含        ZYC_T002FORM<br> *&amp;---------------------------------------------------------------------*<br> SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME TITLE TEXT-001.<br>  SELECT-OPTIONS s_zsuid FOR gs_student-ZSUID NO-EXTENSION NO INTERVALS MODIF ID MD1.<br>  PARAMETERS p_mandt LIKE gs_student-MANDT MODIF ID MD1.<br>  SELECT-OPTIONS s_zsname FOR gs_student-ZSNAME NO-EXTENSION NO INTERVALS MODIF ID MD1.<br>  SELECT-OPTIONS s_school FOR gs_student-ZSCHOOL NO-EXTENSION NO INTERVALS MODIF ID MD1.<br> SELECTION-SCREEN END OF BLOCK b1.<br><br> SELECTION-SCREEN BEGIN OF BLOCK b2 WITH FRAME TITLE TEXT-002.<br>  SELECT-OPTIONS s_zsage FOR gs_student-ZSAGE DEFAULT 1 to 10 MODIF ID MD2. .<br> SELECTION-SCREEN END OF BLOCK b2.<br><br> SELECTION-SCREEN BEGIN OF BLOCK b3 WITH FRAME TITLE TEXT-003.<br>PARAMETERS r_male RADIOBUTTON GROUP gps USER-COMMAND set MODIF ID MD3.<br>PARAMETERS r_female RADIOBUTTON GROUP gps MODIF ID MD3.<br><br> SELECTION-SCREEN END OF BLOCK b3.<br><br> SELECTION-SCREEN BEGIN OF BLOCK b4 WITH FRAME TITLE TEXT-004.<br>   SELECTION-SCREEN BEGIN OF LINE.<br>   SELECTION-SCREEN COMMENT (10) TEXT-001 FOR FIELD r_mode1.<br>    PARAMETERS r_mode1 RADIOBUTTON GROUP gpm USER-COMMAND hide.<br>    SELECTION-SCREEN COMMENT (10) TEXT-002 FOR FIELD r_mode2.<br>    PARAMETERS r_mode2 RADIOBUTTON GROUP gpm.<br>    SELECTION-SCREEN COMMENT (10) TEXT-003 FOR FIELD r_mode3.<br>    PARAMETERS r_mode3 RADIOBUTTON GROUP gpm.<br>  SELECTION-SCREEN END OF LINE.<br> SELECTION-SCREEN END OF BLOCK b4.<br><br> SELECTION-SCREEN FUNCTION KEY 1.<br></code></pre></td></tr></table></figure><p>由此上代码可以看出，屏幕控件被分为了三组，分别为MD1、MD2、MD3</p><p>在第四块中将需要触发动态屏幕的RADIOBUTTON后面定义USER-COMMAND组，来实现指令，换种说法，也就是让SAP知道点击这里需要触发事件。</p><p>在 AT SELECTION-SCREEN OUTPUT下面写具体的需要控制的条件，也就是在PBO中便利屏幕元素并控制其显示或隐藏，当在第四块中点击RADIOBUTTON，屏幕会刷新，也会从新执行PBO事件，所以选择屏幕上的控件也会发生变化。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">AT SELECTION-SCREEN OUTPUT.<br>PERFORM pbo.<br>  <br> FORM pbo .<br>  LOOP AT SCREEN.<br>   IF r_male = &#x27;X&#x27;.<br>    r_sex = &#x27;M&#x27;.<br>   ENDIF.<br>   IF r_female = &#x27;X&#x27;.<br>    r_sex = &#x27;F&#x27;.<br>   ENDIF.<br>   IF r_mode1 = &#x27;X&#x27;.<br>   ELSE.<br>    IF screen-group1 = &#x27;MD1&#x27;.<br>     screen-active = &#x27;0&#x27;.<br>     MODIFY SCREEN.<br>    ENDIF.<br>   ENDIF.<br><br>   IF r_mode2 = &#x27;X&#x27;.<br>   ELSE.<br>    IF screen-group1 = &#x27;MD2&#x27;.<br>     screen-active = &#x27;0&#x27;.<br>     MODIFY SCREEN.<br>    ENDIF.<br>   ENDIF.<br><br>   IF r_mode3 = &#x27;X&#x27;.<br>   ELSE.<br>    IF screen-group1 = &#x27;MD3&#x27;.<br>     screen-active = &#x27;0&#x27;.<br>     MODIFY SCREEN.<br>    ENDIF.<br>   ENDIF.<br>  ENDLOOP.<br> ENDFORM.<br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230730203451409.png" alt="动态切换1"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230730203653808.png" alt="动态切换2"></p><p><img src="https://cdn.jsdelivr.net/gh/Yan-Cam/blogPictureHost/image-20230730203758924.png" alt="动态切换3"></p><h1 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h1><p>ZYC_T002：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">*[&amp;---------------------------------------------------------------------*<br> *&amp; Report ZYC_T002<br> *&amp;---------------------------------------------------------------------*<br> *&amp;<br> *&amp;---------------------------------------------------------------------*<br> REPORT zyc_t002 NO STANDARD PAGE HEADING.<br> INCLUDE zyc_t002top.<br> INCLUDE zyc_t002form.<br><br> INITIALIZATION.<br>  r_mode1 = &#x27;X&#x27;.<br>  r_male = &#x27;X&#x27;.<br>  r_sex = &#x27;M&#x27;.<br>  functxt-icon_id = ICON_INTENSIFY.<br>  functxt-icon_text = &#x27;维护学生信息表&#x27;.<br>  sscrfields-functxt_01 = functxt.<br><br> START-OF-SELECTION.<br>  PERFORM get_data.<br><br> AT SELECTION-SCREEN.<br>  IF sscrfields-ucomm = &#x27;FC01&#x27;.<br>   PERFORM FRM_CALL_SM30 USING &#x27;ZTYC001&#x27;.<br>  ENDIF.<br><br> END-OF-SELECTION.<br>  PERFORM display_data.<br><br> AT SELECTION-SCREEN OUTPUT.<br>  PERFORM pbo.<br> *&amp;---------------------------------------------------------------------*<br> *&amp; Form GET_DATA<br> *&amp;---------------------------------------------------------------------*<br> *&amp; text<br> *&amp;---------------------------------------------------------------------*<br> *&amp; --&gt; p1    text<br> *&amp; &lt;-- p2    text<br> *&amp;---------------------------------------------------------------------*<br> FORM get_data .<br>  CLEAR gt_student.<br>  SELECT zsuid,mandt,zsname,zschool,zsage,zssex<br>     FROM ztyc001<br>     INTO CORRESPONDING FIELDS OF TABLE @gt_student<br>     WHERE zsuid IN @s_zsuid<br>     AND zsname IN @s_zsname<br>     AND zschool IN @s_school<br>  AND zsage IN @s_zsage<br>  AND zssex = @r_sex.<br> ENDFORM.<br> *&amp;---------------------------------------------------------------------*<br> *&amp; Form display_data<br> *&amp;---------------------------------------------------------------------*<br> *&amp; text<br> *&amp;---------------------------------------------------------------------*<br> *&amp; --&gt; p1    text<br> *&amp; &lt;-- p2    text<br> *&amp;---------------------------------------------------------------------*<br> FORM display_data .<br>  IF gt_student IS NOT INITIAL.<br>   CLEAR gs_student.<br>   WRITE: /1(55) sy-uline .<br>   WRITE:/1 sy-vline NO-GAP,(10) &#x27;学号&#x27; NO-GAP CENTERED,<br>        sy-vline NO-GAP,(10) &#x27;性别&#x27; NO-GAP CENTERED,<br>        sy-vline NO-GAP,(10) &#x27;年龄&#x27; NO-GAP CENTERED,<br>        sy-vline NO-GAP,(10) &#x27;姓名&#x27; NO-GAP CENTERED,<br>        sy-vline NO-GAP,(10) &#x27;学校代码&#x27; NO-GAP CENTERED,<br>        sy-vline NO-GAP.<br>   WRITE: /1(55) sy-uline .<br>   LOOP AT gt_student INTO gs_student.<br>    WRITE:/1 sy-vline NO-GAP,(10) gs_student-zsuid NO-GAP CENTERED,<br>         sy-vline NO-GAP,(10) gs_student-zssex NO-GAP CENTERED,<br>         sy-vline NO-GAP,(10) gs_student-zsage NO-GAP CENTERED,<br>         sy-vline NO-GAP,(10) gs_student-zsname NO-GAP CENTERED,<br>         sy-vline NO-GAP,(10) gs_student-zschool NO-GAP CENTERED,<br>         sy-vline NO-GAP..<br>    CLEAR gs_student.<br>    WRITE: /1(55) sy-uline.<br>   ENDLOOP.<br>  ELSE.<br>   WRITE &#x27;暂无数据&#x27;.<br>  ENDIF.<br> ENDFORM.<br> *&amp;---------------------------------------------------------------------*<br> *&amp; Form pbo<br> *&amp;---------------------------------------------------------------------*<br> *&amp; text<br> *&amp;---------------------------------------------------------------------*<br> *&amp; --&gt; p1    text<br> *&amp; &lt;-- p2    text<br> *&amp;---------------------------------------------------------------------*<br> FORM pbo .<br>  LOOP AT SCREEN.<br>   IF r_male = &#x27;X&#x27;.<br>    r_sex = &#x27;M&#x27;.<br>   ENDIF.<br>   IF r_female = &#x27;X&#x27;.<br>    r_sex = &#x27;F&#x27;.<br>   ENDIF.<br>   IF r_mode1 = &#x27;X&#x27;.<br>   ELSE.<br>    IF screen-group1 = &#x27;MD1&#x27;.<br>     screen-active = &#x27;0&#x27;.<br>     MODIFY SCREEN.<br>    ENDIF.<br>   ENDIF.<br><br>   IF r_mode2 = &#x27;X&#x27;.<br>   ELSE.<br>    IF screen-group1 = &#x27;MD2&#x27;.<br>     screen-active = &#x27;0&#x27;.<br>     MODIFY SCREEN.<br>    ENDIF.<br>   ENDIF.<br><br>   IF r_mode3 = &#x27;X&#x27;.<br>   ELSE.<br>    IF screen-group1 = &#x27;MD3&#x27;.<br>     screen-active = &#x27;0&#x27;.<br>     MODIFY SCREEN.<br>    ENDIF.<br>   ENDIF.<br>  ENDLOOP.<br> ENDFORM.<br><br> *&amp;---------------------------------------------------------------------*<br> *&amp; Form frm_call_sm30<br> *&amp;---------------------------------------------------------------------*<br> *&amp; text<br> *&amp;---------------------------------------------------------------------*<br> *&amp;   --&gt; P_<br> *&amp;   --&gt; WHEN<br> *&amp;   --&gt; P_<br> *&amp;---------------------------------------------------------------------*<br> FORM frm_call_sm30 USING p_name TYPE dd02v-tabname.<br><br>  CALL FUNCTION &#x27;VIEW_MAINTENANCE_CALL&#x27;<br>   EXPORTING<br>    action            = &#x27;U&#x27;<br>    view_name          = p_name<br>    no_warning_for_clientindep  = &#x27;X&#x27;<br>   EXCEPTIONS<br>    client_reference       = 1<br>    foreign_lock         = 2<br>    invalid_action        = 3<br>    no_clientindependent_auth  = 4<br>    no_database_function     = 5<br>    no_editor_function      = 6<br>    no_show_auth         = 7<br>    no_tvdir_entry        = 8<br>    no_upd_auth         = 9<br>    only_show_allowed      = 10<br>    system_failure        = 11<br>    unknown_field_in_dba_sellist = 12<br>    view_not_found        = 13<br>    OTHERS            = 14.<br> ENDFORM.<br></code></pre></td></tr></table></figure><p>zyc_t002top：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">TYPES gty_student TYPE STANDARD TABLE OF ZTYC001.<br> TABLES: /SCWM/AQUA,SSCRFIELDS.<br> DATA: gt_student TYPE gty_student,<br>    gs_student LIKE LINE OF gt_student,<br>    r_sex LIKE gs_student-ZSSEX,<br>    functxt TYPE SMP_DYNTXT.<br></code></pre></td></tr></table></figure><p>zyc_t002form：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs ABAP">*&amp;---------------------------------------------------------------------*<br> *&amp; 包含        ZYC_T002FORM<br> *&amp;---------------------------------------------------------------------*<br> SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME TITLE TEXT-001.<br>  SELECT-OPTIONS s_zsuid FOR gs_student-ZSUID NO-EXTENSION NO INTERVALS MODIF ID MD1.<br>  PARAMETERS p_mandt LIKE gs_student-MANDT MODIF ID MD1.<br>  SELECT-OPTIONS s_zsname FOR gs_student-ZSNAME NO-EXTENSION NO INTERVALS MODIF ID MD1.<br>  SELECT-OPTIONS s_school FOR gs_student-ZSCHOOL NO-EXTENSION NO INTERVALS MODIF ID MD1.<br> SELECTION-SCREEN END OF BLOCK b1.<br><br> SELECTION-SCREEN BEGIN OF BLOCK b2 WITH FRAME TITLE TEXT-002.<br>  SELECT-OPTIONS s_zsage FOR gs_student-ZSAGE DEFAULT 1 to 10 MODIF ID MD2. .<br> SELECTION-SCREEN END OF BLOCK b2.<br><br> SELECTION-SCREEN BEGIN OF BLOCK b3 WITH FRAME TITLE TEXT-003.<br>PARAMETERS r_male RADIOBUTTON GROUP gps USER-COMMAND set MODIF ID MD3.<br>PARAMETERS r_female RADIOBUTTON GROUP gps MODIF ID MD3.<br><br> SELECTION-SCREEN END OF BLOCK b3.<br><br> SELECTION-SCREEN BEGIN OF BLOCK b4 WITH FRAME TITLE TEXT-004.<br>   SELECTION-SCREEN BEGIN OF LINE.<br>   SELECTION-SCREEN COMMENT (10) TEXT-001 FOR FIELD r_mode1.<br>    PARAMETERS r_mode1 RADIOBUTTON GROUP gpm USER-COMMAND hide.<br>    SELECTION-SCREEN COMMENT (10) TEXT-002 FOR FIELD r_mode2.<br>    PARAMETERS r_mode2 RADIOBUTTON GROUP gpm.<br>    SELECTION-SCREEN COMMENT (10) TEXT-003 FOR FIELD r_mode3.<br>    PARAMETERS r_mode3 RADIOBUTTON GROUP gpm.<br>  SELECTION-SCREEN END OF LINE.<br> SELECTION-SCREEN END OF BLOCK b4.<br><br> SELECTION-SCREEN FUNCTION KEY 1.<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ABAP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SAP</tag>
      
      <tag>ABAP</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
